
LabExc02-SRAM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000100  00800100  00000b2c  00000bc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800200  00800200  00000cc0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cc0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004f5  00000000  00000000  00000dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000033d  00000000  00000000  000012b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000faf  00000000  00000000  000015f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000170  00000000  00000000  000025a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000d6ce  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000027f  00000000  00000000  0000fde6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00010065  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000036f4  00000000  00000000  000100cd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	37 c0       	rjmp	.+110    	; 0x70 <__ctors_end>
   2:	00 00       	nop
   4:	50 c0       	rjmp	.+160    	; 0xa6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c0       	rjmp	.+156    	; 0xa6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c0       	rjmp	.+152    	; 0xa6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c0       	rjmp	.+148    	; 0xa6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c0       	rjmp	.+144    	; 0xa6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c0       	rjmp	.+140    	; 0xa6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c0       	rjmp	.+136    	; 0xa6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c0       	rjmp	.+132    	; 0xa6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c0       	rjmp	.+128    	; 0xa6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c0       	rjmp	.+124    	; 0xa6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c0       	rjmp	.+120    	; 0xa6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c0       	rjmp	.+116    	; 0xa6 <__bad_interrupt>
  32:	00 00       	nop
  34:	38 c0       	rjmp	.+112    	; 0xa6 <__bad_interrupt>
  36:	00 00       	nop
  38:	36 c0       	rjmp	.+108    	; 0xa6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c0       	rjmp	.+104    	; 0xa6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c0       	rjmp	.+100    	; 0xa6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c0       	rjmp	.+96     	; 0xa6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c0       	rjmp	.+92     	; 0xa6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	e9 c0       	rjmp	.+466    	; 0x220 <__vector_19>
  4e:	00 00       	nop
  50:	2a c0       	rjmp	.+84     	; 0xa6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c0       	rjmp	.+80     	; 0xa6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c0       	rjmp	.+76     	; 0xa6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c0       	rjmp	.+72     	; 0xa6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c0       	rjmp	.+68     	; 0xa6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c0       	rjmp	.+64     	; 0xa6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c0       	rjmp	.+60     	; 0xa6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c0       	rjmp	.+56     	; 0xa6 <__bad_interrupt>
	...

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e2       	ldi	r30, 0x2C	; 44
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a0 30       	cpi	r26, 0x00	; 0
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 30       	cpi	r26, 0x0C	; 12
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	b5 d0       	rcall	.+362    	; 0x20e <main>
  a4:	41 c5       	rjmp	.+2690   	; 0xb28 <_exit>

000000a6 <__bad_interrupt>:
  a6:	ac cf       	rjmp	.-168    	; 0x0 <__vectors>

000000a8 <xmemInit>:
#include "XMEM.h"

void xmemInit(void)
{
	/* External memory interface enable */ //no wait state during read/write strobe (not nec. with current clock)
	MCUCR = (1<<SRE)|(0<<SRW10);   
  a8:	80 e8       	ldi	r24, 0x80	; 128
  aa:	85 bf       	out	0x35, r24	; 53

	
	
	
	EMCUCR = (0<<SRL2)|(0<<SRL1)|(0<<SRL0)|(0<<SRW01)|(0<<SRW00)|(0<<SRW11);
  ac:	16 be       	out	0x36, r1	; 54
		* Upper sector = 0x1100 - 0xFFFF
		* No wait cycles for upper sector
	*/
	
	//SFIOR=(1<<XMM1)|(1<<XMM0);
	SFIOR = (0<<XMBK)|(0<<XMM2)|(0<<XMM1)|(0<<XMM0);
  ae:	10 be       	out	0x30, r1	; 48
  b0:	08 95       	ret

000000b2 <xmemTest>:
	*/
	
}

void xmemTest()
{
  b2:	cf 92       	push	r12
  b4:	df 92       	push	r13
  b6:	ef 92       	push	r14
  b8:	ff 92       	push	r15
  ba:	0f 93       	push	r16
  bc:	1f 93       	push	r17
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800;  // Start address for the XMEM   
	unsigned int i, werrors, rerrors; 
	werrors = 0;  rerrors = 0;
	unsigned char testvalue;
	
	printf("Starting XMEM test...\r\n");   
  c2:	86 e0       	ldi	r24, 0x06	; 6
  c4:	91 e0       	ldi	r25, 0x01	; 1
  c6:	1b d1       	rcall	.+566    	; 0x2fe <puts>
  c8:	dd 24       	eor	r13, r13
  ca:	da 94       	dec	r13

void xmemTest()
{
	volatile char *ext_ram = (char *) 0x1800;  // Start address for the XMEM   
	unsigned int i, werrors, rerrors; 
	werrors = 0;  rerrors = 0;
  cc:	00 e0       	ldi	r16, 0x00	; 0
  ce:	10 e0       	ldi	r17, 0x00	; 0
	unsigned char testvalue;
	
	printf("Starting XMEM test...\r\n");   
	
	for (i = 0; i < 0x800; i++) 
  d0:	c0 e0       	ldi	r28, 0x00	; 0
  d2:	d0 e0       	ldi	r29, 0x00	; 0
	{
		testvalue = ~(i % 256);   
		ext_ram[i] = testvalue;   
		if (ext_ram[i] != testvalue) 
		{
			printf("XMEM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
  d4:	0f 2e       	mov	r0, r31
  d6:	fd e1       	ldi	r31, 0x1D	; 29
  d8:	ef 2e       	mov	r14, r31
  da:	f1 e0       	ldi	r31, 0x01	; 1
  dc:	ff 2e       	mov	r15, r31
  de:	f0 2d       	mov	r31, r0
  e0:	fe 01       	movw	r30, r28
  e2:	f8 5e       	subi	r31, 0xE8	; 232
	printf("Starting XMEM test...\r\n");   
	
	for (i = 0; i < 0x800; i++) 
	{
		testvalue = ~(i % 256);   
		ext_ram[i] = testvalue;   
  e4:	d0 82       	st	Z, r13
		if (ext_ram[i] != testvalue) 
  e6:	20 81       	ld	r18, Z
  e8:	8d 2d       	mov	r24, r13
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	33 27       	eor	r19, r19
  ee:	27 fd       	sbrc	r18, 7
  f0:	30 95       	com	r19
  f2:	28 17       	cp	r18, r24
  f4:	39 07       	cpc	r19, r25
  f6:	c1 f0       	breq	.+48     	; 0x128 <xmemTest+0x76>
		{
			printf("XMEM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
  f8:	20 81       	ld	r18, Z
  fa:	1f 92       	push	r1
  fc:	df 92       	push	r13
  fe:	82 2f       	mov	r24, r18
 100:	99 27       	eor	r25, r25
 102:	87 fd       	sbrc	r24, 7
 104:	90 95       	com	r25
 106:	9f 93       	push	r25
 108:	2f 93       	push	r18
 10a:	df 93       	push	r29
 10c:	cf 93       	push	r28
 10e:	ff 92       	push	r15
 110:	ef 92       	push	r14
 112:	e4 d0       	rcall	.+456    	; 0x2dc <printf>
			werrors++;   
 114:	0f 5f       	subi	r16, 0xFF	; 255
 116:	1f 4f       	sbci	r17, 0xFF	; 255
 118:	8d b7       	in	r24, 0x3d	; 61
 11a:	9e b7       	in	r25, 0x3e	; 62
 11c:	08 96       	adiw	r24, 0x08	; 8
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	f8 94       	cli
 122:	9e bf       	out	0x3e, r25	; 62
 124:	0f be       	out	0x3f, r0	; 63
 126:	8d bf       	out	0x3d, r24	; 61
	werrors = 0;  rerrors = 0;
	unsigned char testvalue;
	
	printf("Starting XMEM test...\r\n");   
	
	for (i = 0; i < 0x800; i++) 
 128:	21 96       	adiw	r28, 0x01	; 1
 12a:	da 94       	dec	r13
 12c:	c1 15       	cp	r28, r1
 12e:	98 e0       	ldi	r25, 0x08	; 8
 130:	d9 07       	cpc	r29, r25
 132:	b1 f6       	brne	.-84     	; 0xe0 <xmemTest+0x2e>
 134:	e1 2c       	mov	r14, r1
 136:	f1 2c       	mov	r15, r1
 138:	c0 e0       	ldi	r28, 0x00	; 0
 13a:	d0 e0       	ldi	r29, 0x00	; 0
	for (i = 0; i < 0x800; i++) 
	{
		testvalue = ~(i % 256);
		if (ext_ram[i] != testvalue) 
		{
			printf("XMEM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
 13c:	0f 2e       	mov	r0, r31
 13e:	fd e5       	ldi	r31, 0x5D	; 93
 140:	cf 2e       	mov	r12, r31
 142:	f1 e0       	ldi	r31, 0x01	; 1
 144:	df 2e       	mov	r13, r31
 146:	f0 2d       	mov	r31, r0
 148:	fe 01       	movw	r30, r28
 14a:	f8 5e       	subi	r31, 0xE8	; 232
		}  
	}
	for (i = 0; i < 0x800; i++) 
	{
		testvalue = ~(i % 256);
		if (ext_ram[i] != testvalue) 
 14c:	20 81       	ld	r18, Z
 14e:	4c 2f       	mov	r20, r28
 150:	40 95       	com	r20
 152:	84 2f       	mov	r24, r20
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	33 27       	eor	r19, r19
 158:	27 fd       	sbrc	r18, 7
 15a:	30 95       	com	r19
 15c:	28 17       	cp	r18, r24
 15e:	39 07       	cpc	r19, r25
 160:	c9 f0       	breq	.+50     	; 0x194 <xmemTest+0xe2>
		{
			printf("XMEM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
 162:	20 81       	ld	r18, Z
 164:	1f 92       	push	r1
 166:	4f 93       	push	r20
 168:	82 2f       	mov	r24, r18
 16a:	99 27       	eor	r25, r25
 16c:	87 fd       	sbrc	r24, 7
 16e:	90 95       	com	r25
 170:	9f 93       	push	r25
 172:	2f 93       	push	r18
 174:	df 93       	push	r29
 176:	cf 93       	push	r28
 178:	df 92       	push	r13
 17a:	cf 92       	push	r12
 17c:	af d0       	rcall	.+350    	; 0x2dc <printf>
			rerrors++;
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	e8 1a       	sub	r14, r24
 182:	f8 0a       	sbc	r15, r24
 184:	8d b7       	in	r24, 0x3d	; 61
 186:	9e b7       	in	r25, 0x3e	; 62
 188:	08 96       	adiw	r24, 0x08	; 8
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	f8 94       	cli
 18e:	9e bf       	out	0x3e, r25	; 62
 190:	0f be       	out	0x3f, r0	; 63
 192:	8d bf       	out	0x3d, r24	; 61
		{
			printf("XMEM error (write phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
			werrors++;   
		}  
	}
	for (i = 0; i < 0x800; i++) 
 194:	21 96       	adiw	r28, 0x01	; 1
 196:	c1 15       	cp	r28, r1
 198:	98 e0       	ldi	r25, 0x08	; 8
 19a:	d9 07       	cpc	r29, r25
 19c:	a9 f6       	brne	.-86     	; 0x148 <xmemTest+0x96>
			printf("XMEM error (read phase): ext_ram[%d] = %02X (should be %02X)\r\n", i, ext_ram[i], testvalue);
			rerrors++;
		}
	}   
	
	printf("XMEM test completed with %d errors in write phase and %d errors in read phase\r\n", werrors, rerrors); 
 19e:	ff 92       	push	r15
 1a0:	ef 92       	push	r14
 1a2:	1f 93       	push	r17
 1a4:	0f 93       	push	r16
 1a6:	8c e9       	ldi	r24, 0x9C	; 156
 1a8:	91 e0       	ldi	r25, 0x01	; 1
 1aa:	9f 93       	push	r25
 1ac:	8f 93       	push	r24
 1ae:	96 d0       	rcall	.+300    	; 0x2dc <printf>
 1b0:	0f 90       	pop	r0
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
 1b6:	0f 90       	pop	r0
 1b8:	0f 90       	pop	r0
 1ba:	0f 90       	pop	r0
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	1f 91       	pop	r17
 1c2:	0f 91       	pop	r16
 1c4:	ff 90       	pop	r15
 1c6:	ef 90       	pop	r14
 1c8:	df 90       	pop	r13
 1ca:	cf 90       	pop	r12
 1cc:	08 95       	ret

000001ce <usartSendByte>:
uint8_t usartReceiveByte(void)
{
	while((UCSR0A&(1<<RXC0))==0);//---------------------------//wait until data is received
	
	return UDR0;//-------------------------------------------//return received data
}
 1ce:	5d 9b       	sbis	0x0b, 5	; 11
 1d0:	fe cf       	rjmp	.-4      	; 0x1ce <usartSendByte>
 1d2:	8c b9       	out	0x0c, r24	; 12
 1d4:	08 95       	ret

000001d6 <usartInitialize>:
 1d6:	59 98       	cbi	0x0b, 1	; 11
 1d8:	8f e1       	ldi	r24, 0x1F	; 31
 1da:	89 b9       	out	0x09, r24	; 9
 1dc:	10 bc       	out	0x20, r1	; 32
 1de:	88 e1       	ldi	r24, 0x18	; 24
 1e0:	8a b9       	out	0x0a, r24	; 10
 1e2:	8e ea       	ldi	r24, 0xAE	; 174
 1e4:	80 bd       	out	0x20, r24	; 32
 1e6:	60 e0       	ldi	r22, 0x00	; 0
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	87 ee       	ldi	r24, 0xE7	; 231
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	2c c0       	rjmp	.+88     	; 0x248 <fdevopen>
 1f0:	08 95       	ret

000001f2 <usartSendDataString>:

///<summary>
///Send a string of data using USART
///</summary>
void usartSendDataString(const char *dataString)
{
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	ec 01       	movw	r28, r24
	while(*dataString)
 1f8:	88 81       	ld	r24, Y
 1fa:	88 23       	and	r24, r24
 1fc:	29 f0       	breq	.+10     	; 0x208 <usartSendDataString+0x16>
 1fe:	21 96       	adiw	r28, 0x01	; 1
	{
		usartSendByte(*dataString);
 200:	e6 df       	rcall	.-52     	; 0x1ce <usartSendByte>
///<summary>
///Send a string of data using USART
///</summary>
void usartSendDataString(const char *dataString)
{
	while(*dataString)
 202:	89 91       	ld	r24, Y+
 204:	81 11       	cpse	r24, r1
 206:	fc cf       	rjmp	.-8      	; 0x200 <usartSendDataString+0xe>
	{
		usartSendByte(*dataString);
		dataString++;
	}
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <main>:
	
	// dummy for testing USART
	char *dataString="\r......Booting up.\r";
		
	//init. USART
	usartInitialize();//--------*****-////TO DO: implement light diode blink if(usartInitialize()); else ERROR BLINK CODE.. also write reference for blinking code...
 20e:	e3 df       	rcall	.-58     	; 0x1d6 <usartInitialize>
	
	//Send a string of data
	usartSendDataString(dataString);
 210:	8c ee       	ldi	r24, 0xEC	; 236
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	ee df       	rcall	.-36     	; 0x1f2 <usartSendDataString>
			byteOfData=usartReceiveByte();
			usartSendByte(byteOfData);
		}
	}
	*/
	xmemInit();
 216:	48 df       	rcall	.-368    	; 0xa8 <xmemInit>
	xmemTest();
 218:	4c df       	rcall	.-360    	; 0xb2 <xmemTest>
}
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	08 95       	ret

00000220 <__vector_19>:

//interrupt function
ISR (USART0_RXC_vect,ISR_BLOCK)
{
 220:	1f 92       	push	r1
 222:	0f 92       	push	r0
 224:	0f b6       	in	r0, 0x3f	; 63
 226:	0f 92       	push	r0
 228:	11 24       	eor	r1, r1
 22a:	8f 93       	push	r24
	if (interruptOn)
 22c:	80 91 01 02 	lds	r24, 0x0201
 230:	88 23       	and	r24, r24
 232:	21 f0       	breq	.+8      	; 0x23c <__vector_19+0x1c>
	{
		byteOfData=UDR0;//grab byte
 234:	8c b1       	in	r24, 0x0c	; 12
 236:	80 93 00 02 	sts	0x0200, r24
		UDR0=byteOfData;//echo grabbed byte
 23a:	8c b9       	out	0x0c, r24	; 12
	}
}
 23c:	8f 91       	pop	r24
 23e:	0f 90       	pop	r0
 240:	0f be       	out	0x3f, r0	; 63
 242:	0f 90       	pop	r0
 244:	1f 90       	pop	r1
 246:	18 95       	reti

00000248 <fdevopen>:
 248:	0f 93       	push	r16
 24a:	1f 93       	push	r17
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	ec 01       	movw	r28, r24
 252:	8b 01       	movw	r16, r22
 254:	00 97       	sbiw	r24, 0x00	; 0
 256:	31 f4       	brne	.+12     	; 0x264 <fdevopen+0x1c>
 258:	61 15       	cp	r22, r1
 25a:	71 05       	cpc	r23, r1
 25c:	19 f4       	brne	.+6      	; 0x264 <fdevopen+0x1c>
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	37 c0       	rjmp	.+110    	; 0x2d2 <fdevopen+0x8a>
 264:	6e e0       	ldi	r22, 0x0E	; 14
 266:	70 e0       	ldi	r23, 0x00	; 0
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	38 d2       	rcall	.+1136   	; 0x6de <calloc>
 26e:	fc 01       	movw	r30, r24
 270:	00 97       	sbiw	r24, 0x00	; 0
 272:	a9 f3       	breq	.-22     	; 0x25e <fdevopen+0x16>
 274:	80 e8       	ldi	r24, 0x80	; 128
 276:	83 83       	std	Z+3, r24	; 0x03
 278:	01 15       	cp	r16, r1
 27a:	11 05       	cpc	r17, r1
 27c:	71 f0       	breq	.+28     	; 0x29a <fdevopen+0x52>
 27e:	13 87       	std	Z+11, r17	; 0x0b
 280:	02 87       	std	Z+10, r16	; 0x0a
 282:	81 e8       	ldi	r24, 0x81	; 129
 284:	83 83       	std	Z+3, r24	; 0x03
 286:	80 91 02 02 	lds	r24, 0x0202
 28a:	90 91 03 02 	lds	r25, 0x0203
 28e:	89 2b       	or	r24, r25
 290:	21 f4       	brne	.+8      	; 0x29a <fdevopen+0x52>
 292:	f0 93 03 02 	sts	0x0203, r31
 296:	e0 93 02 02 	sts	0x0202, r30
 29a:	20 97       	sbiw	r28, 0x00	; 0
 29c:	c9 f0       	breq	.+50     	; 0x2d0 <fdevopen+0x88>
 29e:	d1 87       	std	Z+9, r29	; 0x09
 2a0:	c0 87       	std	Z+8, r28	; 0x08
 2a2:	83 81       	ldd	r24, Z+3	; 0x03
 2a4:	82 60       	ori	r24, 0x02	; 2
 2a6:	83 83       	std	Z+3, r24	; 0x03
 2a8:	80 91 04 02 	lds	r24, 0x0204
 2ac:	90 91 05 02 	lds	r25, 0x0205
 2b0:	89 2b       	or	r24, r25
 2b2:	71 f4       	brne	.+28     	; 0x2d0 <fdevopen+0x88>
 2b4:	f0 93 05 02 	sts	0x0205, r31
 2b8:	e0 93 04 02 	sts	0x0204, r30
 2bc:	80 91 06 02 	lds	r24, 0x0206
 2c0:	90 91 07 02 	lds	r25, 0x0207
 2c4:	89 2b       	or	r24, r25
 2c6:	21 f4       	brne	.+8      	; 0x2d0 <fdevopen+0x88>
 2c8:	f0 93 07 02 	sts	0x0207, r31
 2cc:	e0 93 06 02 	sts	0x0206, r30
 2d0:	cf 01       	movw	r24, r30
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	1f 91       	pop	r17
 2d8:	0f 91       	pop	r16
 2da:	08 95       	ret

000002dc <printf>:
 2dc:	a0 e0       	ldi	r26, 0x00	; 0
 2de:	b0 e0       	ldi	r27, 0x00	; 0
 2e0:	e3 e7       	ldi	r30, 0x73	; 115
 2e2:	f1 e0       	ldi	r31, 0x01	; 1
 2e4:	fa c3       	rjmp	.+2036   	; 0xada <__prologue_saves__+0x20>
 2e6:	fe 01       	movw	r30, r28
 2e8:	35 96       	adiw	r30, 0x05	; 5
 2ea:	61 91       	ld	r22, Z+
 2ec:	71 91       	ld	r23, Z+
 2ee:	af 01       	movw	r20, r30
 2f0:	80 91 04 02 	lds	r24, 0x0204
 2f4:	90 91 05 02 	lds	r25, 0x0205
 2f8:	2f d0       	rcall	.+94     	; 0x358 <vfprintf>
 2fa:	e2 e0       	ldi	r30, 0x02	; 2
 2fc:	0a c4       	rjmp	.+2068   	; 0xb12 <__epilogue_restores__+0x20>

000002fe <puts>:
 2fe:	0f 93       	push	r16
 300:	1f 93       	push	r17
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
 306:	e0 91 04 02 	lds	r30, 0x0204
 30a:	f0 91 05 02 	lds	r31, 0x0205
 30e:	23 81       	ldd	r18, Z+3	; 0x03
 310:	21 ff       	sbrs	r18, 1
 312:	1b c0       	rjmp	.+54     	; 0x34a <puts+0x4c>
 314:	ec 01       	movw	r28, r24
 316:	00 e0       	ldi	r16, 0x00	; 0
 318:	10 e0       	ldi	r17, 0x00	; 0
 31a:	89 91       	ld	r24, Y+
 31c:	60 91 04 02 	lds	r22, 0x0204
 320:	70 91 05 02 	lds	r23, 0x0205
 324:	db 01       	movw	r26, r22
 326:	18 96       	adiw	r26, 0x08	; 8
 328:	ed 91       	ld	r30, X+
 32a:	fc 91       	ld	r31, X
 32c:	19 97       	sbiw	r26, 0x09	; 9
 32e:	88 23       	and	r24, r24
 330:	31 f0       	breq	.+12     	; 0x33e <puts+0x40>
 332:	09 95       	icall
 334:	89 2b       	or	r24, r25
 336:	89 f3       	breq	.-30     	; 0x31a <puts+0x1c>
 338:	0f ef       	ldi	r16, 0xFF	; 255
 33a:	1f ef       	ldi	r17, 0xFF	; 255
 33c:	ee cf       	rjmp	.-36     	; 0x31a <puts+0x1c>
 33e:	8a e0       	ldi	r24, 0x0A	; 10
 340:	09 95       	icall
 342:	89 2b       	or	r24, r25
 344:	11 f4       	brne	.+4      	; 0x34a <puts+0x4c>
 346:	c8 01       	movw	r24, r16
 348:	02 c0       	rjmp	.+4      	; 0x34e <puts+0x50>
 34a:	8f ef       	ldi	r24, 0xFF	; 255
 34c:	9f ef       	ldi	r25, 0xFF	; 255
 34e:	df 91       	pop	r29
 350:	cf 91       	pop	r28
 352:	1f 91       	pop	r17
 354:	0f 91       	pop	r16
 356:	08 95       	ret

00000358 <vfprintf>:
 358:	ac e0       	ldi	r26, 0x0C	; 12
 35a:	b0 e0       	ldi	r27, 0x00	; 0
 35c:	e1 eb       	ldi	r30, 0xB1	; 177
 35e:	f1 e0       	ldi	r31, 0x01	; 1
 360:	ac c3       	rjmp	.+1880   	; 0xaba <__prologue_saves__>
 362:	7c 01       	movw	r14, r24
 364:	6b 01       	movw	r12, r22
 366:	8a 01       	movw	r16, r20
 368:	fc 01       	movw	r30, r24
 36a:	17 82       	std	Z+7, r1	; 0x07
 36c:	16 82       	std	Z+6, r1	; 0x06
 36e:	83 81       	ldd	r24, Z+3	; 0x03
 370:	81 ff       	sbrs	r24, 1
 372:	b0 c1       	rjmp	.+864    	; 0x6d4 <__stack+0x1d5>
 374:	ce 01       	movw	r24, r28
 376:	01 96       	adiw	r24, 0x01	; 1
 378:	4c 01       	movw	r8, r24
 37a:	f7 01       	movw	r30, r14
 37c:	93 81       	ldd	r25, Z+3	; 0x03
 37e:	f6 01       	movw	r30, r12
 380:	93 fd       	sbrc	r25, 3
 382:	85 91       	lpm	r24, Z+
 384:	93 ff       	sbrs	r25, 3
 386:	81 91       	ld	r24, Z+
 388:	6f 01       	movw	r12, r30
 38a:	88 23       	and	r24, r24
 38c:	09 f4       	brne	.+2      	; 0x390 <vfprintf+0x38>
 38e:	9e c1       	rjmp	.+828    	; 0x6cc <__stack+0x1cd>
 390:	85 32       	cpi	r24, 0x25	; 37
 392:	39 f4       	brne	.+14     	; 0x3a2 <vfprintf+0x4a>
 394:	93 fd       	sbrc	r25, 3
 396:	85 91       	lpm	r24, Z+
 398:	93 ff       	sbrs	r25, 3
 39a:	81 91       	ld	r24, Z+
 39c:	6f 01       	movw	r12, r30
 39e:	85 32       	cpi	r24, 0x25	; 37
 3a0:	21 f4       	brne	.+8      	; 0x3aa <vfprintf+0x52>
 3a2:	b7 01       	movw	r22, r14
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	f9 d2       	rcall	.+1522   	; 0x99a <fputc>
 3a8:	e8 cf       	rjmp	.-48     	; 0x37a <vfprintf+0x22>
 3aa:	51 2c       	mov	r5, r1
 3ac:	31 2c       	mov	r3, r1
 3ae:	20 e0       	ldi	r18, 0x00	; 0
 3b0:	20 32       	cpi	r18, 0x20	; 32
 3b2:	a0 f4       	brcc	.+40     	; 0x3dc <vfprintf+0x84>
 3b4:	8b 32       	cpi	r24, 0x2B	; 43
 3b6:	69 f0       	breq	.+26     	; 0x3d2 <vfprintf+0x7a>
 3b8:	30 f4       	brcc	.+12     	; 0x3c6 <vfprintf+0x6e>
 3ba:	80 32       	cpi	r24, 0x20	; 32
 3bc:	59 f0       	breq	.+22     	; 0x3d4 <vfprintf+0x7c>
 3be:	83 32       	cpi	r24, 0x23	; 35
 3c0:	69 f4       	brne	.+26     	; 0x3dc <vfprintf+0x84>
 3c2:	20 61       	ori	r18, 0x10	; 16
 3c4:	2c c0       	rjmp	.+88     	; 0x41e <vfprintf+0xc6>
 3c6:	8d 32       	cpi	r24, 0x2D	; 45
 3c8:	39 f0       	breq	.+14     	; 0x3d8 <vfprintf+0x80>
 3ca:	80 33       	cpi	r24, 0x30	; 48
 3cc:	39 f4       	brne	.+14     	; 0x3dc <vfprintf+0x84>
 3ce:	21 60       	ori	r18, 0x01	; 1
 3d0:	26 c0       	rjmp	.+76     	; 0x41e <vfprintf+0xc6>
 3d2:	22 60       	ori	r18, 0x02	; 2
 3d4:	24 60       	ori	r18, 0x04	; 4
 3d6:	23 c0       	rjmp	.+70     	; 0x41e <vfprintf+0xc6>
 3d8:	28 60       	ori	r18, 0x08	; 8
 3da:	21 c0       	rjmp	.+66     	; 0x41e <vfprintf+0xc6>
 3dc:	27 fd       	sbrc	r18, 7
 3de:	27 c0       	rjmp	.+78     	; 0x42e <vfprintf+0xd6>
 3e0:	30 ed       	ldi	r19, 0xD0	; 208
 3e2:	38 0f       	add	r19, r24
 3e4:	3a 30       	cpi	r19, 0x0A	; 10
 3e6:	78 f4       	brcc	.+30     	; 0x406 <vfprintf+0xae>
 3e8:	26 ff       	sbrs	r18, 6
 3ea:	06 c0       	rjmp	.+12     	; 0x3f8 <vfprintf+0xa0>
 3ec:	fa e0       	ldi	r31, 0x0A	; 10
 3ee:	5f 9e       	mul	r5, r31
 3f0:	30 0d       	add	r19, r0
 3f2:	11 24       	eor	r1, r1
 3f4:	53 2e       	mov	r5, r19
 3f6:	13 c0       	rjmp	.+38     	; 0x41e <vfprintf+0xc6>
 3f8:	8a e0       	ldi	r24, 0x0A	; 10
 3fa:	38 9e       	mul	r3, r24
 3fc:	30 0d       	add	r19, r0
 3fe:	11 24       	eor	r1, r1
 400:	33 2e       	mov	r3, r19
 402:	20 62       	ori	r18, 0x20	; 32
 404:	0c c0       	rjmp	.+24     	; 0x41e <vfprintf+0xc6>
 406:	8e 32       	cpi	r24, 0x2E	; 46
 408:	21 f4       	brne	.+8      	; 0x412 <vfprintf+0xba>
 40a:	26 fd       	sbrc	r18, 6
 40c:	5f c1       	rjmp	.+702    	; 0x6cc <__stack+0x1cd>
 40e:	20 64       	ori	r18, 0x40	; 64
 410:	06 c0       	rjmp	.+12     	; 0x41e <vfprintf+0xc6>
 412:	8c 36       	cpi	r24, 0x6C	; 108
 414:	11 f4       	brne	.+4      	; 0x41a <vfprintf+0xc2>
 416:	20 68       	ori	r18, 0x80	; 128
 418:	02 c0       	rjmp	.+4      	; 0x41e <vfprintf+0xc6>
 41a:	88 36       	cpi	r24, 0x68	; 104
 41c:	41 f4       	brne	.+16     	; 0x42e <vfprintf+0xd6>
 41e:	f6 01       	movw	r30, r12
 420:	93 fd       	sbrc	r25, 3
 422:	85 91       	lpm	r24, Z+
 424:	93 ff       	sbrs	r25, 3
 426:	81 91       	ld	r24, Z+
 428:	6f 01       	movw	r12, r30
 42a:	81 11       	cpse	r24, r1
 42c:	c1 cf       	rjmp	.-126    	; 0x3b0 <vfprintf+0x58>
 42e:	98 2f       	mov	r25, r24
 430:	9f 7d       	andi	r25, 0xDF	; 223
 432:	95 54       	subi	r25, 0x45	; 69
 434:	93 30       	cpi	r25, 0x03	; 3
 436:	28 f4       	brcc	.+10     	; 0x442 <vfprintf+0xea>
 438:	0c 5f       	subi	r16, 0xFC	; 252
 43a:	1f 4f       	sbci	r17, 0xFF	; 255
 43c:	ff e3       	ldi	r31, 0x3F	; 63
 43e:	f9 83       	std	Y+1, r31	; 0x01
 440:	0d c0       	rjmp	.+26     	; 0x45c <vfprintf+0x104>
 442:	83 36       	cpi	r24, 0x63	; 99
 444:	31 f0       	breq	.+12     	; 0x452 <vfprintf+0xfa>
 446:	83 37       	cpi	r24, 0x73	; 115
 448:	71 f0       	breq	.+28     	; 0x466 <vfprintf+0x10e>
 44a:	83 35       	cpi	r24, 0x53	; 83
 44c:	09 f0       	breq	.+2      	; 0x450 <vfprintf+0xf8>
 44e:	57 c0       	rjmp	.+174    	; 0x4fe <vfprintf+0x1a6>
 450:	21 c0       	rjmp	.+66     	; 0x494 <vfprintf+0x13c>
 452:	f8 01       	movw	r30, r16
 454:	80 81       	ld	r24, Z
 456:	89 83       	std	Y+1, r24	; 0x01
 458:	0e 5f       	subi	r16, 0xFE	; 254
 45a:	1f 4f       	sbci	r17, 0xFF	; 255
 45c:	44 24       	eor	r4, r4
 45e:	43 94       	inc	r4
 460:	51 2c       	mov	r5, r1
 462:	54 01       	movw	r10, r8
 464:	14 c0       	rjmp	.+40     	; 0x48e <vfprintf+0x136>
 466:	38 01       	movw	r6, r16
 468:	f2 e0       	ldi	r31, 0x02	; 2
 46a:	6f 0e       	add	r6, r31
 46c:	71 1c       	adc	r7, r1
 46e:	f8 01       	movw	r30, r16
 470:	a0 80       	ld	r10, Z
 472:	b1 80       	ldd	r11, Z+1	; 0x01
 474:	26 ff       	sbrs	r18, 6
 476:	03 c0       	rjmp	.+6      	; 0x47e <vfprintf+0x126>
 478:	65 2d       	mov	r22, r5
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	02 c0       	rjmp	.+4      	; 0x482 <vfprintf+0x12a>
 47e:	6f ef       	ldi	r22, 0xFF	; 255
 480:	7f ef       	ldi	r23, 0xFF	; 255
 482:	c5 01       	movw	r24, r10
 484:	2c 87       	std	Y+12, r18	; 0x0c
 486:	7e d2       	rcall	.+1276   	; 0x984 <strnlen>
 488:	2c 01       	movw	r4, r24
 48a:	83 01       	movw	r16, r6
 48c:	2c 85       	ldd	r18, Y+12	; 0x0c
 48e:	2f 77       	andi	r18, 0x7F	; 127
 490:	22 2e       	mov	r2, r18
 492:	16 c0       	rjmp	.+44     	; 0x4c0 <vfprintf+0x168>
 494:	38 01       	movw	r6, r16
 496:	f2 e0       	ldi	r31, 0x02	; 2
 498:	6f 0e       	add	r6, r31
 49a:	71 1c       	adc	r7, r1
 49c:	f8 01       	movw	r30, r16
 49e:	a0 80       	ld	r10, Z
 4a0:	b1 80       	ldd	r11, Z+1	; 0x01
 4a2:	26 ff       	sbrs	r18, 6
 4a4:	03 c0       	rjmp	.+6      	; 0x4ac <vfprintf+0x154>
 4a6:	65 2d       	mov	r22, r5
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <vfprintf+0x158>
 4ac:	6f ef       	ldi	r22, 0xFF	; 255
 4ae:	7f ef       	ldi	r23, 0xFF	; 255
 4b0:	c5 01       	movw	r24, r10
 4b2:	2c 87       	std	Y+12, r18	; 0x0c
 4b4:	55 d2       	rcall	.+1194   	; 0x960 <strnlen_P>
 4b6:	2c 01       	movw	r4, r24
 4b8:	2c 85       	ldd	r18, Y+12	; 0x0c
 4ba:	20 68       	ori	r18, 0x80	; 128
 4bc:	22 2e       	mov	r2, r18
 4be:	83 01       	movw	r16, r6
 4c0:	23 fc       	sbrc	r2, 3
 4c2:	19 c0       	rjmp	.+50     	; 0x4f6 <vfprintf+0x19e>
 4c4:	83 2d       	mov	r24, r3
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	48 16       	cp	r4, r24
 4ca:	59 06       	cpc	r5, r25
 4cc:	a0 f4       	brcc	.+40     	; 0x4f6 <vfprintf+0x19e>
 4ce:	b7 01       	movw	r22, r14
 4d0:	80 e2       	ldi	r24, 0x20	; 32
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	62 d2       	rcall	.+1220   	; 0x99a <fputc>
 4d6:	3a 94       	dec	r3
 4d8:	f5 cf       	rjmp	.-22     	; 0x4c4 <vfprintf+0x16c>
 4da:	f5 01       	movw	r30, r10
 4dc:	27 fc       	sbrc	r2, 7
 4de:	85 91       	lpm	r24, Z+
 4e0:	27 fe       	sbrs	r2, 7
 4e2:	81 91       	ld	r24, Z+
 4e4:	5f 01       	movw	r10, r30
 4e6:	b7 01       	movw	r22, r14
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	57 d2       	rcall	.+1198   	; 0x99a <fputc>
 4ec:	31 10       	cpse	r3, r1
 4ee:	3a 94       	dec	r3
 4f0:	f1 e0       	ldi	r31, 0x01	; 1
 4f2:	4f 1a       	sub	r4, r31
 4f4:	51 08       	sbc	r5, r1
 4f6:	41 14       	cp	r4, r1
 4f8:	51 04       	cpc	r5, r1
 4fa:	79 f7       	brne	.-34     	; 0x4da <vfprintf+0x182>
 4fc:	de c0       	rjmp	.+444    	; 0x6ba <__stack+0x1bb>
 4fe:	84 36       	cpi	r24, 0x64	; 100
 500:	11 f0       	breq	.+4      	; 0x506 <__stack+0x7>
 502:	89 36       	cpi	r24, 0x69	; 105
 504:	31 f5       	brne	.+76     	; 0x552 <__stack+0x53>
 506:	f8 01       	movw	r30, r16
 508:	27 ff       	sbrs	r18, 7
 50a:	07 c0       	rjmp	.+14     	; 0x51a <__stack+0x1b>
 50c:	60 81       	ld	r22, Z
 50e:	71 81       	ldd	r23, Z+1	; 0x01
 510:	82 81       	ldd	r24, Z+2	; 0x02
 512:	93 81       	ldd	r25, Z+3	; 0x03
 514:	0c 5f       	subi	r16, 0xFC	; 252
 516:	1f 4f       	sbci	r17, 0xFF	; 255
 518:	08 c0       	rjmp	.+16     	; 0x52a <__stack+0x2b>
 51a:	60 81       	ld	r22, Z
 51c:	71 81       	ldd	r23, Z+1	; 0x01
 51e:	88 27       	eor	r24, r24
 520:	77 fd       	sbrc	r23, 7
 522:	80 95       	com	r24
 524:	98 2f       	mov	r25, r24
 526:	0e 5f       	subi	r16, 0xFE	; 254
 528:	1f 4f       	sbci	r17, 0xFF	; 255
 52a:	2f 76       	andi	r18, 0x6F	; 111
 52c:	b2 2e       	mov	r11, r18
 52e:	97 ff       	sbrs	r25, 7
 530:	09 c0       	rjmp	.+18     	; 0x544 <__stack+0x45>
 532:	90 95       	com	r25
 534:	80 95       	com	r24
 536:	70 95       	com	r23
 538:	61 95       	neg	r22
 53a:	7f 4f       	sbci	r23, 0xFF	; 255
 53c:	8f 4f       	sbci	r24, 0xFF	; 255
 53e:	9f 4f       	sbci	r25, 0xFF	; 255
 540:	20 68       	ori	r18, 0x80	; 128
 542:	b2 2e       	mov	r11, r18
 544:	2a e0       	ldi	r18, 0x0A	; 10
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	a4 01       	movw	r20, r8
 54a:	59 d2       	rcall	.+1202   	; 0x9fe <__ultoa_invert>
 54c:	a8 2e       	mov	r10, r24
 54e:	a8 18       	sub	r10, r8
 550:	43 c0       	rjmp	.+134    	; 0x5d8 <__stack+0xd9>
 552:	85 37       	cpi	r24, 0x75	; 117
 554:	29 f4       	brne	.+10     	; 0x560 <__stack+0x61>
 556:	2f 7e       	andi	r18, 0xEF	; 239
 558:	b2 2e       	mov	r11, r18
 55a:	2a e0       	ldi	r18, 0x0A	; 10
 55c:	30 e0       	ldi	r19, 0x00	; 0
 55e:	25 c0       	rjmp	.+74     	; 0x5aa <__stack+0xab>
 560:	f2 2f       	mov	r31, r18
 562:	f9 7f       	andi	r31, 0xF9	; 249
 564:	bf 2e       	mov	r11, r31
 566:	8f 36       	cpi	r24, 0x6F	; 111
 568:	c1 f0       	breq	.+48     	; 0x59a <__stack+0x9b>
 56a:	18 f4       	brcc	.+6      	; 0x572 <__stack+0x73>
 56c:	88 35       	cpi	r24, 0x58	; 88
 56e:	79 f0       	breq	.+30     	; 0x58e <__stack+0x8f>
 570:	ad c0       	rjmp	.+346    	; 0x6cc <__stack+0x1cd>
 572:	80 37       	cpi	r24, 0x70	; 112
 574:	19 f0       	breq	.+6      	; 0x57c <__stack+0x7d>
 576:	88 37       	cpi	r24, 0x78	; 120
 578:	21 f0       	breq	.+8      	; 0x582 <__stack+0x83>
 57a:	a8 c0       	rjmp	.+336    	; 0x6cc <__stack+0x1cd>
 57c:	2f 2f       	mov	r18, r31
 57e:	20 61       	ori	r18, 0x10	; 16
 580:	b2 2e       	mov	r11, r18
 582:	b4 fe       	sbrs	r11, 4
 584:	0d c0       	rjmp	.+26     	; 0x5a0 <__stack+0xa1>
 586:	8b 2d       	mov	r24, r11
 588:	84 60       	ori	r24, 0x04	; 4
 58a:	b8 2e       	mov	r11, r24
 58c:	09 c0       	rjmp	.+18     	; 0x5a0 <__stack+0xa1>
 58e:	24 ff       	sbrs	r18, 4
 590:	0a c0       	rjmp	.+20     	; 0x5a6 <__stack+0xa7>
 592:	9f 2f       	mov	r25, r31
 594:	96 60       	ori	r25, 0x06	; 6
 596:	b9 2e       	mov	r11, r25
 598:	06 c0       	rjmp	.+12     	; 0x5a6 <__stack+0xa7>
 59a:	28 e0       	ldi	r18, 0x08	; 8
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	05 c0       	rjmp	.+10     	; 0x5aa <__stack+0xab>
 5a0:	20 e1       	ldi	r18, 0x10	; 16
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <__stack+0xab>
 5a6:	20 e1       	ldi	r18, 0x10	; 16
 5a8:	32 e0       	ldi	r19, 0x02	; 2
 5aa:	f8 01       	movw	r30, r16
 5ac:	b7 fe       	sbrs	r11, 7
 5ae:	07 c0       	rjmp	.+14     	; 0x5be <__stack+0xbf>
 5b0:	60 81       	ld	r22, Z
 5b2:	71 81       	ldd	r23, Z+1	; 0x01
 5b4:	82 81       	ldd	r24, Z+2	; 0x02
 5b6:	93 81       	ldd	r25, Z+3	; 0x03
 5b8:	0c 5f       	subi	r16, 0xFC	; 252
 5ba:	1f 4f       	sbci	r17, 0xFF	; 255
 5bc:	06 c0       	rjmp	.+12     	; 0x5ca <__stack+0xcb>
 5be:	60 81       	ld	r22, Z
 5c0:	71 81       	ldd	r23, Z+1	; 0x01
 5c2:	80 e0       	ldi	r24, 0x00	; 0
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	0e 5f       	subi	r16, 0xFE	; 254
 5c8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ca:	a4 01       	movw	r20, r8
 5cc:	18 d2       	rcall	.+1072   	; 0x9fe <__ultoa_invert>
 5ce:	a8 2e       	mov	r10, r24
 5d0:	a8 18       	sub	r10, r8
 5d2:	fb 2d       	mov	r31, r11
 5d4:	ff 77       	andi	r31, 0x7F	; 127
 5d6:	bf 2e       	mov	r11, r31
 5d8:	b6 fe       	sbrs	r11, 6
 5da:	0b c0       	rjmp	.+22     	; 0x5f2 <__stack+0xf3>
 5dc:	2b 2d       	mov	r18, r11
 5de:	2e 7f       	andi	r18, 0xFE	; 254
 5e0:	a5 14       	cp	r10, r5
 5e2:	50 f4       	brcc	.+20     	; 0x5f8 <__stack+0xf9>
 5e4:	b4 fe       	sbrs	r11, 4
 5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0xfd>
 5e8:	b2 fc       	sbrc	r11, 2
 5ea:	08 c0       	rjmp	.+16     	; 0x5fc <__stack+0xfd>
 5ec:	2b 2d       	mov	r18, r11
 5ee:	2e 7e       	andi	r18, 0xEE	; 238
 5f0:	05 c0       	rjmp	.+10     	; 0x5fc <__stack+0xfd>
 5f2:	7a 2c       	mov	r7, r10
 5f4:	2b 2d       	mov	r18, r11
 5f6:	03 c0       	rjmp	.+6      	; 0x5fe <__stack+0xff>
 5f8:	7a 2c       	mov	r7, r10
 5fa:	01 c0       	rjmp	.+2      	; 0x5fe <__stack+0xff>
 5fc:	75 2c       	mov	r7, r5
 5fe:	24 ff       	sbrs	r18, 4
 600:	0d c0       	rjmp	.+26     	; 0x61c <__stack+0x11d>
 602:	fe 01       	movw	r30, r28
 604:	ea 0d       	add	r30, r10
 606:	f1 1d       	adc	r31, r1
 608:	80 81       	ld	r24, Z
 60a:	80 33       	cpi	r24, 0x30	; 48
 60c:	11 f4       	brne	.+4      	; 0x612 <__stack+0x113>
 60e:	29 7e       	andi	r18, 0xE9	; 233
 610:	09 c0       	rjmp	.+18     	; 0x624 <__stack+0x125>
 612:	22 ff       	sbrs	r18, 2
 614:	06 c0       	rjmp	.+12     	; 0x622 <__stack+0x123>
 616:	73 94       	inc	r7
 618:	73 94       	inc	r7
 61a:	04 c0       	rjmp	.+8      	; 0x624 <__stack+0x125>
 61c:	82 2f       	mov	r24, r18
 61e:	86 78       	andi	r24, 0x86	; 134
 620:	09 f0       	breq	.+2      	; 0x624 <__stack+0x125>
 622:	73 94       	inc	r7
 624:	23 fd       	sbrc	r18, 3
 626:	12 c0       	rjmp	.+36     	; 0x64c <__stack+0x14d>
 628:	20 ff       	sbrs	r18, 0
 62a:	06 c0       	rjmp	.+12     	; 0x638 <__stack+0x139>
 62c:	5a 2c       	mov	r5, r10
 62e:	73 14       	cp	r7, r3
 630:	18 f4       	brcc	.+6      	; 0x638 <__stack+0x139>
 632:	53 0c       	add	r5, r3
 634:	57 18       	sub	r5, r7
 636:	73 2c       	mov	r7, r3
 638:	73 14       	cp	r7, r3
 63a:	60 f4       	brcc	.+24     	; 0x654 <__stack+0x155>
 63c:	b7 01       	movw	r22, r14
 63e:	80 e2       	ldi	r24, 0x20	; 32
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	2c 87       	std	Y+12, r18	; 0x0c
 644:	aa d1       	rcall	.+852    	; 0x99a <fputc>
 646:	73 94       	inc	r7
 648:	2c 85       	ldd	r18, Y+12	; 0x0c
 64a:	f6 cf       	rjmp	.-20     	; 0x638 <__stack+0x139>
 64c:	73 14       	cp	r7, r3
 64e:	10 f4       	brcc	.+4      	; 0x654 <__stack+0x155>
 650:	37 18       	sub	r3, r7
 652:	01 c0       	rjmp	.+2      	; 0x656 <__stack+0x157>
 654:	31 2c       	mov	r3, r1
 656:	24 ff       	sbrs	r18, 4
 658:	11 c0       	rjmp	.+34     	; 0x67c <__stack+0x17d>
 65a:	b7 01       	movw	r22, r14
 65c:	80 e3       	ldi	r24, 0x30	; 48
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	2c 87       	std	Y+12, r18	; 0x0c
 662:	9b d1       	rcall	.+822    	; 0x99a <fputc>
 664:	2c 85       	ldd	r18, Y+12	; 0x0c
 666:	22 ff       	sbrs	r18, 2
 668:	16 c0       	rjmp	.+44     	; 0x696 <__stack+0x197>
 66a:	21 ff       	sbrs	r18, 1
 66c:	03 c0       	rjmp	.+6      	; 0x674 <__stack+0x175>
 66e:	88 e5       	ldi	r24, 0x58	; 88
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	02 c0       	rjmp	.+4      	; 0x678 <__stack+0x179>
 674:	88 e7       	ldi	r24, 0x78	; 120
 676:	90 e0       	ldi	r25, 0x00	; 0
 678:	b7 01       	movw	r22, r14
 67a:	0c c0       	rjmp	.+24     	; 0x694 <__stack+0x195>
 67c:	82 2f       	mov	r24, r18
 67e:	86 78       	andi	r24, 0x86	; 134
 680:	51 f0       	breq	.+20     	; 0x696 <__stack+0x197>
 682:	21 fd       	sbrc	r18, 1
 684:	02 c0       	rjmp	.+4      	; 0x68a <__stack+0x18b>
 686:	80 e2       	ldi	r24, 0x20	; 32
 688:	01 c0       	rjmp	.+2      	; 0x68c <__stack+0x18d>
 68a:	8b e2       	ldi	r24, 0x2B	; 43
 68c:	27 fd       	sbrc	r18, 7
 68e:	8d e2       	ldi	r24, 0x2D	; 45
 690:	b7 01       	movw	r22, r14
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	82 d1       	rcall	.+772    	; 0x99a <fputc>
 696:	a5 14       	cp	r10, r5
 698:	30 f4       	brcc	.+12     	; 0x6a6 <__stack+0x1a7>
 69a:	b7 01       	movw	r22, r14
 69c:	80 e3       	ldi	r24, 0x30	; 48
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	7c d1       	rcall	.+760    	; 0x99a <fputc>
 6a2:	5a 94       	dec	r5
 6a4:	f8 cf       	rjmp	.-16     	; 0x696 <__stack+0x197>
 6a6:	aa 94       	dec	r10
 6a8:	f4 01       	movw	r30, r8
 6aa:	ea 0d       	add	r30, r10
 6ac:	f1 1d       	adc	r31, r1
 6ae:	80 81       	ld	r24, Z
 6b0:	b7 01       	movw	r22, r14
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	72 d1       	rcall	.+740    	; 0x99a <fputc>
 6b6:	a1 10       	cpse	r10, r1
 6b8:	f6 cf       	rjmp	.-20     	; 0x6a6 <__stack+0x1a7>
 6ba:	33 20       	and	r3, r3
 6bc:	09 f4       	brne	.+2      	; 0x6c0 <__stack+0x1c1>
 6be:	5d ce       	rjmp	.-838    	; 0x37a <vfprintf+0x22>
 6c0:	b7 01       	movw	r22, r14
 6c2:	80 e2       	ldi	r24, 0x20	; 32
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	69 d1       	rcall	.+722    	; 0x99a <fputc>
 6c8:	3a 94       	dec	r3
 6ca:	f7 cf       	rjmp	.-18     	; 0x6ba <__stack+0x1bb>
 6cc:	f7 01       	movw	r30, r14
 6ce:	86 81       	ldd	r24, Z+6	; 0x06
 6d0:	97 81       	ldd	r25, Z+7	; 0x07
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <__stack+0x1d9>
 6d4:	8f ef       	ldi	r24, 0xFF	; 255
 6d6:	9f ef       	ldi	r25, 0xFF	; 255
 6d8:	2c 96       	adiw	r28, 0x0c	; 12
 6da:	e2 e1       	ldi	r30, 0x12	; 18
 6dc:	0a c2       	rjmp	.+1044   	; 0xaf2 <__epilogue_restores__>

000006de <calloc>:
 6de:	0f 93       	push	r16
 6e0:	1f 93       	push	r17
 6e2:	cf 93       	push	r28
 6e4:	df 93       	push	r29
 6e6:	86 9f       	mul	r24, r22
 6e8:	80 01       	movw	r16, r0
 6ea:	87 9f       	mul	r24, r23
 6ec:	10 0d       	add	r17, r0
 6ee:	96 9f       	mul	r25, r22
 6f0:	10 0d       	add	r17, r0
 6f2:	11 24       	eor	r1, r1
 6f4:	c8 01       	movw	r24, r16
 6f6:	0d d0       	rcall	.+26     	; 0x712 <malloc>
 6f8:	ec 01       	movw	r28, r24
 6fa:	00 97       	sbiw	r24, 0x00	; 0
 6fc:	21 f0       	breq	.+8      	; 0x706 <calloc+0x28>
 6fe:	a8 01       	movw	r20, r16
 700:	60 e0       	ldi	r22, 0x00	; 0
 702:	70 e0       	ldi	r23, 0x00	; 0
 704:	38 d1       	rcall	.+624    	; 0x976 <memset>
 706:	ce 01       	movw	r24, r28
 708:	df 91       	pop	r29
 70a:	cf 91       	pop	r28
 70c:	1f 91       	pop	r17
 70e:	0f 91       	pop	r16
 710:	08 95       	ret

00000712 <malloc>:
 712:	cf 93       	push	r28
 714:	df 93       	push	r29
 716:	82 30       	cpi	r24, 0x02	; 2
 718:	91 05       	cpc	r25, r1
 71a:	10 f4       	brcc	.+4      	; 0x720 <malloc+0xe>
 71c:	82 e0       	ldi	r24, 0x02	; 2
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	e0 91 0a 02 	lds	r30, 0x020A
 724:	f0 91 0b 02 	lds	r31, 0x020B
 728:	20 e0       	ldi	r18, 0x00	; 0
 72a:	30 e0       	ldi	r19, 0x00	; 0
 72c:	a0 e0       	ldi	r26, 0x00	; 0
 72e:	b0 e0       	ldi	r27, 0x00	; 0
 730:	30 97       	sbiw	r30, 0x00	; 0
 732:	39 f1       	breq	.+78     	; 0x782 <malloc+0x70>
 734:	40 81       	ld	r20, Z
 736:	51 81       	ldd	r21, Z+1	; 0x01
 738:	48 17       	cp	r20, r24
 73a:	59 07       	cpc	r21, r25
 73c:	b8 f0       	brcs	.+46     	; 0x76c <malloc+0x5a>
 73e:	48 17       	cp	r20, r24
 740:	59 07       	cpc	r21, r25
 742:	71 f4       	brne	.+28     	; 0x760 <malloc+0x4e>
 744:	82 81       	ldd	r24, Z+2	; 0x02
 746:	93 81       	ldd	r25, Z+3	; 0x03
 748:	10 97       	sbiw	r26, 0x00	; 0
 74a:	29 f0       	breq	.+10     	; 0x756 <malloc+0x44>
 74c:	13 96       	adiw	r26, 0x03	; 3
 74e:	9c 93       	st	X, r25
 750:	8e 93       	st	-X, r24
 752:	12 97       	sbiw	r26, 0x02	; 2
 754:	2c c0       	rjmp	.+88     	; 0x7ae <malloc+0x9c>
 756:	90 93 0b 02 	sts	0x020B, r25
 75a:	80 93 0a 02 	sts	0x020A, r24
 75e:	27 c0       	rjmp	.+78     	; 0x7ae <malloc+0x9c>
 760:	21 15       	cp	r18, r1
 762:	31 05       	cpc	r19, r1
 764:	31 f0       	breq	.+12     	; 0x772 <malloc+0x60>
 766:	42 17       	cp	r20, r18
 768:	53 07       	cpc	r21, r19
 76a:	18 f0       	brcs	.+6      	; 0x772 <malloc+0x60>
 76c:	a9 01       	movw	r20, r18
 76e:	db 01       	movw	r26, r22
 770:	01 c0       	rjmp	.+2      	; 0x774 <malloc+0x62>
 772:	ef 01       	movw	r28, r30
 774:	9a 01       	movw	r18, r20
 776:	bd 01       	movw	r22, r26
 778:	df 01       	movw	r26, r30
 77a:	02 80       	ldd	r0, Z+2	; 0x02
 77c:	f3 81       	ldd	r31, Z+3	; 0x03
 77e:	e0 2d       	mov	r30, r0
 780:	d7 cf       	rjmp	.-82     	; 0x730 <malloc+0x1e>
 782:	21 15       	cp	r18, r1
 784:	31 05       	cpc	r19, r1
 786:	f9 f0       	breq	.+62     	; 0x7c6 <malloc+0xb4>
 788:	28 1b       	sub	r18, r24
 78a:	39 0b       	sbc	r19, r25
 78c:	24 30       	cpi	r18, 0x04	; 4
 78e:	31 05       	cpc	r19, r1
 790:	80 f4       	brcc	.+32     	; 0x7b2 <malloc+0xa0>
 792:	8a 81       	ldd	r24, Y+2	; 0x02
 794:	9b 81       	ldd	r25, Y+3	; 0x03
 796:	61 15       	cp	r22, r1
 798:	71 05       	cpc	r23, r1
 79a:	21 f0       	breq	.+8      	; 0x7a4 <malloc+0x92>
 79c:	fb 01       	movw	r30, r22
 79e:	93 83       	std	Z+3, r25	; 0x03
 7a0:	82 83       	std	Z+2, r24	; 0x02
 7a2:	04 c0       	rjmp	.+8      	; 0x7ac <malloc+0x9a>
 7a4:	90 93 0b 02 	sts	0x020B, r25
 7a8:	80 93 0a 02 	sts	0x020A, r24
 7ac:	fe 01       	movw	r30, r28
 7ae:	32 96       	adiw	r30, 0x02	; 2
 7b0:	44 c0       	rjmp	.+136    	; 0x83a <malloc+0x128>
 7b2:	fe 01       	movw	r30, r28
 7b4:	e2 0f       	add	r30, r18
 7b6:	f3 1f       	adc	r31, r19
 7b8:	81 93       	st	Z+, r24
 7ba:	91 93       	st	Z+, r25
 7bc:	22 50       	subi	r18, 0x02	; 2
 7be:	31 09       	sbc	r19, r1
 7c0:	39 83       	std	Y+1, r19	; 0x01
 7c2:	28 83       	st	Y, r18
 7c4:	3a c0       	rjmp	.+116    	; 0x83a <malloc+0x128>
 7c6:	20 91 08 02 	lds	r18, 0x0208
 7ca:	30 91 09 02 	lds	r19, 0x0209
 7ce:	23 2b       	or	r18, r19
 7d0:	41 f4       	brne	.+16     	; 0x7e2 <malloc+0xd0>
 7d2:	20 91 02 01 	lds	r18, 0x0102
 7d6:	30 91 03 01 	lds	r19, 0x0103
 7da:	30 93 09 02 	sts	0x0209, r19
 7de:	20 93 08 02 	sts	0x0208, r18
 7e2:	20 91 00 01 	lds	r18, 0x0100
 7e6:	30 91 01 01 	lds	r19, 0x0101
 7ea:	21 15       	cp	r18, r1
 7ec:	31 05       	cpc	r19, r1
 7ee:	41 f4       	brne	.+16     	; 0x800 <malloc+0xee>
 7f0:	2d b7       	in	r18, 0x3d	; 61
 7f2:	3e b7       	in	r19, 0x3e	; 62
 7f4:	40 91 04 01 	lds	r20, 0x0104
 7f8:	50 91 05 01 	lds	r21, 0x0105
 7fc:	24 1b       	sub	r18, r20
 7fe:	35 0b       	sbc	r19, r21
 800:	e0 91 08 02 	lds	r30, 0x0208
 804:	f0 91 09 02 	lds	r31, 0x0209
 808:	e2 17       	cp	r30, r18
 80a:	f3 07       	cpc	r31, r19
 80c:	a0 f4       	brcc	.+40     	; 0x836 <malloc+0x124>
 80e:	2e 1b       	sub	r18, r30
 810:	3f 0b       	sbc	r19, r31
 812:	28 17       	cp	r18, r24
 814:	39 07       	cpc	r19, r25
 816:	78 f0       	brcs	.+30     	; 0x836 <malloc+0x124>
 818:	ac 01       	movw	r20, r24
 81a:	4e 5f       	subi	r20, 0xFE	; 254
 81c:	5f 4f       	sbci	r21, 0xFF	; 255
 81e:	24 17       	cp	r18, r20
 820:	35 07       	cpc	r19, r21
 822:	48 f0       	brcs	.+18     	; 0x836 <malloc+0x124>
 824:	4e 0f       	add	r20, r30
 826:	5f 1f       	adc	r21, r31
 828:	50 93 09 02 	sts	0x0209, r21
 82c:	40 93 08 02 	sts	0x0208, r20
 830:	81 93       	st	Z+, r24
 832:	91 93       	st	Z+, r25
 834:	02 c0       	rjmp	.+4      	; 0x83a <malloc+0x128>
 836:	e0 e0       	ldi	r30, 0x00	; 0
 838:	f0 e0       	ldi	r31, 0x00	; 0
 83a:	cf 01       	movw	r24, r30
 83c:	df 91       	pop	r29
 83e:	cf 91       	pop	r28
 840:	08 95       	ret

00000842 <free>:
 842:	cf 93       	push	r28
 844:	df 93       	push	r29
 846:	00 97       	sbiw	r24, 0x00	; 0
 848:	09 f4       	brne	.+2      	; 0x84c <free+0xa>
 84a:	87 c0       	rjmp	.+270    	; 0x95a <free+0x118>
 84c:	fc 01       	movw	r30, r24
 84e:	32 97       	sbiw	r30, 0x02	; 2
 850:	13 82       	std	Z+3, r1	; 0x03
 852:	12 82       	std	Z+2, r1	; 0x02
 854:	c0 91 0a 02 	lds	r28, 0x020A
 858:	d0 91 0b 02 	lds	r29, 0x020B
 85c:	20 97       	sbiw	r28, 0x00	; 0
 85e:	81 f4       	brne	.+32     	; 0x880 <free+0x3e>
 860:	20 81       	ld	r18, Z
 862:	31 81       	ldd	r19, Z+1	; 0x01
 864:	28 0f       	add	r18, r24
 866:	39 1f       	adc	r19, r25
 868:	80 91 08 02 	lds	r24, 0x0208
 86c:	90 91 09 02 	lds	r25, 0x0209
 870:	82 17       	cp	r24, r18
 872:	93 07       	cpc	r25, r19
 874:	79 f5       	brne	.+94     	; 0x8d4 <free+0x92>
 876:	f0 93 09 02 	sts	0x0209, r31
 87a:	e0 93 08 02 	sts	0x0208, r30
 87e:	6d c0       	rjmp	.+218    	; 0x95a <free+0x118>
 880:	de 01       	movw	r26, r28
 882:	20 e0       	ldi	r18, 0x00	; 0
 884:	30 e0       	ldi	r19, 0x00	; 0
 886:	ae 17       	cp	r26, r30
 888:	bf 07       	cpc	r27, r31
 88a:	50 f4       	brcc	.+20     	; 0x8a0 <free+0x5e>
 88c:	12 96       	adiw	r26, 0x02	; 2
 88e:	4d 91       	ld	r20, X+
 890:	5c 91       	ld	r21, X
 892:	13 97       	sbiw	r26, 0x03	; 3
 894:	9d 01       	movw	r18, r26
 896:	41 15       	cp	r20, r1
 898:	51 05       	cpc	r21, r1
 89a:	09 f1       	breq	.+66     	; 0x8de <free+0x9c>
 89c:	da 01       	movw	r26, r20
 89e:	f3 cf       	rjmp	.-26     	; 0x886 <free+0x44>
 8a0:	b3 83       	std	Z+3, r27	; 0x03
 8a2:	a2 83       	std	Z+2, r26	; 0x02
 8a4:	40 81       	ld	r20, Z
 8a6:	51 81       	ldd	r21, Z+1	; 0x01
 8a8:	84 0f       	add	r24, r20
 8aa:	95 1f       	adc	r25, r21
 8ac:	8a 17       	cp	r24, r26
 8ae:	9b 07       	cpc	r25, r27
 8b0:	71 f4       	brne	.+28     	; 0x8ce <free+0x8c>
 8b2:	8d 91       	ld	r24, X+
 8b4:	9c 91       	ld	r25, X
 8b6:	11 97       	sbiw	r26, 0x01	; 1
 8b8:	84 0f       	add	r24, r20
 8ba:	95 1f       	adc	r25, r21
 8bc:	02 96       	adiw	r24, 0x02	; 2
 8be:	91 83       	std	Z+1, r25	; 0x01
 8c0:	80 83       	st	Z, r24
 8c2:	12 96       	adiw	r26, 0x02	; 2
 8c4:	8d 91       	ld	r24, X+
 8c6:	9c 91       	ld	r25, X
 8c8:	13 97       	sbiw	r26, 0x03	; 3
 8ca:	93 83       	std	Z+3, r25	; 0x03
 8cc:	82 83       	std	Z+2, r24	; 0x02
 8ce:	21 15       	cp	r18, r1
 8d0:	31 05       	cpc	r19, r1
 8d2:	29 f4       	brne	.+10     	; 0x8de <free+0x9c>
 8d4:	f0 93 0b 02 	sts	0x020B, r31
 8d8:	e0 93 0a 02 	sts	0x020A, r30
 8dc:	3e c0       	rjmp	.+124    	; 0x95a <free+0x118>
 8de:	d9 01       	movw	r26, r18
 8e0:	13 96       	adiw	r26, 0x03	; 3
 8e2:	fc 93       	st	X, r31
 8e4:	ee 93       	st	-X, r30
 8e6:	12 97       	sbiw	r26, 0x02	; 2
 8e8:	4d 91       	ld	r20, X+
 8ea:	5d 91       	ld	r21, X+
 8ec:	a4 0f       	add	r26, r20
 8ee:	b5 1f       	adc	r27, r21
 8f0:	ea 17       	cp	r30, r26
 8f2:	fb 07       	cpc	r31, r27
 8f4:	79 f4       	brne	.+30     	; 0x914 <free+0xd2>
 8f6:	80 81       	ld	r24, Z
 8f8:	91 81       	ldd	r25, Z+1	; 0x01
 8fa:	84 0f       	add	r24, r20
 8fc:	95 1f       	adc	r25, r21
 8fe:	02 96       	adiw	r24, 0x02	; 2
 900:	d9 01       	movw	r26, r18
 902:	11 96       	adiw	r26, 0x01	; 1
 904:	9c 93       	st	X, r25
 906:	8e 93       	st	-X, r24
 908:	82 81       	ldd	r24, Z+2	; 0x02
 90a:	93 81       	ldd	r25, Z+3	; 0x03
 90c:	13 96       	adiw	r26, 0x03	; 3
 90e:	9c 93       	st	X, r25
 910:	8e 93       	st	-X, r24
 912:	12 97       	sbiw	r26, 0x02	; 2
 914:	e0 e0       	ldi	r30, 0x00	; 0
 916:	f0 e0       	ldi	r31, 0x00	; 0
 918:	8a 81       	ldd	r24, Y+2	; 0x02
 91a:	9b 81       	ldd	r25, Y+3	; 0x03
 91c:	00 97       	sbiw	r24, 0x00	; 0
 91e:	19 f0       	breq	.+6      	; 0x926 <free+0xe4>
 920:	fe 01       	movw	r30, r28
 922:	ec 01       	movw	r28, r24
 924:	f9 cf       	rjmp	.-14     	; 0x918 <free+0xd6>
 926:	ce 01       	movw	r24, r28
 928:	02 96       	adiw	r24, 0x02	; 2
 92a:	28 81       	ld	r18, Y
 92c:	39 81       	ldd	r19, Y+1	; 0x01
 92e:	82 0f       	add	r24, r18
 930:	93 1f       	adc	r25, r19
 932:	20 91 08 02 	lds	r18, 0x0208
 936:	30 91 09 02 	lds	r19, 0x0209
 93a:	28 17       	cp	r18, r24
 93c:	39 07       	cpc	r19, r25
 93e:	69 f4       	brne	.+26     	; 0x95a <free+0x118>
 940:	30 97       	sbiw	r30, 0x00	; 0
 942:	29 f4       	brne	.+10     	; 0x94e <free+0x10c>
 944:	10 92 0b 02 	sts	0x020B, r1
 948:	10 92 0a 02 	sts	0x020A, r1
 94c:	02 c0       	rjmp	.+4      	; 0x952 <free+0x110>
 94e:	13 82       	std	Z+3, r1	; 0x03
 950:	12 82       	std	Z+2, r1	; 0x02
 952:	d0 93 09 02 	sts	0x0209, r29
 956:	c0 93 08 02 	sts	0x0208, r28
 95a:	df 91       	pop	r29
 95c:	cf 91       	pop	r28
 95e:	08 95       	ret

00000960 <strnlen_P>:
 960:	fc 01       	movw	r30, r24
 962:	05 90       	lpm	r0, Z+
 964:	61 50       	subi	r22, 0x01	; 1
 966:	70 40       	sbci	r23, 0x00	; 0
 968:	01 10       	cpse	r0, r1
 96a:	d8 f7       	brcc	.-10     	; 0x962 <strnlen_P+0x2>
 96c:	80 95       	com	r24
 96e:	90 95       	com	r25
 970:	8e 0f       	add	r24, r30
 972:	9f 1f       	adc	r25, r31
 974:	08 95       	ret

00000976 <memset>:
 976:	dc 01       	movw	r26, r24
 978:	01 c0       	rjmp	.+2      	; 0x97c <memset+0x6>
 97a:	6d 93       	st	X+, r22
 97c:	41 50       	subi	r20, 0x01	; 1
 97e:	50 40       	sbci	r21, 0x00	; 0
 980:	e0 f7       	brcc	.-8      	; 0x97a <memset+0x4>
 982:	08 95       	ret

00000984 <strnlen>:
 984:	fc 01       	movw	r30, r24
 986:	61 50       	subi	r22, 0x01	; 1
 988:	70 40       	sbci	r23, 0x00	; 0
 98a:	01 90       	ld	r0, Z+
 98c:	01 10       	cpse	r0, r1
 98e:	d8 f7       	brcc	.-10     	; 0x986 <strnlen+0x2>
 990:	80 95       	com	r24
 992:	90 95       	com	r25
 994:	8e 0f       	add	r24, r30
 996:	9f 1f       	adc	r25, r31
 998:	08 95       	ret

0000099a <fputc>:
 99a:	0f 93       	push	r16
 99c:	1f 93       	push	r17
 99e:	cf 93       	push	r28
 9a0:	df 93       	push	r29
 9a2:	18 2f       	mov	r17, r24
 9a4:	09 2f       	mov	r16, r25
 9a6:	eb 01       	movw	r28, r22
 9a8:	8b 81       	ldd	r24, Y+3	; 0x03
 9aa:	81 fd       	sbrc	r24, 1
 9ac:	03 c0       	rjmp	.+6      	; 0x9b4 <fputc+0x1a>
 9ae:	8f ef       	ldi	r24, 0xFF	; 255
 9b0:	9f ef       	ldi	r25, 0xFF	; 255
 9b2:	20 c0       	rjmp	.+64     	; 0x9f4 <fputc+0x5a>
 9b4:	82 ff       	sbrs	r24, 2
 9b6:	10 c0       	rjmp	.+32     	; 0x9d8 <fputc+0x3e>
 9b8:	4e 81       	ldd	r20, Y+6	; 0x06
 9ba:	5f 81       	ldd	r21, Y+7	; 0x07
 9bc:	2c 81       	ldd	r18, Y+4	; 0x04
 9be:	3d 81       	ldd	r19, Y+5	; 0x05
 9c0:	42 17       	cp	r20, r18
 9c2:	53 07       	cpc	r21, r19
 9c4:	7c f4       	brge	.+30     	; 0x9e4 <fputc+0x4a>
 9c6:	e8 81       	ld	r30, Y
 9c8:	f9 81       	ldd	r31, Y+1	; 0x01
 9ca:	9f 01       	movw	r18, r30
 9cc:	2f 5f       	subi	r18, 0xFF	; 255
 9ce:	3f 4f       	sbci	r19, 0xFF	; 255
 9d0:	39 83       	std	Y+1, r19	; 0x01
 9d2:	28 83       	st	Y, r18
 9d4:	10 83       	st	Z, r17
 9d6:	06 c0       	rjmp	.+12     	; 0x9e4 <fputc+0x4a>
 9d8:	e8 85       	ldd	r30, Y+8	; 0x08
 9da:	f9 85       	ldd	r31, Y+9	; 0x09
 9dc:	81 2f       	mov	r24, r17
 9de:	09 95       	icall
 9e0:	89 2b       	or	r24, r25
 9e2:	29 f7       	brne	.-54     	; 0x9ae <fputc+0x14>
 9e4:	2e 81       	ldd	r18, Y+6	; 0x06
 9e6:	3f 81       	ldd	r19, Y+7	; 0x07
 9e8:	2f 5f       	subi	r18, 0xFF	; 255
 9ea:	3f 4f       	sbci	r19, 0xFF	; 255
 9ec:	3f 83       	std	Y+7, r19	; 0x07
 9ee:	2e 83       	std	Y+6, r18	; 0x06
 9f0:	81 2f       	mov	r24, r17
 9f2:	90 2f       	mov	r25, r16
 9f4:	df 91       	pop	r29
 9f6:	cf 91       	pop	r28
 9f8:	1f 91       	pop	r17
 9fa:	0f 91       	pop	r16
 9fc:	08 95       	ret

000009fe <__ultoa_invert>:
 9fe:	fa 01       	movw	r30, r20
 a00:	aa 27       	eor	r26, r26
 a02:	28 30       	cpi	r18, 0x08	; 8
 a04:	51 f1       	breq	.+84     	; 0xa5a <__ultoa_invert+0x5c>
 a06:	20 31       	cpi	r18, 0x10	; 16
 a08:	81 f1       	breq	.+96     	; 0xa6a <__ultoa_invert+0x6c>
 a0a:	e8 94       	clt
 a0c:	6f 93       	push	r22
 a0e:	6e 7f       	andi	r22, 0xFE	; 254
 a10:	6e 5f       	subi	r22, 0xFE	; 254
 a12:	7f 4f       	sbci	r23, 0xFF	; 255
 a14:	8f 4f       	sbci	r24, 0xFF	; 255
 a16:	9f 4f       	sbci	r25, 0xFF	; 255
 a18:	af 4f       	sbci	r26, 0xFF	; 255
 a1a:	b1 e0       	ldi	r27, 0x01	; 1
 a1c:	3e d0       	rcall	.+124    	; 0xa9a <__ultoa_invert+0x9c>
 a1e:	b4 e0       	ldi	r27, 0x04	; 4
 a20:	3c d0       	rcall	.+120    	; 0xa9a <__ultoa_invert+0x9c>
 a22:	67 0f       	add	r22, r23
 a24:	78 1f       	adc	r23, r24
 a26:	89 1f       	adc	r24, r25
 a28:	9a 1f       	adc	r25, r26
 a2a:	a1 1d       	adc	r26, r1
 a2c:	68 0f       	add	r22, r24
 a2e:	79 1f       	adc	r23, r25
 a30:	8a 1f       	adc	r24, r26
 a32:	91 1d       	adc	r25, r1
 a34:	a1 1d       	adc	r26, r1
 a36:	6a 0f       	add	r22, r26
 a38:	71 1d       	adc	r23, r1
 a3a:	81 1d       	adc	r24, r1
 a3c:	91 1d       	adc	r25, r1
 a3e:	a1 1d       	adc	r26, r1
 a40:	20 d0       	rcall	.+64     	; 0xa82 <__ultoa_invert+0x84>
 a42:	09 f4       	brne	.+2      	; 0xa46 <__ultoa_invert+0x48>
 a44:	68 94       	set
 a46:	3f 91       	pop	r19
 a48:	2a e0       	ldi	r18, 0x0A	; 10
 a4a:	26 9f       	mul	r18, r22
 a4c:	11 24       	eor	r1, r1
 a4e:	30 19       	sub	r19, r0
 a50:	30 5d       	subi	r19, 0xD0	; 208
 a52:	31 93       	st	Z+, r19
 a54:	de f6       	brtc	.-74     	; 0xa0c <__ultoa_invert+0xe>
 a56:	cf 01       	movw	r24, r30
 a58:	08 95       	ret
 a5a:	46 2f       	mov	r20, r22
 a5c:	47 70       	andi	r20, 0x07	; 7
 a5e:	40 5d       	subi	r20, 0xD0	; 208
 a60:	41 93       	st	Z+, r20
 a62:	b3 e0       	ldi	r27, 0x03	; 3
 a64:	0f d0       	rcall	.+30     	; 0xa84 <__ultoa_invert+0x86>
 a66:	c9 f7       	brne	.-14     	; 0xa5a <__ultoa_invert+0x5c>
 a68:	f6 cf       	rjmp	.-20     	; 0xa56 <__ultoa_invert+0x58>
 a6a:	46 2f       	mov	r20, r22
 a6c:	4f 70       	andi	r20, 0x0F	; 15
 a6e:	40 5d       	subi	r20, 0xD0	; 208
 a70:	4a 33       	cpi	r20, 0x3A	; 58
 a72:	18 f0       	brcs	.+6      	; 0xa7a <__ultoa_invert+0x7c>
 a74:	49 5d       	subi	r20, 0xD9	; 217
 a76:	31 fd       	sbrc	r19, 1
 a78:	40 52       	subi	r20, 0x20	; 32
 a7a:	41 93       	st	Z+, r20
 a7c:	02 d0       	rcall	.+4      	; 0xa82 <__ultoa_invert+0x84>
 a7e:	a9 f7       	brne	.-22     	; 0xa6a <__ultoa_invert+0x6c>
 a80:	ea cf       	rjmp	.-44     	; 0xa56 <__ultoa_invert+0x58>
 a82:	b4 e0       	ldi	r27, 0x04	; 4
 a84:	a6 95       	lsr	r26
 a86:	97 95       	ror	r25
 a88:	87 95       	ror	r24
 a8a:	77 95       	ror	r23
 a8c:	67 95       	ror	r22
 a8e:	ba 95       	dec	r27
 a90:	c9 f7       	brne	.-14     	; 0xa84 <__ultoa_invert+0x86>
 a92:	00 97       	sbiw	r24, 0x00	; 0
 a94:	61 05       	cpc	r22, r1
 a96:	71 05       	cpc	r23, r1
 a98:	08 95       	ret
 a9a:	9b 01       	movw	r18, r22
 a9c:	ac 01       	movw	r20, r24
 a9e:	0a 2e       	mov	r0, r26
 aa0:	06 94       	lsr	r0
 aa2:	57 95       	ror	r21
 aa4:	47 95       	ror	r20
 aa6:	37 95       	ror	r19
 aa8:	27 95       	ror	r18
 aaa:	ba 95       	dec	r27
 aac:	c9 f7       	brne	.-14     	; 0xaa0 <__ultoa_invert+0xa2>
 aae:	62 0f       	add	r22, r18
 ab0:	73 1f       	adc	r23, r19
 ab2:	84 1f       	adc	r24, r20
 ab4:	95 1f       	adc	r25, r21
 ab6:	a0 1d       	adc	r26, r0
 ab8:	08 95       	ret

00000aba <__prologue_saves__>:
 aba:	2f 92       	push	r2
 abc:	3f 92       	push	r3
 abe:	4f 92       	push	r4
 ac0:	5f 92       	push	r5
 ac2:	6f 92       	push	r6
 ac4:	7f 92       	push	r7
 ac6:	8f 92       	push	r8
 ac8:	9f 92       	push	r9
 aca:	af 92       	push	r10
 acc:	bf 92       	push	r11
 ace:	cf 92       	push	r12
 ad0:	df 92       	push	r13
 ad2:	ef 92       	push	r14
 ad4:	ff 92       	push	r15
 ad6:	0f 93       	push	r16
 ad8:	1f 93       	push	r17
 ada:	cf 93       	push	r28
 adc:	df 93       	push	r29
 ade:	cd b7       	in	r28, 0x3d	; 61
 ae0:	de b7       	in	r29, 0x3e	; 62
 ae2:	ca 1b       	sub	r28, r26
 ae4:	db 0b       	sbc	r29, r27
 ae6:	0f b6       	in	r0, 0x3f	; 63
 ae8:	f8 94       	cli
 aea:	de bf       	out	0x3e, r29	; 62
 aec:	0f be       	out	0x3f, r0	; 63
 aee:	cd bf       	out	0x3d, r28	; 61
 af0:	09 94       	ijmp

00000af2 <__epilogue_restores__>:
 af2:	2a 88       	ldd	r2, Y+18	; 0x12
 af4:	39 88       	ldd	r3, Y+17	; 0x11
 af6:	48 88       	ldd	r4, Y+16	; 0x10
 af8:	5f 84       	ldd	r5, Y+15	; 0x0f
 afa:	6e 84       	ldd	r6, Y+14	; 0x0e
 afc:	7d 84       	ldd	r7, Y+13	; 0x0d
 afe:	8c 84       	ldd	r8, Y+12	; 0x0c
 b00:	9b 84       	ldd	r9, Y+11	; 0x0b
 b02:	aa 84       	ldd	r10, Y+10	; 0x0a
 b04:	b9 84       	ldd	r11, Y+9	; 0x09
 b06:	c8 84       	ldd	r12, Y+8	; 0x08
 b08:	df 80       	ldd	r13, Y+7	; 0x07
 b0a:	ee 80       	ldd	r14, Y+6	; 0x06
 b0c:	fd 80       	ldd	r15, Y+5	; 0x05
 b0e:	0c 81       	ldd	r16, Y+4	; 0x04
 b10:	1b 81       	ldd	r17, Y+3	; 0x03
 b12:	aa 81       	ldd	r26, Y+2	; 0x02
 b14:	b9 81       	ldd	r27, Y+1	; 0x01
 b16:	ce 0f       	add	r28, r30
 b18:	d1 1d       	adc	r29, r1
 b1a:	0f b6       	in	r0, 0x3f	; 63
 b1c:	f8 94       	cli
 b1e:	de bf       	out	0x3e, r29	; 62
 b20:	0f be       	out	0x3f, r0	; 63
 b22:	cd bf       	out	0x3d, r28	; 61
 b24:	ed 01       	movw	r28, r26
 b26:	08 95       	ret

00000b28 <_exit>:
 b28:	f8 94       	cli

00000b2a <__stop_program>:
 b2a:	ff cf       	rjmp	.-2      	; 0xb2a <__stop_program>
