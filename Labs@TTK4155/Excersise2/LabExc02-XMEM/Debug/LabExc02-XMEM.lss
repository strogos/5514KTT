
LabExc02-XMEM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001e4  00800100  00000c78  00000d0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  008002e4  008002e4  00000ef0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ef0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  00000f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000094d  00000000  00000000  0000101c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004d7  00000000  00000000  00001969  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000113f  00000000  00000000  00001e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000264  00000000  00000000  00002f80  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000d7bc  00000000  00000000  000031e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000767  00000000  00000000  000109a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00011107  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00003708  00000000  00000000  00011197  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	37 c0       	rjmp	.+110    	; 0x70 <__ctors_end>
   2:	00 00       	nop
   4:	50 c0       	rjmp	.+160    	; 0xa6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c0       	rjmp	.+156    	; 0xa6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c0       	rjmp	.+152    	; 0xa6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c0       	rjmp	.+148    	; 0xa6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c0       	rjmp	.+144    	; 0xa6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c0       	rjmp	.+140    	; 0xa6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c0       	rjmp	.+136    	; 0xa6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c0       	rjmp	.+132    	; 0xa6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c0       	rjmp	.+128    	; 0xa6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c0       	rjmp	.+124    	; 0xa6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c0       	rjmp	.+120    	; 0xa6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c0       	rjmp	.+116    	; 0xa6 <__bad_interrupt>
  32:	00 00       	nop
  34:	38 c0       	rjmp	.+112    	; 0xa6 <__bad_interrupt>
  36:	00 00       	nop
  38:	36 c0       	rjmp	.+108    	; 0xa6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c0       	rjmp	.+104    	; 0xa6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c0       	rjmp	.+100    	; 0xa6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c0       	rjmp	.+96     	; 0xa6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c0       	rjmp	.+92     	; 0xa6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	8f c1       	rjmp	.+798    	; 0x36c <__vector_19>
  4e:	00 00       	nop
  50:	2a c0       	rjmp	.+84     	; 0xa6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c0       	rjmp	.+80     	; 0xa6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c0       	rjmp	.+76     	; 0xa6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c0       	rjmp	.+72     	; 0xa6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c0       	rjmp	.+68     	; 0xa6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c0       	rjmp	.+64     	; 0xa6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c0       	rjmp	.+60     	; 0xa6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c0       	rjmp	.+56     	; 0xa6 <__bad_interrupt>
	...

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e7       	ldi	r30, 0x78	; 120
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 3e       	cpi	r26, 0xE4	; 228
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	a4 ee       	ldi	r26, 0xE4	; 228
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 3f       	cpi	r26, 0xF0	; 240
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	46 d1       	rcall	.+652    	; 0x330 <main>
  a4:	e7 c5       	rjmp	.+3022   	; 0xc74 <_exit>

000000a6 <__bad_interrupt>:
  a6:	ac cf       	rjmp	.-168    	; 0x0 <__vectors>

000000a8 <xmemInit>:

	//Write address on SRAM
	memory[address] = data;
	
	return 0;
}
  a8:	80 e8       	ldi	r24, 0x80	; 128
  aa:	85 bf       	out	0x35, r24	; 53
  ac:	16 be       	out	0x36, r1	; 54
  ae:	80 e2       	ldi	r24, 0x20	; 32
  b0:	80 bf       	out	0x30, r24	; 48
  b2:	08 95       	ret

000000b4 <xmemTest>:
  b4:	cf 92       	push	r12
  b6:	df 92       	push	r13
  b8:	ef 92       	push	r14
  ba:	ff 92       	push	r15
  bc:	0f 93       	push	r16
  be:	1f 93       	push	r17
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	86 e0       	ldi	r24, 0x06	; 6
  c6:	91 e0       	ldi	r25, 0x01	; 1
  c8:	e7 d2       	rcall	.+1486   	; 0x698 <puts>
  ca:	00 e0       	ldi	r16, 0x00	; 0
  cc:	10 e0       	ldi	r17, 0x00	; 0
  ce:	c0 e0       	ldi	r28, 0x00	; 0
  d0:	d0 e0       	ldi	r29, 0x00	; 0
  d2:	0f 2e       	mov	r0, r31
  d4:	fd e1       	ldi	r31, 0x1D	; 29
  d6:	ef 2e       	mov	r14, r31
  d8:	f1 e0       	ldi	r31, 0x01	; 1
  da:	ff 2e       	mov	r15, r31
  dc:	f0 2d       	mov	r31, r0
  de:	8c 2f       	mov	r24, r28
  e0:	80 95       	com	r24
  e2:	fe 01       	movw	r30, r28
  e4:	f8 5e       	subi	r31, 0xE8	; 232
  e6:	80 83       	st	Z, r24
  e8:	90 81       	ld	r25, Z
  ea:	98 17       	cp	r25, r24
  ec:	a1 f0       	breq	.+40     	; 0x116 <xmemTest+0x62>
  ee:	90 81       	ld	r25, Z
  f0:	1f 92       	push	r1
  f2:	8f 93       	push	r24
  f4:	1f 92       	push	r1
  f6:	9f 93       	push	r25
  f8:	df 93       	push	r29
  fa:	cf 93       	push	r28
  fc:	ff 92       	push	r15
  fe:	ef 92       	push	r14
 100:	ba d2       	rcall	.+1396   	; 0x676 <printf>
 102:	0f 5f       	subi	r16, 0xFF	; 255
 104:	1f 4f       	sbci	r17, 0xFF	; 255
 106:	8d b7       	in	r24, 0x3d	; 61
 108:	9e b7       	in	r25, 0x3e	; 62
 10a:	08 96       	adiw	r24, 0x08	; 8
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	f8 94       	cli
 110:	9e bf       	out	0x3e, r25	; 62
 112:	0f be       	out	0x3f, r0	; 63
 114:	8d bf       	out	0x3d, r24	; 61
 116:	21 96       	adiw	r28, 0x01	; 1
 118:	c1 15       	cp	r28, r1
 11a:	98 e0       	ldi	r25, 0x08	; 8
 11c:	d9 07       	cpc	r29, r25
 11e:	f9 f6       	brne	.-66     	; 0xde <xmemTest+0x2a>
 120:	e1 2c       	mov	r14, r1
 122:	f1 2c       	mov	r15, r1
 124:	c0 e0       	ldi	r28, 0x00	; 0
 126:	d0 e0       	ldi	r29, 0x00	; 0
 128:	0f 2e       	mov	r0, r31
 12a:	fd e5       	ldi	r31, 0x5D	; 93
 12c:	cf 2e       	mov	r12, r31
 12e:	f1 e0       	ldi	r31, 0x01	; 1
 130:	df 2e       	mov	r13, r31
 132:	f0 2d       	mov	r31, r0
 134:	8c 2f       	mov	r24, r28
 136:	80 95       	com	r24
 138:	fe 01       	movw	r30, r28
 13a:	f8 5e       	subi	r31, 0xE8	; 232
 13c:	90 81       	ld	r25, Z
 13e:	89 17       	cp	r24, r25
 140:	a9 f0       	breq	.+42     	; 0x16c <xmemTest+0xb8>
 142:	90 81       	ld	r25, Z
 144:	1f 92       	push	r1
 146:	8f 93       	push	r24
 148:	1f 92       	push	r1
 14a:	9f 93       	push	r25
 14c:	df 93       	push	r29
 14e:	cf 93       	push	r28
 150:	df 92       	push	r13
 152:	cf 92       	push	r12
 154:	90 d2       	rcall	.+1312   	; 0x676 <printf>
 156:	8f ef       	ldi	r24, 0xFF	; 255
 158:	e8 1a       	sub	r14, r24
 15a:	f8 0a       	sbc	r15, r24
 15c:	8d b7       	in	r24, 0x3d	; 61
 15e:	9e b7       	in	r25, 0x3e	; 62
 160:	08 96       	adiw	r24, 0x08	; 8
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	f8 94       	cli
 166:	9e bf       	out	0x3e, r25	; 62
 168:	0f be       	out	0x3f, r0	; 63
 16a:	8d bf       	out	0x3d, r24	; 61
 16c:	21 96       	adiw	r28, 0x01	; 1
 16e:	c1 15       	cp	r28, r1
 170:	98 e0       	ldi	r25, 0x08	; 8
 172:	d9 07       	cpc	r29, r25
 174:	f9 f6       	brne	.-66     	; 0x134 <xmemTest+0x80>
 176:	ff 92       	push	r15
 178:	ef 92       	push	r14
 17a:	1f 93       	push	r17
 17c:	0f 93       	push	r16
 17e:	8c e9       	ldi	r24, 0x9C	; 156
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	9f 93       	push	r25
 184:	8f 93       	push	r24
 186:	77 d2       	rcall	.+1262   	; 0x676 <printf>
 188:	0f 90       	pop	r0
 18a:	0f 90       	pop	r0
 18c:	0f 90       	pop	r0
 18e:	0f 90       	pop	r0
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	1f 91       	pop	r17
 19a:	0f 91       	pop	r16
 19c:	ff 90       	pop	r15
 19e:	ef 90       	pop	r14
 1a0:	df 90       	pop	r13
 1a2:	cf 90       	pop	r12
 1a4:	08 95       	ret

000001a6 <xmemExampleFunction>:
 1a6:	bf 92       	push	r11
 1a8:	cf 92       	push	r12
 1aa:	df 92       	push	r13
 1ac:	ef 92       	push	r14
 1ae:	ff 92       	push	r15
 1b0:	0f 93       	push	r16
 1b2:	1f 93       	push	r17
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	8c ee       	ldi	r24, 0xEC	; 236
 1ba:	91 e0       	ldi	r25, 0x01	; 1
 1bc:	6d d2       	rcall	.+1242   	; 0x698 <puts>
 1be:	80 e4       	ldi	r24, 0x40	; 64
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	e8 d0       	rcall	.+464    	; 0x394 <malloc>
 1c4:	7c 01       	movw	r14, r24
 1c6:	ff 92       	push	r15
 1c8:	8f 93       	push	r24
 1ca:	1f 92       	push	r1
 1cc:	80 e4       	ldi	r24, 0x40	; 64
 1ce:	8f 93       	push	r24
 1d0:	87 e0       	ldi	r24, 0x07	; 7
 1d2:	92 e0       	ldi	r25, 0x02	; 2
 1d4:	9f 93       	push	r25
 1d6:	8f 93       	push	r24
 1d8:	4e d2       	rcall	.+1180   	; 0x676 <printf>
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	f7 01       	movw	r30, r14
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	11 92       	st	Z+, r1
 1ec:	8f 5f       	subi	r24, 0xFF	; 255
 1ee:	80 34       	cpi	r24, 0x40	; 64
 1f0:	e1 f7       	brne	.-8      	; 0x1ea <xmemExampleFunction+0x44>
 1f2:	58 c0       	rjmp	.+176    	; 0x2a4 <xmemExampleFunction+0xfe>
 1f4:	f8 01       	movw	r30, r16
 1f6:	81 91       	ld	r24, Z+
 1f8:	8f 01       	movw	r16, r30
 1fa:	1f 92       	push	r1
 1fc:	8f 93       	push	r24
 1fe:	df 93       	push	r29
 200:	cf 93       	push	r28
 202:	39 d2       	rcall	.+1138   	; 0x676 <printf>
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
 20c:	8b 2d       	mov	r24, r11
 20e:	8f 70       	andi	r24, 0x0F	; 15
 210:	8f 30       	cpi	r24, 0x0F	; 15
 212:	19 f4       	brne	.+6      	; 0x21a <xmemExampleFunction+0x74>
 214:	81 ea       	ldi	r24, 0xA1	; 161
 216:	92 e0       	ldi	r25, 0x02	; 2
 218:	3f d2       	rcall	.+1150   	; 0x698 <puts>
 21a:	b3 94       	inc	r11
 21c:	e0 e4       	ldi	r30, 0x40	; 64
 21e:	be 12       	cpse	r11, r30
 220:	e9 cf       	rjmp	.-46     	; 0x1f4 <xmemExampleFunction+0x4e>
 222:	ff 92       	push	r15
 224:	ef 92       	push	r14
 226:	1f 92       	push	r1
 228:	80 e4       	ldi	r24, 0x40	; 64
 22a:	8f 93       	push	r24
 22c:	84 e4       	ldi	r24, 0x44	; 68
 22e:	92 e0       	ldi	r25, 0x02	; 2
 230:	9f 93       	push	r25
 232:	8f 93       	push	r24
 234:	20 d2       	rcall	.+1088   	; 0x676 <printf>
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
 23e:	0f 90       	pop	r0
 240:	0f 90       	pop	r0
 242:	f7 01       	movw	r30, r14
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	81 93       	st	Z+, r24
 248:	8f 5f       	subi	r24, 0xFF	; 255
 24a:	80 34       	cpi	r24, 0x40	; 64
 24c:	e1 f7       	brne	.-8      	; 0x246 <xmemExampleFunction+0xa0>
 24e:	18 c0       	rjmp	.+48     	; 0x280 <xmemExampleFunction+0xda>
 250:	f8 01       	movw	r30, r16
 252:	81 91       	ld	r24, Z+
 254:	8f 01       	movw	r16, r30
 256:	1f 92       	push	r1
 258:	8f 93       	push	r24
 25a:	df 93       	push	r29
 25c:	cf 93       	push	r28
 25e:	0b d2       	rcall	.+1046   	; 0x676 <printf>
 260:	0f 90       	pop	r0
 262:	0f 90       	pop	r0
 264:	0f 90       	pop	r0
 266:	0f 90       	pop	r0
 268:	8f 2d       	mov	r24, r15
 26a:	8f 70       	andi	r24, 0x0F	; 15
 26c:	8f 30       	cpi	r24, 0x0F	; 15
 26e:	19 f4       	brne	.+6      	; 0x276 <xmemExampleFunction+0xd0>
 270:	81 ea       	ldi	r24, 0xA1	; 161
 272:	92 e0       	ldi	r25, 0x02	; 2
 274:	11 d2       	rcall	.+1058   	; 0x698 <puts>
 276:	f3 94       	inc	r15
 278:	e0 e4       	ldi	r30, 0x40	; 64
 27a:	fe 12       	cpse	r15, r30
 27c:	e9 cf       	rjmp	.-46     	; 0x250 <xmemExampleFunction+0xaa>
 27e:	25 c0       	rjmp	.+74     	; 0x2ca <xmemExampleFunction+0x124>
 280:	f7 01       	movw	r30, r14
 282:	80 81       	ld	r24, Z
 284:	1f 92       	push	r1
 286:	8f 93       	push	r24
 288:	8e e3       	ldi	r24, 0x3E	; 62
 28a:	92 e0       	ldi	r25, 0x02	; 2
 28c:	9f 93       	push	r25
 28e:	8f 93       	push	r24
 290:	f2 d1       	rcall	.+996    	; 0x676 <printf>
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
 298:	0f 90       	pop	r0
 29a:	86 01       	movw	r16, r12
 29c:	f1 2c       	mov	r15, r1
 29e:	ce e3       	ldi	r28, 0x3E	; 62
 2a0:	d2 e0       	ldi	r29, 0x02	; 2
 2a2:	e9 cf       	rjmp	.-46     	; 0x276 <xmemExampleFunction+0xd0>
 2a4:	f7 01       	movw	r30, r14
 2a6:	81 91       	ld	r24, Z+
 2a8:	6f 01       	movw	r12, r30
 2aa:	1f 92       	push	r1
 2ac:	8f 93       	push	r24
 2ae:	8e e3       	ldi	r24, 0x3E	; 62
 2b0:	92 e0       	ldi	r25, 0x02	; 2
 2b2:	9f 93       	push	r25
 2b4:	8f 93       	push	r24
 2b6:	df d1       	rcall	.+958    	; 0x676 <printf>
 2b8:	0f 90       	pop	r0
 2ba:	0f 90       	pop	r0
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	86 01       	movw	r16, r12
 2c2:	b1 2c       	mov	r11, r1
 2c4:	ce e3       	ldi	r28, 0x3E	; 62
 2c6:	d2 e0       	ldi	r29, 0x02	; 2
 2c8:	a8 cf       	rjmp	.-176    	; 0x21a <xmemExampleFunction+0x74>
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	1f 91       	pop	r17
 2d0:	0f 91       	pop	r16
 2d2:	ff 90       	pop	r15
 2d4:	ef 90       	pop	r14
 2d6:	df 90       	pop	r13
 2d8:	cf 90       	pop	r12
 2da:	bf 90       	pop	r11
 2dc:	08 95       	ret

000002de <xmemReadFrom>:
{
	//Start address for the xmem
	uint8_t *memory = 0x1800;
	
	//Read address from SRAM
	return memory[address];
 2de:	98 5e       	subi	r25, 0xE8	; 232
 2e0:	fc 01       	movw	r30, r24
 2e2:	80 81       	ld	r24, Z
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	08 95       	ret

000002e8 <usartSendByte>:
///<summary>
///Send a byte using USART
///</summary>
void usartSendByte(uint8_t byteToSend)
{
		while((UCSR0A&(1<<UDRE0))==0);//---------------//Only transmit data if data bus is available (not already transmitting)
 2e8:	5d 9b       	sbis	0x0b, 5	; 11
 2ea:	fe cf       	rjmp	.-4      	; 0x2e8 <usartSendByte>
		UDR0=byteToSend;//---------------------------//transmit byte
 2ec:	8c b9       	out	0x0c, r24	; 12
 2ee:	08 95       	ret

000002f0 <usartInitialize>:
		#if USART_OPERATING_MODE_U2X
			unsigned int UBRR=(F_CPU / (8UL * USART_BAUDRATE)) - 1; //if integer trunctuation is noticed (...not getting the expected baudrate) due to integer devision, USE: ((F_CPU + USART_BAUD_RATE * 8L) / (USART_BAUD_RATE * 16L) - 1) instead. When doing integer division it is usually better to round to the nearest integer, rather than to the lowest. 
			UCSR0A |= (1<<U2X0);//---------------------------//U2x=1
		#else
			unsigned int UBRR=(F_CPU / (16UL * USART_BAUDRATE)) - 1;
			UCSR0A &= ~(1<<U2X0);//---------------------------//U2X=0
 2f0:	59 98       	cbi	0x0b, 1	; 11
		#endif

		//Set up the baud rate for USART0
		UBRR0L=UBRR;//---------------------------// load lower 8 bits of baud rate value
 2f2:	8f e1       	ldi	r24, 0x1F	; 31
 2f4:	89 b9       	out	0x09, r24	; 9
		UBRR0H=(UBRR>>8);//---------------------------// load upper 8 bits of baud rate value	
 2f6:	10 bc       	out	0x20, r1	; 32
		
		//Enable Tx & Rx
		UCSR0B=(1<<TXEN0)|(1<<RXEN0);
 2f8:	88 e1       	ldi	r24, 0x18	; 24
 2fa:	8a b9       	out	0x0a, r24	; 10
		/*Configure Data Format: 
			-	Data Bits = 8;
			-	Stop Bits = 2;
			-	Parity = EVEN;		
		*/
		UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00)|(1<<UPM01);
 2fc:	8e ea       	ldi	r24, 0xAE	; 174
 2fe:	80 bd       	out	0x20, r24	; 32
		*	- Second parameter: optional; used for get functions, ie. receiving a character from the USART.
		*	- BEAWARE that this function uses malloc()!! VERY resource demanding. 
		*/
		if(USART_ENABLE_printf)
		{
			fdevopen(&usartSendByte,NULL);
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	84 e7       	ldi	r24, 0x74	; 116
 306:	91 e0       	ldi	r25, 0x01	; 1
 308:	6c c1       	rjmp	.+728    	; 0x5e2 <fdevopen>
 30a:	08 95       	ret

0000030c <usartReceiveByte>:
///<summary>
/////Receive a byte using USART
///</summary>
uint8_t usartReceiveByte(void)
{
	while((UCSR0A&(1<<RXC0))==0);//---------------------------//wait until data is received
 30c:	5f 9b       	sbis	0x0b, 7	; 11
 30e:	fe cf       	rjmp	.-4      	; 0x30c <usartReceiveByte>
	
	return UDR0;//-------------------------------------------//return received data
 310:	8c b1       	in	r24, 0x0c	; 12
}
 312:	08 95       	ret

00000314 <usartSendDataString>:

///<summary>
///Send a string of data using USART
///</summary>
void usartSendDataString(const char *dataString)
{
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
 318:	ec 01       	movw	r28, r24
	while(*dataString)
 31a:	88 81       	ld	r24, Y
 31c:	88 23       	and	r24, r24
 31e:	29 f0       	breq	.+10     	; 0x32a <usartSendDataString+0x16>
 320:	21 96       	adiw	r28, 0x01	; 1
	{
		usartSendByte(*dataString);
 322:	e2 df       	rcall	.-60     	; 0x2e8 <usartSendByte>
///<summary>
///Send a string of data using USART
///</summary>
void usartSendDataString(const char *dataString)
{
	while(*dataString)
 324:	89 91       	ld	r24, Y+
 326:	81 11       	cpse	r24, r1
 328:	fc cf       	rjmp	.-8      	; 0x322 <usartSendDataString+0xe>
	{
		usartSendByte(*dataString);
		dataString++;
	}
 32a:	df 91       	pop	r29
 32c:	cf 91       	pop	r28
 32e:	08 95       	ret

00000330 <main>:

//main function
int main (void)
{
	// Initialise external memory interface // NB: "xmemInit()" must be called before any function that uses heap memory!!
	xmemInit();
 330:	bb de       	rcall	.-650    	; 0xa8 <xmemInit>
	
	// dummy for testing USART
	//char *dataString="\r......Booting up.\r";
		
	//init. USART
	usartInitialize();//--------*****-////TO DO: implement light diode blink if(usartInitialize()); else ERROR BLINK CODE.. also write reference for blinking code...
 332:	de df       	rcall	.-68     	; 0x2f0 <usartInitialize>
	
	//test external SRAM
	xmemTest();
 334:	bf de       	rcall	.-642    	; 0xb4 <xmemTest>
	xmemExampleFunction();
 336:	37 df       	rcall	.-402    	; 0x1a6 <xmemExampleFunction>
	printf("\n\r0x%02x",xmemReadFrom(5));
 338:	85 e0       	ldi	r24, 0x05	; 5
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	d0 df       	rcall	.-96     	; 0x2de <xmemReadFrom>
 33e:	9f 93       	push	r25
 340:	8f 93       	push	r24
 342:	8c ec       	ldi	r24, 0xCC	; 204
 344:	92 e0       	ldi	r25, 0x02	; 2
 346:	9f 93       	push	r25
 348:	8f 93       	push	r24
 34a:	95 d1       	rcall	.+810    	; 0x676 <printf>
	//int freeRAM;
	//freeRam();
	
	//printf("%d",freeRam());
	
	usartSendDataString("\r\n\n@ECHO ON\r\n");
 34c:	85 ed       	ldi	r24, 0xD5	; 213
 34e:	92 e0       	ldi	r25, 0x02	; 2
 350:	e1 df       	rcall	.-62     	; 0x314 <usartSendDataString>
 352:	0f 90       	pop	r0
 354:	0f 90       	pop	r0
 356:	0f 90       	pop	r0
 358:	0f 90       	pop	r0
	
	//Program loop
	while(true)
	{
		if(!interruptOn)
 35a:	80 91 e5 02 	lds	r24, 0x02E5
 35e:	81 11       	cpse	r24, r1
 360:	ff cf       	rjmp	.-2      	; 0x360 <main+0x30>
		{
			//echo received data
			byteOfData=usartReceiveByte();
 362:	d4 df       	rcall	.-88     	; 0x30c <usartReceiveByte>
 364:	80 93 e4 02 	sts	0x02E4, r24
			usartSendByte(byteOfData);
 368:	bf df       	rcall	.-130    	; 0x2e8 <usartSendByte>
 36a:	f7 cf       	rjmp	.-18     	; 0x35a <main+0x2a>

0000036c <__vector_19>:

}

//interrupt function
ISR (USART0_RXC_vect,ISR_BLOCK)
{
 36c:	1f 92       	push	r1
 36e:	0f 92       	push	r0
 370:	0f b6       	in	r0, 0x3f	; 63
 372:	0f 92       	push	r0
 374:	11 24       	eor	r1, r1
 376:	8f 93       	push	r24
	if (interruptOn)
 378:	80 91 e5 02 	lds	r24, 0x02E5
 37c:	88 23       	and	r24, r24
 37e:	21 f0       	breq	.+8      	; 0x388 <__vector_19+0x1c>
	{
		byteOfData=UDR0;//grab byte
 380:	8c b1       	in	r24, 0x0c	; 12
 382:	80 93 e4 02 	sts	0x02E4, r24
		UDR0=byteOfData;//echo grabbed byte
 386:	8c b9       	out	0x0c, r24	; 12
	}
}
 388:	8f 91       	pop	r24
 38a:	0f 90       	pop	r0
 38c:	0f be       	out	0x3f, r0	; 63
 38e:	0f 90       	pop	r0
 390:	1f 90       	pop	r1
 392:	18 95       	reti

00000394 <malloc>:
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	82 30       	cpi	r24, 0x02	; 2
 39a:	91 05       	cpc	r25, r1
 39c:	10 f4       	brcc	.+4      	; 0x3a2 <malloc+0xe>
 39e:	82 e0       	ldi	r24, 0x02	; 2
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	e0 91 e8 02 	lds	r30, 0x02E8
 3a6:	f0 91 e9 02 	lds	r31, 0x02E9
 3aa:	20 e0       	ldi	r18, 0x00	; 0
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	a0 e0       	ldi	r26, 0x00	; 0
 3b0:	b0 e0       	ldi	r27, 0x00	; 0
 3b2:	30 97       	sbiw	r30, 0x00	; 0
 3b4:	39 f1       	breq	.+78     	; 0x404 <malloc+0x70>
 3b6:	40 81       	ld	r20, Z
 3b8:	51 81       	ldd	r21, Z+1	; 0x01
 3ba:	48 17       	cp	r20, r24
 3bc:	59 07       	cpc	r21, r25
 3be:	b8 f0       	brcs	.+46     	; 0x3ee <malloc+0x5a>
 3c0:	48 17       	cp	r20, r24
 3c2:	59 07       	cpc	r21, r25
 3c4:	71 f4       	brne	.+28     	; 0x3e2 <malloc+0x4e>
 3c6:	82 81       	ldd	r24, Z+2	; 0x02
 3c8:	93 81       	ldd	r25, Z+3	; 0x03
 3ca:	10 97       	sbiw	r26, 0x00	; 0
 3cc:	29 f0       	breq	.+10     	; 0x3d8 <malloc+0x44>
 3ce:	13 96       	adiw	r26, 0x03	; 3
 3d0:	9c 93       	st	X, r25
 3d2:	8e 93       	st	-X, r24
 3d4:	12 97       	sbiw	r26, 0x02	; 2
 3d6:	2c c0       	rjmp	.+88     	; 0x430 <malloc+0x9c>
 3d8:	90 93 e9 02 	sts	0x02E9, r25
 3dc:	80 93 e8 02 	sts	0x02E8, r24
 3e0:	27 c0       	rjmp	.+78     	; 0x430 <malloc+0x9c>
 3e2:	21 15       	cp	r18, r1
 3e4:	31 05       	cpc	r19, r1
 3e6:	31 f0       	breq	.+12     	; 0x3f4 <malloc+0x60>
 3e8:	42 17       	cp	r20, r18
 3ea:	53 07       	cpc	r21, r19
 3ec:	18 f0       	brcs	.+6      	; 0x3f4 <malloc+0x60>
 3ee:	a9 01       	movw	r20, r18
 3f0:	db 01       	movw	r26, r22
 3f2:	01 c0       	rjmp	.+2      	; 0x3f6 <malloc+0x62>
 3f4:	ef 01       	movw	r28, r30
 3f6:	9a 01       	movw	r18, r20
 3f8:	bd 01       	movw	r22, r26
 3fa:	df 01       	movw	r26, r30
 3fc:	02 80       	ldd	r0, Z+2	; 0x02
 3fe:	f3 81       	ldd	r31, Z+3	; 0x03
 400:	e0 2d       	mov	r30, r0
 402:	d7 cf       	rjmp	.-82     	; 0x3b2 <malloc+0x1e>
 404:	21 15       	cp	r18, r1
 406:	31 05       	cpc	r19, r1
 408:	f9 f0       	breq	.+62     	; 0x448 <malloc+0xb4>
 40a:	28 1b       	sub	r18, r24
 40c:	39 0b       	sbc	r19, r25
 40e:	24 30       	cpi	r18, 0x04	; 4
 410:	31 05       	cpc	r19, r1
 412:	80 f4       	brcc	.+32     	; 0x434 <malloc+0xa0>
 414:	8a 81       	ldd	r24, Y+2	; 0x02
 416:	9b 81       	ldd	r25, Y+3	; 0x03
 418:	61 15       	cp	r22, r1
 41a:	71 05       	cpc	r23, r1
 41c:	21 f0       	breq	.+8      	; 0x426 <malloc+0x92>
 41e:	fb 01       	movw	r30, r22
 420:	93 83       	std	Z+3, r25	; 0x03
 422:	82 83       	std	Z+2, r24	; 0x02
 424:	04 c0       	rjmp	.+8      	; 0x42e <malloc+0x9a>
 426:	90 93 e9 02 	sts	0x02E9, r25
 42a:	80 93 e8 02 	sts	0x02E8, r24
 42e:	fe 01       	movw	r30, r28
 430:	32 96       	adiw	r30, 0x02	; 2
 432:	44 c0       	rjmp	.+136    	; 0x4bc <malloc+0x128>
 434:	fe 01       	movw	r30, r28
 436:	e2 0f       	add	r30, r18
 438:	f3 1f       	adc	r31, r19
 43a:	81 93       	st	Z+, r24
 43c:	91 93       	st	Z+, r25
 43e:	22 50       	subi	r18, 0x02	; 2
 440:	31 09       	sbc	r19, r1
 442:	39 83       	std	Y+1, r19	; 0x01
 444:	28 83       	st	Y, r18
 446:	3a c0       	rjmp	.+116    	; 0x4bc <malloc+0x128>
 448:	20 91 e6 02 	lds	r18, 0x02E6
 44c:	30 91 e7 02 	lds	r19, 0x02E7
 450:	23 2b       	or	r18, r19
 452:	41 f4       	brne	.+16     	; 0x464 <malloc+0xd0>
 454:	20 91 02 01 	lds	r18, 0x0102
 458:	30 91 03 01 	lds	r19, 0x0103
 45c:	30 93 e7 02 	sts	0x02E7, r19
 460:	20 93 e6 02 	sts	0x02E6, r18
 464:	20 91 00 01 	lds	r18, 0x0100
 468:	30 91 01 01 	lds	r19, 0x0101
 46c:	21 15       	cp	r18, r1
 46e:	31 05       	cpc	r19, r1
 470:	41 f4       	brne	.+16     	; 0x482 <malloc+0xee>
 472:	2d b7       	in	r18, 0x3d	; 61
 474:	3e b7       	in	r19, 0x3e	; 62
 476:	40 91 04 01 	lds	r20, 0x0104
 47a:	50 91 05 01 	lds	r21, 0x0105
 47e:	24 1b       	sub	r18, r20
 480:	35 0b       	sbc	r19, r21
 482:	e0 91 e6 02 	lds	r30, 0x02E6
 486:	f0 91 e7 02 	lds	r31, 0x02E7
 48a:	e2 17       	cp	r30, r18
 48c:	f3 07       	cpc	r31, r19
 48e:	a0 f4       	brcc	.+40     	; 0x4b8 <malloc+0x124>
 490:	2e 1b       	sub	r18, r30
 492:	3f 0b       	sbc	r19, r31
 494:	28 17       	cp	r18, r24
 496:	39 07       	cpc	r19, r25
 498:	78 f0       	brcs	.+30     	; 0x4b8 <malloc+0x124>
 49a:	ac 01       	movw	r20, r24
 49c:	4e 5f       	subi	r20, 0xFE	; 254
 49e:	5f 4f       	sbci	r21, 0xFF	; 255
 4a0:	24 17       	cp	r18, r20
 4a2:	35 07       	cpc	r19, r21
 4a4:	48 f0       	brcs	.+18     	; 0x4b8 <malloc+0x124>
 4a6:	4e 0f       	add	r20, r30
 4a8:	5f 1f       	adc	r21, r31
 4aa:	50 93 e7 02 	sts	0x02E7, r21
 4ae:	40 93 e6 02 	sts	0x02E6, r20
 4b2:	81 93       	st	Z+, r24
 4b4:	91 93       	st	Z+, r25
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <malloc+0x128>
 4b8:	e0 e0       	ldi	r30, 0x00	; 0
 4ba:	f0 e0       	ldi	r31, 0x00	; 0
 4bc:	cf 01       	movw	r24, r30
 4be:	df 91       	pop	r29
 4c0:	cf 91       	pop	r28
 4c2:	08 95       	ret

000004c4 <free>:
 4c4:	cf 93       	push	r28
 4c6:	df 93       	push	r29
 4c8:	00 97       	sbiw	r24, 0x00	; 0
 4ca:	09 f4       	brne	.+2      	; 0x4ce <free+0xa>
 4cc:	87 c0       	rjmp	.+270    	; 0x5dc <__stack+0xdd>
 4ce:	fc 01       	movw	r30, r24
 4d0:	32 97       	sbiw	r30, 0x02	; 2
 4d2:	13 82       	std	Z+3, r1	; 0x03
 4d4:	12 82       	std	Z+2, r1	; 0x02
 4d6:	c0 91 e8 02 	lds	r28, 0x02E8
 4da:	d0 91 e9 02 	lds	r29, 0x02E9
 4de:	20 97       	sbiw	r28, 0x00	; 0
 4e0:	81 f4       	brne	.+32     	; 0x502 <__stack+0x3>
 4e2:	20 81       	ld	r18, Z
 4e4:	31 81       	ldd	r19, Z+1	; 0x01
 4e6:	28 0f       	add	r18, r24
 4e8:	39 1f       	adc	r19, r25
 4ea:	80 91 e6 02 	lds	r24, 0x02E6
 4ee:	90 91 e7 02 	lds	r25, 0x02E7
 4f2:	82 17       	cp	r24, r18
 4f4:	93 07       	cpc	r25, r19
 4f6:	79 f5       	brne	.+94     	; 0x556 <__stack+0x57>
 4f8:	f0 93 e7 02 	sts	0x02E7, r31
 4fc:	e0 93 e6 02 	sts	0x02E6, r30
 500:	6d c0       	rjmp	.+218    	; 0x5dc <__stack+0xdd>
 502:	de 01       	movw	r26, r28
 504:	20 e0       	ldi	r18, 0x00	; 0
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	ae 17       	cp	r26, r30
 50a:	bf 07       	cpc	r27, r31
 50c:	50 f4       	brcc	.+20     	; 0x522 <__stack+0x23>
 50e:	12 96       	adiw	r26, 0x02	; 2
 510:	4d 91       	ld	r20, X+
 512:	5c 91       	ld	r21, X
 514:	13 97       	sbiw	r26, 0x03	; 3
 516:	9d 01       	movw	r18, r26
 518:	41 15       	cp	r20, r1
 51a:	51 05       	cpc	r21, r1
 51c:	09 f1       	breq	.+66     	; 0x560 <__stack+0x61>
 51e:	da 01       	movw	r26, r20
 520:	f3 cf       	rjmp	.-26     	; 0x508 <__stack+0x9>
 522:	b3 83       	std	Z+3, r27	; 0x03
 524:	a2 83       	std	Z+2, r26	; 0x02
 526:	40 81       	ld	r20, Z
 528:	51 81       	ldd	r21, Z+1	; 0x01
 52a:	84 0f       	add	r24, r20
 52c:	95 1f       	adc	r25, r21
 52e:	8a 17       	cp	r24, r26
 530:	9b 07       	cpc	r25, r27
 532:	71 f4       	brne	.+28     	; 0x550 <__stack+0x51>
 534:	8d 91       	ld	r24, X+
 536:	9c 91       	ld	r25, X
 538:	11 97       	sbiw	r26, 0x01	; 1
 53a:	84 0f       	add	r24, r20
 53c:	95 1f       	adc	r25, r21
 53e:	02 96       	adiw	r24, 0x02	; 2
 540:	91 83       	std	Z+1, r25	; 0x01
 542:	80 83       	st	Z, r24
 544:	12 96       	adiw	r26, 0x02	; 2
 546:	8d 91       	ld	r24, X+
 548:	9c 91       	ld	r25, X
 54a:	13 97       	sbiw	r26, 0x03	; 3
 54c:	93 83       	std	Z+3, r25	; 0x03
 54e:	82 83       	std	Z+2, r24	; 0x02
 550:	21 15       	cp	r18, r1
 552:	31 05       	cpc	r19, r1
 554:	29 f4       	brne	.+10     	; 0x560 <__stack+0x61>
 556:	f0 93 e9 02 	sts	0x02E9, r31
 55a:	e0 93 e8 02 	sts	0x02E8, r30
 55e:	3e c0       	rjmp	.+124    	; 0x5dc <__stack+0xdd>
 560:	d9 01       	movw	r26, r18
 562:	13 96       	adiw	r26, 0x03	; 3
 564:	fc 93       	st	X, r31
 566:	ee 93       	st	-X, r30
 568:	12 97       	sbiw	r26, 0x02	; 2
 56a:	4d 91       	ld	r20, X+
 56c:	5d 91       	ld	r21, X+
 56e:	a4 0f       	add	r26, r20
 570:	b5 1f       	adc	r27, r21
 572:	ea 17       	cp	r30, r26
 574:	fb 07       	cpc	r31, r27
 576:	79 f4       	brne	.+30     	; 0x596 <__stack+0x97>
 578:	80 81       	ld	r24, Z
 57a:	91 81       	ldd	r25, Z+1	; 0x01
 57c:	84 0f       	add	r24, r20
 57e:	95 1f       	adc	r25, r21
 580:	02 96       	adiw	r24, 0x02	; 2
 582:	d9 01       	movw	r26, r18
 584:	11 96       	adiw	r26, 0x01	; 1
 586:	9c 93       	st	X, r25
 588:	8e 93       	st	-X, r24
 58a:	82 81       	ldd	r24, Z+2	; 0x02
 58c:	93 81       	ldd	r25, Z+3	; 0x03
 58e:	13 96       	adiw	r26, 0x03	; 3
 590:	9c 93       	st	X, r25
 592:	8e 93       	st	-X, r24
 594:	12 97       	sbiw	r26, 0x02	; 2
 596:	e0 e0       	ldi	r30, 0x00	; 0
 598:	f0 e0       	ldi	r31, 0x00	; 0
 59a:	8a 81       	ldd	r24, Y+2	; 0x02
 59c:	9b 81       	ldd	r25, Y+3	; 0x03
 59e:	00 97       	sbiw	r24, 0x00	; 0
 5a0:	19 f0       	breq	.+6      	; 0x5a8 <__stack+0xa9>
 5a2:	fe 01       	movw	r30, r28
 5a4:	ec 01       	movw	r28, r24
 5a6:	f9 cf       	rjmp	.-14     	; 0x59a <__stack+0x9b>
 5a8:	ce 01       	movw	r24, r28
 5aa:	02 96       	adiw	r24, 0x02	; 2
 5ac:	28 81       	ld	r18, Y
 5ae:	39 81       	ldd	r19, Y+1	; 0x01
 5b0:	82 0f       	add	r24, r18
 5b2:	93 1f       	adc	r25, r19
 5b4:	20 91 e6 02 	lds	r18, 0x02E6
 5b8:	30 91 e7 02 	lds	r19, 0x02E7
 5bc:	28 17       	cp	r18, r24
 5be:	39 07       	cpc	r19, r25
 5c0:	69 f4       	brne	.+26     	; 0x5dc <__stack+0xdd>
 5c2:	30 97       	sbiw	r30, 0x00	; 0
 5c4:	29 f4       	brne	.+10     	; 0x5d0 <__stack+0xd1>
 5c6:	10 92 e9 02 	sts	0x02E9, r1
 5ca:	10 92 e8 02 	sts	0x02E8, r1
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <__stack+0xd5>
 5d0:	13 82       	std	Z+3, r1	; 0x03
 5d2:	12 82       	std	Z+2, r1	; 0x02
 5d4:	d0 93 e7 02 	sts	0x02E7, r29
 5d8:	c0 93 e6 02 	sts	0x02E6, r28
 5dc:	df 91       	pop	r29
 5de:	cf 91       	pop	r28
 5e0:	08 95       	ret

000005e2 <fdevopen>:
 5e2:	0f 93       	push	r16
 5e4:	1f 93       	push	r17
 5e6:	cf 93       	push	r28
 5e8:	df 93       	push	r29
 5ea:	ec 01       	movw	r28, r24
 5ec:	8b 01       	movw	r16, r22
 5ee:	00 97       	sbiw	r24, 0x00	; 0
 5f0:	31 f4       	brne	.+12     	; 0x5fe <fdevopen+0x1c>
 5f2:	61 15       	cp	r22, r1
 5f4:	71 05       	cpc	r23, r1
 5f6:	19 f4       	brne	.+6      	; 0x5fe <fdevopen+0x1c>
 5f8:	80 e0       	ldi	r24, 0x00	; 0
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	37 c0       	rjmp	.+110    	; 0x66c <fdevopen+0x8a>
 5fe:	6e e0       	ldi	r22, 0x0E	; 14
 600:	70 e0       	ldi	r23, 0x00	; 0
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	38 d2       	rcall	.+1136   	; 0xa78 <calloc>
 608:	fc 01       	movw	r30, r24
 60a:	00 97       	sbiw	r24, 0x00	; 0
 60c:	a9 f3       	breq	.-22     	; 0x5f8 <fdevopen+0x16>
 60e:	80 e8       	ldi	r24, 0x80	; 128
 610:	83 83       	std	Z+3, r24	; 0x03
 612:	01 15       	cp	r16, r1
 614:	11 05       	cpc	r17, r1
 616:	71 f0       	breq	.+28     	; 0x634 <fdevopen+0x52>
 618:	13 87       	std	Z+11, r17	; 0x0b
 61a:	02 87       	std	Z+10, r16	; 0x0a
 61c:	81 e8       	ldi	r24, 0x81	; 129
 61e:	83 83       	std	Z+3, r24	; 0x03
 620:	80 91 ea 02 	lds	r24, 0x02EA
 624:	90 91 eb 02 	lds	r25, 0x02EB
 628:	89 2b       	or	r24, r25
 62a:	21 f4       	brne	.+8      	; 0x634 <fdevopen+0x52>
 62c:	f0 93 eb 02 	sts	0x02EB, r31
 630:	e0 93 ea 02 	sts	0x02EA, r30
 634:	20 97       	sbiw	r28, 0x00	; 0
 636:	c9 f0       	breq	.+50     	; 0x66a <fdevopen+0x88>
 638:	d1 87       	std	Z+9, r29	; 0x09
 63a:	c0 87       	std	Z+8, r28	; 0x08
 63c:	83 81       	ldd	r24, Z+3	; 0x03
 63e:	82 60       	ori	r24, 0x02	; 2
 640:	83 83       	std	Z+3, r24	; 0x03
 642:	80 91 ec 02 	lds	r24, 0x02EC
 646:	90 91 ed 02 	lds	r25, 0x02ED
 64a:	89 2b       	or	r24, r25
 64c:	71 f4       	brne	.+28     	; 0x66a <fdevopen+0x88>
 64e:	f0 93 ed 02 	sts	0x02ED, r31
 652:	e0 93 ec 02 	sts	0x02EC, r30
 656:	80 91 ee 02 	lds	r24, 0x02EE
 65a:	90 91 ef 02 	lds	r25, 0x02EF
 65e:	89 2b       	or	r24, r25
 660:	21 f4       	brne	.+8      	; 0x66a <fdevopen+0x88>
 662:	f0 93 ef 02 	sts	0x02EF, r31
 666:	e0 93 ee 02 	sts	0x02EE, r30
 66a:	cf 01       	movw	r24, r30
 66c:	df 91       	pop	r29
 66e:	cf 91       	pop	r28
 670:	1f 91       	pop	r17
 672:	0f 91       	pop	r16
 674:	08 95       	ret

00000676 <printf>:
 676:	a0 e0       	ldi	r26, 0x00	; 0
 678:	b0 e0       	ldi	r27, 0x00	; 0
 67a:	e0 e4       	ldi	r30, 0x40	; 64
 67c:	f3 e0       	ldi	r31, 0x03	; 3
 67e:	d3 c2       	rjmp	.+1446   	; 0xc26 <__prologue_saves__+0x20>
 680:	fe 01       	movw	r30, r28
 682:	35 96       	adiw	r30, 0x05	; 5
 684:	61 91       	ld	r22, Z+
 686:	71 91       	ld	r23, Z+
 688:	af 01       	movw	r20, r30
 68a:	80 91 ec 02 	lds	r24, 0x02EC
 68e:	90 91 ed 02 	lds	r25, 0x02ED
 692:	2f d0       	rcall	.+94     	; 0x6f2 <vfprintf>
 694:	e2 e0       	ldi	r30, 0x02	; 2
 696:	e3 c2       	rjmp	.+1478   	; 0xc5e <__epilogue_restores__+0x20>

00000698 <puts>:
 698:	0f 93       	push	r16
 69a:	1f 93       	push	r17
 69c:	cf 93       	push	r28
 69e:	df 93       	push	r29
 6a0:	e0 91 ec 02 	lds	r30, 0x02EC
 6a4:	f0 91 ed 02 	lds	r31, 0x02ED
 6a8:	23 81       	ldd	r18, Z+3	; 0x03
 6aa:	21 ff       	sbrs	r18, 1
 6ac:	1b c0       	rjmp	.+54     	; 0x6e4 <puts+0x4c>
 6ae:	ec 01       	movw	r28, r24
 6b0:	00 e0       	ldi	r16, 0x00	; 0
 6b2:	10 e0       	ldi	r17, 0x00	; 0
 6b4:	89 91       	ld	r24, Y+
 6b6:	60 91 ec 02 	lds	r22, 0x02EC
 6ba:	70 91 ed 02 	lds	r23, 0x02ED
 6be:	db 01       	movw	r26, r22
 6c0:	18 96       	adiw	r26, 0x08	; 8
 6c2:	ed 91       	ld	r30, X+
 6c4:	fc 91       	ld	r31, X
 6c6:	19 97       	sbiw	r26, 0x09	; 9
 6c8:	88 23       	and	r24, r24
 6ca:	31 f0       	breq	.+12     	; 0x6d8 <puts+0x40>
 6cc:	09 95       	icall
 6ce:	89 2b       	or	r24, r25
 6d0:	89 f3       	breq	.-30     	; 0x6b4 <puts+0x1c>
 6d2:	0f ef       	ldi	r16, 0xFF	; 255
 6d4:	1f ef       	ldi	r17, 0xFF	; 255
 6d6:	ee cf       	rjmp	.-36     	; 0x6b4 <puts+0x1c>
 6d8:	8a e0       	ldi	r24, 0x0A	; 10
 6da:	09 95       	icall
 6dc:	89 2b       	or	r24, r25
 6de:	11 f4       	brne	.+4      	; 0x6e4 <puts+0x4c>
 6e0:	c8 01       	movw	r24, r16
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <puts+0x50>
 6e4:	8f ef       	ldi	r24, 0xFF	; 255
 6e6:	9f ef       	ldi	r25, 0xFF	; 255
 6e8:	df 91       	pop	r29
 6ea:	cf 91       	pop	r28
 6ec:	1f 91       	pop	r17
 6ee:	0f 91       	pop	r16
 6f0:	08 95       	ret

000006f2 <vfprintf>:
 6f2:	ac e0       	ldi	r26, 0x0C	; 12
 6f4:	b0 e0       	ldi	r27, 0x00	; 0
 6f6:	ee e7       	ldi	r30, 0x7E	; 126
 6f8:	f3 e0       	ldi	r31, 0x03	; 3
 6fa:	85 c2       	rjmp	.+1290   	; 0xc06 <__prologue_saves__>
 6fc:	7c 01       	movw	r14, r24
 6fe:	6b 01       	movw	r12, r22
 700:	8a 01       	movw	r16, r20
 702:	fc 01       	movw	r30, r24
 704:	17 82       	std	Z+7, r1	; 0x07
 706:	16 82       	std	Z+6, r1	; 0x06
 708:	83 81       	ldd	r24, Z+3	; 0x03
 70a:	81 ff       	sbrs	r24, 1
 70c:	b0 c1       	rjmp	.+864    	; 0xa6e <vfprintf+0x37c>
 70e:	ce 01       	movw	r24, r28
 710:	01 96       	adiw	r24, 0x01	; 1
 712:	4c 01       	movw	r8, r24
 714:	f7 01       	movw	r30, r14
 716:	93 81       	ldd	r25, Z+3	; 0x03
 718:	f6 01       	movw	r30, r12
 71a:	93 fd       	sbrc	r25, 3
 71c:	85 91       	lpm	r24, Z+
 71e:	93 ff       	sbrs	r25, 3
 720:	81 91       	ld	r24, Z+
 722:	6f 01       	movw	r12, r30
 724:	88 23       	and	r24, r24
 726:	09 f4       	brne	.+2      	; 0x72a <vfprintf+0x38>
 728:	9e c1       	rjmp	.+828    	; 0xa66 <vfprintf+0x374>
 72a:	85 32       	cpi	r24, 0x25	; 37
 72c:	39 f4       	brne	.+14     	; 0x73c <vfprintf+0x4a>
 72e:	93 fd       	sbrc	r25, 3
 730:	85 91       	lpm	r24, Z+
 732:	93 ff       	sbrs	r25, 3
 734:	81 91       	ld	r24, Z+
 736:	6f 01       	movw	r12, r30
 738:	85 32       	cpi	r24, 0x25	; 37
 73a:	21 f4       	brne	.+8      	; 0x744 <vfprintf+0x52>
 73c:	b7 01       	movw	r22, r14
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	d2 d1       	rcall	.+932    	; 0xae6 <fputc>
 742:	e8 cf       	rjmp	.-48     	; 0x714 <vfprintf+0x22>
 744:	51 2c       	mov	r5, r1
 746:	31 2c       	mov	r3, r1
 748:	20 e0       	ldi	r18, 0x00	; 0
 74a:	20 32       	cpi	r18, 0x20	; 32
 74c:	a0 f4       	brcc	.+40     	; 0x776 <vfprintf+0x84>
 74e:	8b 32       	cpi	r24, 0x2B	; 43
 750:	69 f0       	breq	.+26     	; 0x76c <vfprintf+0x7a>
 752:	30 f4       	brcc	.+12     	; 0x760 <vfprintf+0x6e>
 754:	80 32       	cpi	r24, 0x20	; 32
 756:	59 f0       	breq	.+22     	; 0x76e <vfprintf+0x7c>
 758:	83 32       	cpi	r24, 0x23	; 35
 75a:	69 f4       	brne	.+26     	; 0x776 <vfprintf+0x84>
 75c:	20 61       	ori	r18, 0x10	; 16
 75e:	2c c0       	rjmp	.+88     	; 0x7b8 <vfprintf+0xc6>
 760:	8d 32       	cpi	r24, 0x2D	; 45
 762:	39 f0       	breq	.+14     	; 0x772 <vfprintf+0x80>
 764:	80 33       	cpi	r24, 0x30	; 48
 766:	39 f4       	brne	.+14     	; 0x776 <vfprintf+0x84>
 768:	21 60       	ori	r18, 0x01	; 1
 76a:	26 c0       	rjmp	.+76     	; 0x7b8 <vfprintf+0xc6>
 76c:	22 60       	ori	r18, 0x02	; 2
 76e:	24 60       	ori	r18, 0x04	; 4
 770:	23 c0       	rjmp	.+70     	; 0x7b8 <vfprintf+0xc6>
 772:	28 60       	ori	r18, 0x08	; 8
 774:	21 c0       	rjmp	.+66     	; 0x7b8 <vfprintf+0xc6>
 776:	27 fd       	sbrc	r18, 7
 778:	27 c0       	rjmp	.+78     	; 0x7c8 <vfprintf+0xd6>
 77a:	30 ed       	ldi	r19, 0xD0	; 208
 77c:	38 0f       	add	r19, r24
 77e:	3a 30       	cpi	r19, 0x0A	; 10
 780:	78 f4       	brcc	.+30     	; 0x7a0 <vfprintf+0xae>
 782:	26 ff       	sbrs	r18, 6
 784:	06 c0       	rjmp	.+12     	; 0x792 <vfprintf+0xa0>
 786:	fa e0       	ldi	r31, 0x0A	; 10
 788:	5f 9e       	mul	r5, r31
 78a:	30 0d       	add	r19, r0
 78c:	11 24       	eor	r1, r1
 78e:	53 2e       	mov	r5, r19
 790:	13 c0       	rjmp	.+38     	; 0x7b8 <vfprintf+0xc6>
 792:	8a e0       	ldi	r24, 0x0A	; 10
 794:	38 9e       	mul	r3, r24
 796:	30 0d       	add	r19, r0
 798:	11 24       	eor	r1, r1
 79a:	33 2e       	mov	r3, r19
 79c:	20 62       	ori	r18, 0x20	; 32
 79e:	0c c0       	rjmp	.+24     	; 0x7b8 <vfprintf+0xc6>
 7a0:	8e 32       	cpi	r24, 0x2E	; 46
 7a2:	21 f4       	brne	.+8      	; 0x7ac <vfprintf+0xba>
 7a4:	26 fd       	sbrc	r18, 6
 7a6:	5f c1       	rjmp	.+702    	; 0xa66 <vfprintf+0x374>
 7a8:	20 64       	ori	r18, 0x40	; 64
 7aa:	06 c0       	rjmp	.+12     	; 0x7b8 <vfprintf+0xc6>
 7ac:	8c 36       	cpi	r24, 0x6C	; 108
 7ae:	11 f4       	brne	.+4      	; 0x7b4 <vfprintf+0xc2>
 7b0:	20 68       	ori	r18, 0x80	; 128
 7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <vfprintf+0xc6>
 7b4:	88 36       	cpi	r24, 0x68	; 104
 7b6:	41 f4       	brne	.+16     	; 0x7c8 <vfprintf+0xd6>
 7b8:	f6 01       	movw	r30, r12
 7ba:	93 fd       	sbrc	r25, 3
 7bc:	85 91       	lpm	r24, Z+
 7be:	93 ff       	sbrs	r25, 3
 7c0:	81 91       	ld	r24, Z+
 7c2:	6f 01       	movw	r12, r30
 7c4:	81 11       	cpse	r24, r1
 7c6:	c1 cf       	rjmp	.-126    	; 0x74a <vfprintf+0x58>
 7c8:	98 2f       	mov	r25, r24
 7ca:	9f 7d       	andi	r25, 0xDF	; 223
 7cc:	95 54       	subi	r25, 0x45	; 69
 7ce:	93 30       	cpi	r25, 0x03	; 3
 7d0:	28 f4       	brcc	.+10     	; 0x7dc <vfprintf+0xea>
 7d2:	0c 5f       	subi	r16, 0xFC	; 252
 7d4:	1f 4f       	sbci	r17, 0xFF	; 255
 7d6:	ff e3       	ldi	r31, 0x3F	; 63
 7d8:	f9 83       	std	Y+1, r31	; 0x01
 7da:	0d c0       	rjmp	.+26     	; 0x7f6 <vfprintf+0x104>
 7dc:	83 36       	cpi	r24, 0x63	; 99
 7de:	31 f0       	breq	.+12     	; 0x7ec <vfprintf+0xfa>
 7e0:	83 37       	cpi	r24, 0x73	; 115
 7e2:	71 f0       	breq	.+28     	; 0x800 <vfprintf+0x10e>
 7e4:	83 35       	cpi	r24, 0x53	; 83
 7e6:	09 f0       	breq	.+2      	; 0x7ea <vfprintf+0xf8>
 7e8:	57 c0       	rjmp	.+174    	; 0x898 <vfprintf+0x1a6>
 7ea:	21 c0       	rjmp	.+66     	; 0x82e <vfprintf+0x13c>
 7ec:	f8 01       	movw	r30, r16
 7ee:	80 81       	ld	r24, Z
 7f0:	89 83       	std	Y+1, r24	; 0x01
 7f2:	0e 5f       	subi	r16, 0xFE	; 254
 7f4:	1f 4f       	sbci	r17, 0xFF	; 255
 7f6:	44 24       	eor	r4, r4
 7f8:	43 94       	inc	r4
 7fa:	51 2c       	mov	r5, r1
 7fc:	54 01       	movw	r10, r8
 7fe:	14 c0       	rjmp	.+40     	; 0x828 <vfprintf+0x136>
 800:	38 01       	movw	r6, r16
 802:	f2 e0       	ldi	r31, 0x02	; 2
 804:	6f 0e       	add	r6, r31
 806:	71 1c       	adc	r7, r1
 808:	f8 01       	movw	r30, r16
 80a:	a0 80       	ld	r10, Z
 80c:	b1 80       	ldd	r11, Z+1	; 0x01
 80e:	26 ff       	sbrs	r18, 6
 810:	03 c0       	rjmp	.+6      	; 0x818 <vfprintf+0x126>
 812:	65 2d       	mov	r22, r5
 814:	70 e0       	ldi	r23, 0x00	; 0
 816:	02 c0       	rjmp	.+4      	; 0x81c <vfprintf+0x12a>
 818:	6f ef       	ldi	r22, 0xFF	; 255
 81a:	7f ef       	ldi	r23, 0xFF	; 255
 81c:	c5 01       	movw	r24, r10
 81e:	2c 87       	std	Y+12, r18	; 0x0c
 820:	57 d1       	rcall	.+686    	; 0xad0 <strnlen>
 822:	2c 01       	movw	r4, r24
 824:	83 01       	movw	r16, r6
 826:	2c 85       	ldd	r18, Y+12	; 0x0c
 828:	2f 77       	andi	r18, 0x7F	; 127
 82a:	22 2e       	mov	r2, r18
 82c:	16 c0       	rjmp	.+44     	; 0x85a <vfprintf+0x168>
 82e:	38 01       	movw	r6, r16
 830:	f2 e0       	ldi	r31, 0x02	; 2
 832:	6f 0e       	add	r6, r31
 834:	71 1c       	adc	r7, r1
 836:	f8 01       	movw	r30, r16
 838:	a0 80       	ld	r10, Z
 83a:	b1 80       	ldd	r11, Z+1	; 0x01
 83c:	26 ff       	sbrs	r18, 6
 83e:	03 c0       	rjmp	.+6      	; 0x846 <vfprintf+0x154>
 840:	65 2d       	mov	r22, r5
 842:	70 e0       	ldi	r23, 0x00	; 0
 844:	02 c0       	rjmp	.+4      	; 0x84a <vfprintf+0x158>
 846:	6f ef       	ldi	r22, 0xFF	; 255
 848:	7f ef       	ldi	r23, 0xFF	; 255
 84a:	c5 01       	movw	r24, r10
 84c:	2c 87       	std	Y+12, r18	; 0x0c
 84e:	2e d1       	rcall	.+604    	; 0xaac <strnlen_P>
 850:	2c 01       	movw	r4, r24
 852:	2c 85       	ldd	r18, Y+12	; 0x0c
 854:	20 68       	ori	r18, 0x80	; 128
 856:	22 2e       	mov	r2, r18
 858:	83 01       	movw	r16, r6
 85a:	23 fc       	sbrc	r2, 3
 85c:	19 c0       	rjmp	.+50     	; 0x890 <vfprintf+0x19e>
 85e:	83 2d       	mov	r24, r3
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	48 16       	cp	r4, r24
 864:	59 06       	cpc	r5, r25
 866:	a0 f4       	brcc	.+40     	; 0x890 <vfprintf+0x19e>
 868:	b7 01       	movw	r22, r14
 86a:	80 e2       	ldi	r24, 0x20	; 32
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	3b d1       	rcall	.+630    	; 0xae6 <fputc>
 870:	3a 94       	dec	r3
 872:	f5 cf       	rjmp	.-22     	; 0x85e <vfprintf+0x16c>
 874:	f5 01       	movw	r30, r10
 876:	27 fc       	sbrc	r2, 7
 878:	85 91       	lpm	r24, Z+
 87a:	27 fe       	sbrs	r2, 7
 87c:	81 91       	ld	r24, Z+
 87e:	5f 01       	movw	r10, r30
 880:	b7 01       	movw	r22, r14
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	30 d1       	rcall	.+608    	; 0xae6 <fputc>
 886:	31 10       	cpse	r3, r1
 888:	3a 94       	dec	r3
 88a:	f1 e0       	ldi	r31, 0x01	; 1
 88c:	4f 1a       	sub	r4, r31
 88e:	51 08       	sbc	r5, r1
 890:	41 14       	cp	r4, r1
 892:	51 04       	cpc	r5, r1
 894:	79 f7       	brne	.-34     	; 0x874 <vfprintf+0x182>
 896:	de c0       	rjmp	.+444    	; 0xa54 <vfprintf+0x362>
 898:	84 36       	cpi	r24, 0x64	; 100
 89a:	11 f0       	breq	.+4      	; 0x8a0 <vfprintf+0x1ae>
 89c:	89 36       	cpi	r24, 0x69	; 105
 89e:	31 f5       	brne	.+76     	; 0x8ec <vfprintf+0x1fa>
 8a0:	f8 01       	movw	r30, r16
 8a2:	27 ff       	sbrs	r18, 7
 8a4:	07 c0       	rjmp	.+14     	; 0x8b4 <vfprintf+0x1c2>
 8a6:	60 81       	ld	r22, Z
 8a8:	71 81       	ldd	r23, Z+1	; 0x01
 8aa:	82 81       	ldd	r24, Z+2	; 0x02
 8ac:	93 81       	ldd	r25, Z+3	; 0x03
 8ae:	0c 5f       	subi	r16, 0xFC	; 252
 8b0:	1f 4f       	sbci	r17, 0xFF	; 255
 8b2:	08 c0       	rjmp	.+16     	; 0x8c4 <vfprintf+0x1d2>
 8b4:	60 81       	ld	r22, Z
 8b6:	71 81       	ldd	r23, Z+1	; 0x01
 8b8:	88 27       	eor	r24, r24
 8ba:	77 fd       	sbrc	r23, 7
 8bc:	80 95       	com	r24
 8be:	98 2f       	mov	r25, r24
 8c0:	0e 5f       	subi	r16, 0xFE	; 254
 8c2:	1f 4f       	sbci	r17, 0xFF	; 255
 8c4:	2f 76       	andi	r18, 0x6F	; 111
 8c6:	b2 2e       	mov	r11, r18
 8c8:	97 ff       	sbrs	r25, 7
 8ca:	09 c0       	rjmp	.+18     	; 0x8de <vfprintf+0x1ec>
 8cc:	90 95       	com	r25
 8ce:	80 95       	com	r24
 8d0:	70 95       	com	r23
 8d2:	61 95       	neg	r22
 8d4:	7f 4f       	sbci	r23, 0xFF	; 255
 8d6:	8f 4f       	sbci	r24, 0xFF	; 255
 8d8:	9f 4f       	sbci	r25, 0xFF	; 255
 8da:	20 68       	ori	r18, 0x80	; 128
 8dc:	b2 2e       	mov	r11, r18
 8de:	2a e0       	ldi	r18, 0x0A	; 10
 8e0:	30 e0       	ldi	r19, 0x00	; 0
 8e2:	a4 01       	movw	r20, r8
 8e4:	32 d1       	rcall	.+612    	; 0xb4a <__ultoa_invert>
 8e6:	a8 2e       	mov	r10, r24
 8e8:	a8 18       	sub	r10, r8
 8ea:	43 c0       	rjmp	.+134    	; 0x972 <vfprintf+0x280>
 8ec:	85 37       	cpi	r24, 0x75	; 117
 8ee:	29 f4       	brne	.+10     	; 0x8fa <vfprintf+0x208>
 8f0:	2f 7e       	andi	r18, 0xEF	; 239
 8f2:	b2 2e       	mov	r11, r18
 8f4:	2a e0       	ldi	r18, 0x0A	; 10
 8f6:	30 e0       	ldi	r19, 0x00	; 0
 8f8:	25 c0       	rjmp	.+74     	; 0x944 <vfprintf+0x252>
 8fa:	f2 2f       	mov	r31, r18
 8fc:	f9 7f       	andi	r31, 0xF9	; 249
 8fe:	bf 2e       	mov	r11, r31
 900:	8f 36       	cpi	r24, 0x6F	; 111
 902:	c1 f0       	breq	.+48     	; 0x934 <vfprintf+0x242>
 904:	18 f4       	brcc	.+6      	; 0x90c <vfprintf+0x21a>
 906:	88 35       	cpi	r24, 0x58	; 88
 908:	79 f0       	breq	.+30     	; 0x928 <vfprintf+0x236>
 90a:	ad c0       	rjmp	.+346    	; 0xa66 <vfprintf+0x374>
 90c:	80 37       	cpi	r24, 0x70	; 112
 90e:	19 f0       	breq	.+6      	; 0x916 <vfprintf+0x224>
 910:	88 37       	cpi	r24, 0x78	; 120
 912:	21 f0       	breq	.+8      	; 0x91c <vfprintf+0x22a>
 914:	a8 c0       	rjmp	.+336    	; 0xa66 <vfprintf+0x374>
 916:	2f 2f       	mov	r18, r31
 918:	20 61       	ori	r18, 0x10	; 16
 91a:	b2 2e       	mov	r11, r18
 91c:	b4 fe       	sbrs	r11, 4
 91e:	0d c0       	rjmp	.+26     	; 0x93a <vfprintf+0x248>
 920:	8b 2d       	mov	r24, r11
 922:	84 60       	ori	r24, 0x04	; 4
 924:	b8 2e       	mov	r11, r24
 926:	09 c0       	rjmp	.+18     	; 0x93a <vfprintf+0x248>
 928:	24 ff       	sbrs	r18, 4
 92a:	0a c0       	rjmp	.+20     	; 0x940 <vfprintf+0x24e>
 92c:	9f 2f       	mov	r25, r31
 92e:	96 60       	ori	r25, 0x06	; 6
 930:	b9 2e       	mov	r11, r25
 932:	06 c0       	rjmp	.+12     	; 0x940 <vfprintf+0x24e>
 934:	28 e0       	ldi	r18, 0x08	; 8
 936:	30 e0       	ldi	r19, 0x00	; 0
 938:	05 c0       	rjmp	.+10     	; 0x944 <vfprintf+0x252>
 93a:	20 e1       	ldi	r18, 0x10	; 16
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	02 c0       	rjmp	.+4      	; 0x944 <vfprintf+0x252>
 940:	20 e1       	ldi	r18, 0x10	; 16
 942:	32 e0       	ldi	r19, 0x02	; 2
 944:	f8 01       	movw	r30, r16
 946:	b7 fe       	sbrs	r11, 7
 948:	07 c0       	rjmp	.+14     	; 0x958 <vfprintf+0x266>
 94a:	60 81       	ld	r22, Z
 94c:	71 81       	ldd	r23, Z+1	; 0x01
 94e:	82 81       	ldd	r24, Z+2	; 0x02
 950:	93 81       	ldd	r25, Z+3	; 0x03
 952:	0c 5f       	subi	r16, 0xFC	; 252
 954:	1f 4f       	sbci	r17, 0xFF	; 255
 956:	06 c0       	rjmp	.+12     	; 0x964 <vfprintf+0x272>
 958:	60 81       	ld	r22, Z
 95a:	71 81       	ldd	r23, Z+1	; 0x01
 95c:	80 e0       	ldi	r24, 0x00	; 0
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	0e 5f       	subi	r16, 0xFE	; 254
 962:	1f 4f       	sbci	r17, 0xFF	; 255
 964:	a4 01       	movw	r20, r8
 966:	f1 d0       	rcall	.+482    	; 0xb4a <__ultoa_invert>
 968:	a8 2e       	mov	r10, r24
 96a:	a8 18       	sub	r10, r8
 96c:	fb 2d       	mov	r31, r11
 96e:	ff 77       	andi	r31, 0x7F	; 127
 970:	bf 2e       	mov	r11, r31
 972:	b6 fe       	sbrs	r11, 6
 974:	0b c0       	rjmp	.+22     	; 0x98c <vfprintf+0x29a>
 976:	2b 2d       	mov	r18, r11
 978:	2e 7f       	andi	r18, 0xFE	; 254
 97a:	a5 14       	cp	r10, r5
 97c:	50 f4       	brcc	.+20     	; 0x992 <vfprintf+0x2a0>
 97e:	b4 fe       	sbrs	r11, 4
 980:	0a c0       	rjmp	.+20     	; 0x996 <vfprintf+0x2a4>
 982:	b2 fc       	sbrc	r11, 2
 984:	08 c0       	rjmp	.+16     	; 0x996 <vfprintf+0x2a4>
 986:	2b 2d       	mov	r18, r11
 988:	2e 7e       	andi	r18, 0xEE	; 238
 98a:	05 c0       	rjmp	.+10     	; 0x996 <vfprintf+0x2a4>
 98c:	7a 2c       	mov	r7, r10
 98e:	2b 2d       	mov	r18, r11
 990:	03 c0       	rjmp	.+6      	; 0x998 <vfprintf+0x2a6>
 992:	7a 2c       	mov	r7, r10
 994:	01 c0       	rjmp	.+2      	; 0x998 <vfprintf+0x2a6>
 996:	75 2c       	mov	r7, r5
 998:	24 ff       	sbrs	r18, 4
 99a:	0d c0       	rjmp	.+26     	; 0x9b6 <vfprintf+0x2c4>
 99c:	fe 01       	movw	r30, r28
 99e:	ea 0d       	add	r30, r10
 9a0:	f1 1d       	adc	r31, r1
 9a2:	80 81       	ld	r24, Z
 9a4:	80 33       	cpi	r24, 0x30	; 48
 9a6:	11 f4       	brne	.+4      	; 0x9ac <vfprintf+0x2ba>
 9a8:	29 7e       	andi	r18, 0xE9	; 233
 9aa:	09 c0       	rjmp	.+18     	; 0x9be <vfprintf+0x2cc>
 9ac:	22 ff       	sbrs	r18, 2
 9ae:	06 c0       	rjmp	.+12     	; 0x9bc <vfprintf+0x2ca>
 9b0:	73 94       	inc	r7
 9b2:	73 94       	inc	r7
 9b4:	04 c0       	rjmp	.+8      	; 0x9be <vfprintf+0x2cc>
 9b6:	82 2f       	mov	r24, r18
 9b8:	86 78       	andi	r24, 0x86	; 134
 9ba:	09 f0       	breq	.+2      	; 0x9be <vfprintf+0x2cc>
 9bc:	73 94       	inc	r7
 9be:	23 fd       	sbrc	r18, 3
 9c0:	12 c0       	rjmp	.+36     	; 0x9e6 <vfprintf+0x2f4>
 9c2:	20 ff       	sbrs	r18, 0
 9c4:	06 c0       	rjmp	.+12     	; 0x9d2 <vfprintf+0x2e0>
 9c6:	5a 2c       	mov	r5, r10
 9c8:	73 14       	cp	r7, r3
 9ca:	18 f4       	brcc	.+6      	; 0x9d2 <vfprintf+0x2e0>
 9cc:	53 0c       	add	r5, r3
 9ce:	57 18       	sub	r5, r7
 9d0:	73 2c       	mov	r7, r3
 9d2:	73 14       	cp	r7, r3
 9d4:	60 f4       	brcc	.+24     	; 0x9ee <vfprintf+0x2fc>
 9d6:	b7 01       	movw	r22, r14
 9d8:	80 e2       	ldi	r24, 0x20	; 32
 9da:	90 e0       	ldi	r25, 0x00	; 0
 9dc:	2c 87       	std	Y+12, r18	; 0x0c
 9de:	83 d0       	rcall	.+262    	; 0xae6 <fputc>
 9e0:	73 94       	inc	r7
 9e2:	2c 85       	ldd	r18, Y+12	; 0x0c
 9e4:	f6 cf       	rjmp	.-20     	; 0x9d2 <vfprintf+0x2e0>
 9e6:	73 14       	cp	r7, r3
 9e8:	10 f4       	brcc	.+4      	; 0x9ee <vfprintf+0x2fc>
 9ea:	37 18       	sub	r3, r7
 9ec:	01 c0       	rjmp	.+2      	; 0x9f0 <vfprintf+0x2fe>
 9ee:	31 2c       	mov	r3, r1
 9f0:	24 ff       	sbrs	r18, 4
 9f2:	11 c0       	rjmp	.+34     	; 0xa16 <vfprintf+0x324>
 9f4:	b7 01       	movw	r22, r14
 9f6:	80 e3       	ldi	r24, 0x30	; 48
 9f8:	90 e0       	ldi	r25, 0x00	; 0
 9fa:	2c 87       	std	Y+12, r18	; 0x0c
 9fc:	74 d0       	rcall	.+232    	; 0xae6 <fputc>
 9fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 a00:	22 ff       	sbrs	r18, 2
 a02:	16 c0       	rjmp	.+44     	; 0xa30 <vfprintf+0x33e>
 a04:	21 ff       	sbrs	r18, 1
 a06:	03 c0       	rjmp	.+6      	; 0xa0e <vfprintf+0x31c>
 a08:	88 e5       	ldi	r24, 0x58	; 88
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	02 c0       	rjmp	.+4      	; 0xa12 <vfprintf+0x320>
 a0e:	88 e7       	ldi	r24, 0x78	; 120
 a10:	90 e0       	ldi	r25, 0x00	; 0
 a12:	b7 01       	movw	r22, r14
 a14:	0c c0       	rjmp	.+24     	; 0xa2e <vfprintf+0x33c>
 a16:	82 2f       	mov	r24, r18
 a18:	86 78       	andi	r24, 0x86	; 134
 a1a:	51 f0       	breq	.+20     	; 0xa30 <vfprintf+0x33e>
 a1c:	21 fd       	sbrc	r18, 1
 a1e:	02 c0       	rjmp	.+4      	; 0xa24 <vfprintf+0x332>
 a20:	80 e2       	ldi	r24, 0x20	; 32
 a22:	01 c0       	rjmp	.+2      	; 0xa26 <vfprintf+0x334>
 a24:	8b e2       	ldi	r24, 0x2B	; 43
 a26:	27 fd       	sbrc	r18, 7
 a28:	8d e2       	ldi	r24, 0x2D	; 45
 a2a:	b7 01       	movw	r22, r14
 a2c:	90 e0       	ldi	r25, 0x00	; 0
 a2e:	5b d0       	rcall	.+182    	; 0xae6 <fputc>
 a30:	a5 14       	cp	r10, r5
 a32:	30 f4       	brcc	.+12     	; 0xa40 <vfprintf+0x34e>
 a34:	b7 01       	movw	r22, r14
 a36:	80 e3       	ldi	r24, 0x30	; 48
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	55 d0       	rcall	.+170    	; 0xae6 <fputc>
 a3c:	5a 94       	dec	r5
 a3e:	f8 cf       	rjmp	.-16     	; 0xa30 <vfprintf+0x33e>
 a40:	aa 94       	dec	r10
 a42:	f4 01       	movw	r30, r8
 a44:	ea 0d       	add	r30, r10
 a46:	f1 1d       	adc	r31, r1
 a48:	80 81       	ld	r24, Z
 a4a:	b7 01       	movw	r22, r14
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	4b d0       	rcall	.+150    	; 0xae6 <fputc>
 a50:	a1 10       	cpse	r10, r1
 a52:	f6 cf       	rjmp	.-20     	; 0xa40 <vfprintf+0x34e>
 a54:	33 20       	and	r3, r3
 a56:	09 f4       	brne	.+2      	; 0xa5a <vfprintf+0x368>
 a58:	5d ce       	rjmp	.-838    	; 0x714 <vfprintf+0x22>
 a5a:	b7 01       	movw	r22, r14
 a5c:	80 e2       	ldi	r24, 0x20	; 32
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	42 d0       	rcall	.+132    	; 0xae6 <fputc>
 a62:	3a 94       	dec	r3
 a64:	f7 cf       	rjmp	.-18     	; 0xa54 <vfprintf+0x362>
 a66:	f7 01       	movw	r30, r14
 a68:	86 81       	ldd	r24, Z+6	; 0x06
 a6a:	97 81       	ldd	r25, Z+7	; 0x07
 a6c:	02 c0       	rjmp	.+4      	; 0xa72 <vfprintf+0x380>
 a6e:	8f ef       	ldi	r24, 0xFF	; 255
 a70:	9f ef       	ldi	r25, 0xFF	; 255
 a72:	2c 96       	adiw	r28, 0x0c	; 12
 a74:	e2 e1       	ldi	r30, 0x12	; 18
 a76:	e3 c0       	rjmp	.+454    	; 0xc3e <__epilogue_restores__>

00000a78 <calloc>:
 a78:	0f 93       	push	r16
 a7a:	1f 93       	push	r17
 a7c:	cf 93       	push	r28
 a7e:	df 93       	push	r29
 a80:	86 9f       	mul	r24, r22
 a82:	80 01       	movw	r16, r0
 a84:	87 9f       	mul	r24, r23
 a86:	10 0d       	add	r17, r0
 a88:	96 9f       	mul	r25, r22
 a8a:	10 0d       	add	r17, r0
 a8c:	11 24       	eor	r1, r1
 a8e:	c8 01       	movw	r24, r16
 a90:	81 dc       	rcall	.-1790   	; 0x394 <malloc>
 a92:	ec 01       	movw	r28, r24
 a94:	00 97       	sbiw	r24, 0x00	; 0
 a96:	21 f0       	breq	.+8      	; 0xaa0 <calloc+0x28>
 a98:	a8 01       	movw	r20, r16
 a9a:	60 e0       	ldi	r22, 0x00	; 0
 a9c:	70 e0       	ldi	r23, 0x00	; 0
 a9e:	11 d0       	rcall	.+34     	; 0xac2 <memset>
 aa0:	ce 01       	movw	r24, r28
 aa2:	df 91       	pop	r29
 aa4:	cf 91       	pop	r28
 aa6:	1f 91       	pop	r17
 aa8:	0f 91       	pop	r16
 aaa:	08 95       	ret

00000aac <strnlen_P>:
 aac:	fc 01       	movw	r30, r24
 aae:	05 90       	lpm	r0, Z+
 ab0:	61 50       	subi	r22, 0x01	; 1
 ab2:	70 40       	sbci	r23, 0x00	; 0
 ab4:	01 10       	cpse	r0, r1
 ab6:	d8 f7       	brcc	.-10     	; 0xaae <strnlen_P+0x2>
 ab8:	80 95       	com	r24
 aba:	90 95       	com	r25
 abc:	8e 0f       	add	r24, r30
 abe:	9f 1f       	adc	r25, r31
 ac0:	08 95       	ret

00000ac2 <memset>:
 ac2:	dc 01       	movw	r26, r24
 ac4:	01 c0       	rjmp	.+2      	; 0xac8 <memset+0x6>
 ac6:	6d 93       	st	X+, r22
 ac8:	41 50       	subi	r20, 0x01	; 1
 aca:	50 40       	sbci	r21, 0x00	; 0
 acc:	e0 f7       	brcc	.-8      	; 0xac6 <memset+0x4>
 ace:	08 95       	ret

00000ad0 <strnlen>:
 ad0:	fc 01       	movw	r30, r24
 ad2:	61 50       	subi	r22, 0x01	; 1
 ad4:	70 40       	sbci	r23, 0x00	; 0
 ad6:	01 90       	ld	r0, Z+
 ad8:	01 10       	cpse	r0, r1
 ada:	d8 f7       	brcc	.-10     	; 0xad2 <strnlen+0x2>
 adc:	80 95       	com	r24
 ade:	90 95       	com	r25
 ae0:	8e 0f       	add	r24, r30
 ae2:	9f 1f       	adc	r25, r31
 ae4:	08 95       	ret

00000ae6 <fputc>:
 ae6:	0f 93       	push	r16
 ae8:	1f 93       	push	r17
 aea:	cf 93       	push	r28
 aec:	df 93       	push	r29
 aee:	18 2f       	mov	r17, r24
 af0:	09 2f       	mov	r16, r25
 af2:	eb 01       	movw	r28, r22
 af4:	8b 81       	ldd	r24, Y+3	; 0x03
 af6:	81 fd       	sbrc	r24, 1
 af8:	03 c0       	rjmp	.+6      	; 0xb00 <fputc+0x1a>
 afa:	8f ef       	ldi	r24, 0xFF	; 255
 afc:	9f ef       	ldi	r25, 0xFF	; 255
 afe:	20 c0       	rjmp	.+64     	; 0xb40 <fputc+0x5a>
 b00:	82 ff       	sbrs	r24, 2
 b02:	10 c0       	rjmp	.+32     	; 0xb24 <fputc+0x3e>
 b04:	4e 81       	ldd	r20, Y+6	; 0x06
 b06:	5f 81       	ldd	r21, Y+7	; 0x07
 b08:	2c 81       	ldd	r18, Y+4	; 0x04
 b0a:	3d 81       	ldd	r19, Y+5	; 0x05
 b0c:	42 17       	cp	r20, r18
 b0e:	53 07       	cpc	r21, r19
 b10:	7c f4       	brge	.+30     	; 0xb30 <fputc+0x4a>
 b12:	e8 81       	ld	r30, Y
 b14:	f9 81       	ldd	r31, Y+1	; 0x01
 b16:	9f 01       	movw	r18, r30
 b18:	2f 5f       	subi	r18, 0xFF	; 255
 b1a:	3f 4f       	sbci	r19, 0xFF	; 255
 b1c:	39 83       	std	Y+1, r19	; 0x01
 b1e:	28 83       	st	Y, r18
 b20:	10 83       	st	Z, r17
 b22:	06 c0       	rjmp	.+12     	; 0xb30 <fputc+0x4a>
 b24:	e8 85       	ldd	r30, Y+8	; 0x08
 b26:	f9 85       	ldd	r31, Y+9	; 0x09
 b28:	81 2f       	mov	r24, r17
 b2a:	09 95       	icall
 b2c:	89 2b       	or	r24, r25
 b2e:	29 f7       	brne	.-54     	; 0xafa <fputc+0x14>
 b30:	2e 81       	ldd	r18, Y+6	; 0x06
 b32:	3f 81       	ldd	r19, Y+7	; 0x07
 b34:	2f 5f       	subi	r18, 0xFF	; 255
 b36:	3f 4f       	sbci	r19, 0xFF	; 255
 b38:	3f 83       	std	Y+7, r19	; 0x07
 b3a:	2e 83       	std	Y+6, r18	; 0x06
 b3c:	81 2f       	mov	r24, r17
 b3e:	90 2f       	mov	r25, r16
 b40:	df 91       	pop	r29
 b42:	cf 91       	pop	r28
 b44:	1f 91       	pop	r17
 b46:	0f 91       	pop	r16
 b48:	08 95       	ret

00000b4a <__ultoa_invert>:
 b4a:	fa 01       	movw	r30, r20
 b4c:	aa 27       	eor	r26, r26
 b4e:	28 30       	cpi	r18, 0x08	; 8
 b50:	51 f1       	breq	.+84     	; 0xba6 <__ultoa_invert+0x5c>
 b52:	20 31       	cpi	r18, 0x10	; 16
 b54:	81 f1       	breq	.+96     	; 0xbb6 <__ultoa_invert+0x6c>
 b56:	e8 94       	clt
 b58:	6f 93       	push	r22
 b5a:	6e 7f       	andi	r22, 0xFE	; 254
 b5c:	6e 5f       	subi	r22, 0xFE	; 254
 b5e:	7f 4f       	sbci	r23, 0xFF	; 255
 b60:	8f 4f       	sbci	r24, 0xFF	; 255
 b62:	9f 4f       	sbci	r25, 0xFF	; 255
 b64:	af 4f       	sbci	r26, 0xFF	; 255
 b66:	b1 e0       	ldi	r27, 0x01	; 1
 b68:	3e d0       	rcall	.+124    	; 0xbe6 <__ultoa_invert+0x9c>
 b6a:	b4 e0       	ldi	r27, 0x04	; 4
 b6c:	3c d0       	rcall	.+120    	; 0xbe6 <__ultoa_invert+0x9c>
 b6e:	67 0f       	add	r22, r23
 b70:	78 1f       	adc	r23, r24
 b72:	89 1f       	adc	r24, r25
 b74:	9a 1f       	adc	r25, r26
 b76:	a1 1d       	adc	r26, r1
 b78:	68 0f       	add	r22, r24
 b7a:	79 1f       	adc	r23, r25
 b7c:	8a 1f       	adc	r24, r26
 b7e:	91 1d       	adc	r25, r1
 b80:	a1 1d       	adc	r26, r1
 b82:	6a 0f       	add	r22, r26
 b84:	71 1d       	adc	r23, r1
 b86:	81 1d       	adc	r24, r1
 b88:	91 1d       	adc	r25, r1
 b8a:	a1 1d       	adc	r26, r1
 b8c:	20 d0       	rcall	.+64     	; 0xbce <__ultoa_invert+0x84>
 b8e:	09 f4       	brne	.+2      	; 0xb92 <__ultoa_invert+0x48>
 b90:	68 94       	set
 b92:	3f 91       	pop	r19
 b94:	2a e0       	ldi	r18, 0x0A	; 10
 b96:	26 9f       	mul	r18, r22
 b98:	11 24       	eor	r1, r1
 b9a:	30 19       	sub	r19, r0
 b9c:	30 5d       	subi	r19, 0xD0	; 208
 b9e:	31 93       	st	Z+, r19
 ba0:	de f6       	brtc	.-74     	; 0xb58 <__ultoa_invert+0xe>
 ba2:	cf 01       	movw	r24, r30
 ba4:	08 95       	ret
 ba6:	46 2f       	mov	r20, r22
 ba8:	47 70       	andi	r20, 0x07	; 7
 baa:	40 5d       	subi	r20, 0xD0	; 208
 bac:	41 93       	st	Z+, r20
 bae:	b3 e0       	ldi	r27, 0x03	; 3
 bb0:	0f d0       	rcall	.+30     	; 0xbd0 <__ultoa_invert+0x86>
 bb2:	c9 f7       	brne	.-14     	; 0xba6 <__ultoa_invert+0x5c>
 bb4:	f6 cf       	rjmp	.-20     	; 0xba2 <__ultoa_invert+0x58>
 bb6:	46 2f       	mov	r20, r22
 bb8:	4f 70       	andi	r20, 0x0F	; 15
 bba:	40 5d       	subi	r20, 0xD0	; 208
 bbc:	4a 33       	cpi	r20, 0x3A	; 58
 bbe:	18 f0       	brcs	.+6      	; 0xbc6 <__ultoa_invert+0x7c>
 bc0:	49 5d       	subi	r20, 0xD9	; 217
 bc2:	31 fd       	sbrc	r19, 1
 bc4:	40 52       	subi	r20, 0x20	; 32
 bc6:	41 93       	st	Z+, r20
 bc8:	02 d0       	rcall	.+4      	; 0xbce <__ultoa_invert+0x84>
 bca:	a9 f7       	brne	.-22     	; 0xbb6 <__ultoa_invert+0x6c>
 bcc:	ea cf       	rjmp	.-44     	; 0xba2 <__ultoa_invert+0x58>
 bce:	b4 e0       	ldi	r27, 0x04	; 4
 bd0:	a6 95       	lsr	r26
 bd2:	97 95       	ror	r25
 bd4:	87 95       	ror	r24
 bd6:	77 95       	ror	r23
 bd8:	67 95       	ror	r22
 bda:	ba 95       	dec	r27
 bdc:	c9 f7       	brne	.-14     	; 0xbd0 <__ultoa_invert+0x86>
 bde:	00 97       	sbiw	r24, 0x00	; 0
 be0:	61 05       	cpc	r22, r1
 be2:	71 05       	cpc	r23, r1
 be4:	08 95       	ret
 be6:	9b 01       	movw	r18, r22
 be8:	ac 01       	movw	r20, r24
 bea:	0a 2e       	mov	r0, r26
 bec:	06 94       	lsr	r0
 bee:	57 95       	ror	r21
 bf0:	47 95       	ror	r20
 bf2:	37 95       	ror	r19
 bf4:	27 95       	ror	r18
 bf6:	ba 95       	dec	r27
 bf8:	c9 f7       	brne	.-14     	; 0xbec <__ultoa_invert+0xa2>
 bfa:	62 0f       	add	r22, r18
 bfc:	73 1f       	adc	r23, r19
 bfe:	84 1f       	adc	r24, r20
 c00:	95 1f       	adc	r25, r21
 c02:	a0 1d       	adc	r26, r0
 c04:	08 95       	ret

00000c06 <__prologue_saves__>:
 c06:	2f 92       	push	r2
 c08:	3f 92       	push	r3
 c0a:	4f 92       	push	r4
 c0c:	5f 92       	push	r5
 c0e:	6f 92       	push	r6
 c10:	7f 92       	push	r7
 c12:	8f 92       	push	r8
 c14:	9f 92       	push	r9
 c16:	af 92       	push	r10
 c18:	bf 92       	push	r11
 c1a:	cf 92       	push	r12
 c1c:	df 92       	push	r13
 c1e:	ef 92       	push	r14
 c20:	ff 92       	push	r15
 c22:	0f 93       	push	r16
 c24:	1f 93       	push	r17
 c26:	cf 93       	push	r28
 c28:	df 93       	push	r29
 c2a:	cd b7       	in	r28, 0x3d	; 61
 c2c:	de b7       	in	r29, 0x3e	; 62
 c2e:	ca 1b       	sub	r28, r26
 c30:	db 0b       	sbc	r29, r27
 c32:	0f b6       	in	r0, 0x3f	; 63
 c34:	f8 94       	cli
 c36:	de bf       	out	0x3e, r29	; 62
 c38:	0f be       	out	0x3f, r0	; 63
 c3a:	cd bf       	out	0x3d, r28	; 61
 c3c:	09 94       	ijmp

00000c3e <__epilogue_restores__>:
 c3e:	2a 88       	ldd	r2, Y+18	; 0x12
 c40:	39 88       	ldd	r3, Y+17	; 0x11
 c42:	48 88       	ldd	r4, Y+16	; 0x10
 c44:	5f 84       	ldd	r5, Y+15	; 0x0f
 c46:	6e 84       	ldd	r6, Y+14	; 0x0e
 c48:	7d 84       	ldd	r7, Y+13	; 0x0d
 c4a:	8c 84       	ldd	r8, Y+12	; 0x0c
 c4c:	9b 84       	ldd	r9, Y+11	; 0x0b
 c4e:	aa 84       	ldd	r10, Y+10	; 0x0a
 c50:	b9 84       	ldd	r11, Y+9	; 0x09
 c52:	c8 84       	ldd	r12, Y+8	; 0x08
 c54:	df 80       	ldd	r13, Y+7	; 0x07
 c56:	ee 80       	ldd	r14, Y+6	; 0x06
 c58:	fd 80       	ldd	r15, Y+5	; 0x05
 c5a:	0c 81       	ldd	r16, Y+4	; 0x04
 c5c:	1b 81       	ldd	r17, Y+3	; 0x03
 c5e:	aa 81       	ldd	r26, Y+2	; 0x02
 c60:	b9 81       	ldd	r27, Y+1	; 0x01
 c62:	ce 0f       	add	r28, r30
 c64:	d1 1d       	adc	r29, r1
 c66:	0f b6       	in	r0, 0x3f	; 63
 c68:	f8 94       	cli
 c6a:	de bf       	out	0x3e, r29	; 62
 c6c:	0f be       	out	0x3f, r0	; 63
 c6e:	cd bf       	out	0x3d, r28	; 61
 c70:	ed 01       	movw	r28, r26
 c72:	08 95       	ret

00000c74 <_exit>:
 c74:	f8 94       	cli

00000c76 <__stop_program>:
 c76:	ff cf       	rjmp	.-2      	; 0xc76 <__stop_program>
