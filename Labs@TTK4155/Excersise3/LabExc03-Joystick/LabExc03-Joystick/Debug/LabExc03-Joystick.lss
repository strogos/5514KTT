
LabExc03-Joystick.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000272  00800100  000011ac  00001240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800372  00800372  000014b2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014b2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  0000150e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000114f  00000000  00000000  00001646  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000085d  00000000  00000000  00002795  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001d2b  00000000  00000000  00002ff2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000378  00000000  00000000  00004d20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000de53  00000000  00000000  00005098  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d51  00000000  00000000  00012eeb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00013c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00003da6  00000000  00000000  00013d14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	37 c0       	rjmp	.+110    	; 0x70 <__ctors_end>
       2:	00 00       	nop
       4:	51 c0       	rjmp	.+162    	; 0xa8 <__bad_interrupt>
       6:	00 00       	nop
       8:	4f c0       	rjmp	.+158    	; 0xa8 <__bad_interrupt>
       a:	00 00       	nop
       c:	4d c0       	rjmp	.+154    	; 0xa8 <__bad_interrupt>
       e:	00 00       	nop
      10:	4b c0       	rjmp	.+150    	; 0xa8 <__bad_interrupt>
      12:	00 00       	nop
      14:	49 c0       	rjmp	.+146    	; 0xa8 <__bad_interrupt>
      16:	00 00       	nop
      18:	47 c0       	rjmp	.+142    	; 0xa8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	45 c0       	rjmp	.+138    	; 0xa8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	43 c0       	rjmp	.+134    	; 0xa8 <__bad_interrupt>
      22:	00 00       	nop
      24:	41 c0       	rjmp	.+130    	; 0xa8 <__bad_interrupt>
      26:	00 00       	nop
      28:	3f c0       	rjmp	.+126    	; 0xa8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3d c0       	rjmp	.+122    	; 0xa8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	3b c0       	rjmp	.+118    	; 0xa8 <__bad_interrupt>
      32:	00 00       	nop
      34:	39 c0       	rjmp	.+114    	; 0xa8 <__bad_interrupt>
      36:	00 00       	nop
      38:	37 c0       	rjmp	.+110    	; 0xa8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	35 c0       	rjmp	.+106    	; 0xa8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	33 c0       	rjmp	.+102    	; 0xa8 <__bad_interrupt>
      42:	00 00       	nop
      44:	31 c0       	rjmp	.+98     	; 0xa8 <__bad_interrupt>
      46:	00 00       	nop
      48:	2f c0       	rjmp	.+94     	; 0xa8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	0d c1       	rjmp	.+538    	; 0x268 <__vector_19>
      4e:	00 00       	nop
      50:	2b c0       	rjmp	.+86     	; 0xa8 <__bad_interrupt>
      52:	00 00       	nop
      54:	29 c0       	rjmp	.+82     	; 0xa8 <__bad_interrupt>
      56:	00 00       	nop
      58:	27 c0       	rjmp	.+78     	; 0xa8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	25 c0       	rjmp	.+74     	; 0xa8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	23 c0       	rjmp	.+70     	; 0xa8 <__bad_interrupt>
      62:	00 00       	nop
      64:	21 c0       	rjmp	.+66     	; 0xa8 <__bad_interrupt>
      66:	00 00       	nop
      68:	1f c0       	rjmp	.+62     	; 0xa8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	1d c0       	rjmp	.+58     	; 0xa8 <__bad_interrupt>
	...

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	13 e0       	ldi	r17, 0x03	; 3
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	ec ea       	ldi	r30, 0xAC	; 172
      84:	f1 e1       	ldi	r31, 0x11	; 17
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a2 37       	cpi	r26, 0x72	; 114
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	23 e0       	ldi	r18, 0x03	; 3
      94:	a2 e7       	ldi	r26, 0x72	; 114
      96:	b3 e0       	ldi	r27, 0x03	; 3
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	aa 38       	cpi	r26, 0x8A	; 138
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	26 d2       	rcall	.+1100   	; 0x4f0 <main>
      a4:	0c 94 d4 08 	jmp	0x11a8	; 0x11a8 <_exit>

000000a8 <__bad_interrupt>:
      a8:	ab cf       	rjmp	.-170    	; 0x0 <__vectors>

000000aa <adcRead>:
	
}
uint8_t adcRead(uint8_t adcChannel)
{
	//check if the channel on the ADC exceeds number of used channels
	if(!(adcChannel<=3)&&(adcChannel>0))
      aa:	84 30       	cpi	r24, 0x04	; 4
      ac:	60 f4       	brcc	.+24     	; 0xc6 <adcRead+0x1c>
	
	//set start position for ADC addressing
	volatile uint8_t *adcAddressing = 0x1400;
					
	//Choose address to work with in the ADC based on channel set in adcChannel
	*adcAddressing = (0x04|adcChannel);
      ae:	84 60       	ori	r24, 0x04	; 4
      b0:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      b4:	81 e4       	ldi	r24, 0x41	; 65
      b6:	8a 95       	dec	r24
      b8:	f1 f7       	brne	.-4      	; 0xb6 <adcRead+0xc>
      ba:	00 c0       	rjmp	.+0      	; 0xbc <adcRead+0x12>
	
	_delay_us(40);//add delay between reads - AT LEAST 40uS if using interrupt for ADC0844CNN (if no delay; adc will read from the prevously selected channel )
		
	//wait for data to be read (..implement interrupt!!!)
	while(PINE & (1<<PINE0));//test PINE0 for changes (pin is cleared)
      bc:	28 99       	sbic	0x05, 0	; 5
      be:	fe cf       	rjmp	.-4      	; 0xbc <adcRead+0x12>
		
	return *adcAddressing;
      c0:	80 91 00 14 	lds	r24, 0x1400
      c4:	08 95       	ret
}
uint8_t adcRead(uint8_t adcChannel)
{
	//check if the channel on the ADC exceeds number of used channels
	if(!(adcChannel<=3)&&(adcChannel>0))
		return 0;
      c6:	80 e0       	ldi	r24, 0x00	; 0
		
	//wait for data to be read (..implement interrupt!!!)
	while(PINE & (1<<PINE0));//test PINE0 for changes (pin is cleared)
		
	return *adcAddressing;
      c8:	08 95       	ret

000000ca <joyGetUnscaledXY>:




uint8_t *joyGetUnscaledXY(uint8_t *joyPos)
{
      ca:	1f 93       	push	r17
      cc:	cf 93       	push	r28
      ce:	df 93       	push	r29
      d0:	ec 01       	movw	r28, r24
	
	uint8_t buffer1=adcRead(ADC_CH1_JOY_Y_AXIS);
      d2:	80 e0       	ldi	r24, 0x00	; 0
      d4:	ea df       	rcall	.-44     	; 0xaa <adcRead>
      d6:	18 2f       	mov	r17, r24
	uint8_t buffer2=adcRead(ADC_CH2_JOY_X_AXIS);
      d8:	81 e0       	ldi	r24, 0x01	; 1
      da:	e7 df       	rcall	.-50     	; 0xaa <adcRead>
	uint8_t buffer3=buffer1;
	uint8_t buffer4=buffer2;
	//printf("\n\r%d",buffer3);
	joyPos[0]=buffer1;
      dc:	18 83       	st	Y, r17
	joyPos[1]=buffer2;
      de:	89 83       	std	Y+1, r24	; 0x01
	joyPos[2]=buffer3;
      e0:	1a 83       	std	Y+2, r17	; 0x02
	joyPos[3]=buffer4;
      e2:	8b 83       	std	Y+3, r24	; 0x03
	
	return joyPos;
	
}
      e4:	ce 01       	movw	r24, r28
      e6:	df 91       	pop	r29
      e8:	cf 91       	pop	r28
      ea:	1f 91       	pop	r17
      ec:	08 95       	ret

000000ee <joyCalibrateXY>:
{
	//some buffer variables/ptrs
	uint8_t byteOfData=0;
	globalStruct *ptr=&globalVar;
	
	printf("\n\rPut joystick in center position\n\r");
      ee:	86 e0       	ldi	r24, 0x06	; 6
      f0:	91 e0       	ldi	r25, 0x01	; 1
      f2:	9f 93       	push	r25
      f4:	8f 93       	push	r24
      f6:	59 d5       	rcall	.+2738   	; 0xbaa <printf>
	while(((byteOfData=usartReadByte())!='y'));
      f8:	0f 90       	pop	r0
      fa:	0f 90       	pop	r0
      fc:	c4 d0       	rcall	.+392    	; 0x286 <usartReadByte>
      fe:	89 37       	cpi	r24, 0x79	; 121
     100:	e9 f7       	brne	.-6      	; 0xfc <joyCalibrateXY+0xe>
	ptr->joyData[JOY_Y_AXIS_MID]=adcRead(ADC_CH1_JOY_Y_AXIS);
     102:	80 e0       	ldi	r24, 0x00	; 0
     104:	d2 df       	rcall	.-92     	; 0xaa <adcRead>
     106:	80 93 72 03 	sts	0x0372, r24
	ptr->joyData[JOY_X_AXIS_MID]=adcRead(ADC_CH2_JOY_X_AXIS);
     10a:	81 e0       	ldi	r24, 0x01	; 1
     10c:	ce df       	rcall	.-100    	; 0xaa <adcRead>
     10e:	80 93 73 03 	sts	0x0373, r24
	
	printf("\n\rGet X_min\n\r");
     112:	8a e2       	ldi	r24, 0x2A	; 42
     114:	91 e0       	ldi	r25, 0x01	; 1
     116:	9f 93       	push	r25
     118:	8f 93       	push	r24
     11a:	47 d5       	rcall	.+2702   	; 0xbaa <printf>
	while(((byteOfData=usartReadByte())!='y'));
     11c:	0f 90       	pop	r0
     11e:	0f 90       	pop	r0
     120:	b2 d0       	rcall	.+356    	; 0x286 <usartReadByte>
     122:	89 37       	cpi	r24, 0x79	; 121
     124:	e9 f7       	brne	.-6      	; 0x120 <joyCalibrateXY+0x32>
	ptr->joyData[JOY_X_AXIS_MIN]=adcRead(ADC_CH2_JOY_X_AXIS);
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	c0 df       	rcall	.-128    	; 0xaa <adcRead>
     12a:	80 93 74 03 	sts	0x0374, r24
	
	printf("\n\rGet X_max\n\r");
     12e:	88 e3       	ldi	r24, 0x38	; 56
     130:	91 e0       	ldi	r25, 0x01	; 1
     132:	9f 93       	push	r25
     134:	8f 93       	push	r24
     136:	39 d5       	rcall	.+2674   	; 0xbaa <printf>
	while(((byteOfData=usartReadByte())!='y'));
     138:	0f 90       	pop	r0
     13a:	0f 90       	pop	r0
     13c:	a4 d0       	rcall	.+328    	; 0x286 <usartReadByte>
     13e:	89 37       	cpi	r24, 0x79	; 121
     140:	e9 f7       	brne	.-6      	; 0x13c <joyCalibrateXY+0x4e>
	ptr->joyData[JOY_X_AXIS_MAX]=adcRead(ADC_CH2_JOY_X_AXIS);
     142:	81 e0       	ldi	r24, 0x01	; 1
     144:	b2 df       	rcall	.-156    	; 0xaa <adcRead>
     146:	80 93 75 03 	sts	0x0375, r24
	
	printf("\n\rGet Y_min\n\r");
     14a:	86 e4       	ldi	r24, 0x46	; 70
     14c:	91 e0       	ldi	r25, 0x01	; 1
     14e:	9f 93       	push	r25
     150:	8f 93       	push	r24
     152:	2b d5       	rcall	.+2646   	; 0xbaa <printf>
	while(((byteOfData=usartReadByte())!='y'));
     154:	0f 90       	pop	r0
     156:	0f 90       	pop	r0
     158:	96 d0       	rcall	.+300    	; 0x286 <usartReadByte>
     15a:	89 37       	cpi	r24, 0x79	; 121
     15c:	e9 f7       	brne	.-6      	; 0x158 <joyCalibrateXY+0x6a>
	ptr->joyData[JOY_Y_AXIS_MIN]=adcRead(ADC_CH1_JOY_Y_AXIS);
     15e:	80 e0       	ldi	r24, 0x00	; 0
     160:	a4 df       	rcall	.-184    	; 0xaa <adcRead>
     162:	80 93 76 03 	sts	0x0376, r24
	
	printf("\n\rGet Y_max\n\r");
     166:	84 e5       	ldi	r24, 0x54	; 84
     168:	91 e0       	ldi	r25, 0x01	; 1
     16a:	9f 93       	push	r25
     16c:	8f 93       	push	r24
     16e:	1d d5       	rcall	.+2618   	; 0xbaa <printf>
	while(((byteOfData=usartReadByte())!='y'));
     170:	0f 90       	pop	r0
     172:	0f 90       	pop	r0
     174:	88 d0       	rcall	.+272    	; 0x286 <usartReadByte>
     176:	89 37       	cpi	r24, 0x79	; 121
     178:	e9 f7       	brne	.-6      	; 0x174 <joyCalibrateXY+0x86>
	ptr->joyData[JOY_Y_AXIS_MAX]=adcRead(ADC_CH1_JOY_Y_AXIS);
     17a:	80 e0       	ldi	r24, 0x00	; 0
     17c:	96 df       	rcall	.-212    	; 0xaa <adcRead>
     17e:	80 93 77 03 	sts	0x0377, r24
     182:	08 95       	ret

00000184 <calcCalibParam>:
}


int8_t calcCalibParam(uint8_t x1,uint8_t x2,uint8_t x)
{
     184:	cf 92       	push	r12
     186:	df 92       	push	r13
     188:	ef 92       	push	r14
     18a:	ff 92       	push	r15
     18c:	1f 93       	push	r17
     18e:	cf 93       	push	r28
     190:	df 93       	push	r29
     192:	16 2f       	mov	r17, r22
	/*scale incoming values as a linear eq. with limits: 0<y<100; x2<x<x1;*/	
	//uint8_t byteOfData=0;
	
	double slope=((double)JOY_YX_AXIS_SCALING_PARAM/(double)(x2-x1));
     194:	c8 2f       	mov	r28, r24
     196:	d0 e0       	ldi	r29, 0x00	; 0
	double f=(slope*((double)(x-x1)));
     198:	50 e0       	ldi	r21, 0x00	; 0
     19a:	ba 01       	movw	r22, r20
     19c:	6c 1b       	sub	r22, r28
     19e:	7d 0b       	sbc	r23, r29
     1a0:	88 27       	eor	r24, r24
     1a2:	77 fd       	sbrc	r23, 7
     1a4:	80 95       	com	r24
     1a6:	98 2f       	mov	r25, r24
     1a8:	a0 d2       	rcall	.+1344   	; 0x6ea <__floatsisf>
     1aa:	6b 01       	movw	r12, r22
     1ac:	7c 01       	movw	r14, r24
int8_t calcCalibParam(uint8_t x1,uint8_t x2,uint8_t x)
{
	/*scale incoming values as a linear eq. with limits: 0<y<100; x2<x<x1;*/	
	//uint8_t byteOfData=0;
	
	double slope=((double)JOY_YX_AXIS_SCALING_PARAM/(double)(x2-x1));
     1ae:	61 2f       	mov	r22, r17
     1b0:	70 e0       	ldi	r23, 0x00	; 0
     1b2:	6c 1b       	sub	r22, r28
     1b4:	7d 0b       	sbc	r23, r29
     1b6:	88 27       	eor	r24, r24
     1b8:	77 fd       	sbrc	r23, 7
     1ba:	80 95       	com	r24
     1bc:	98 2f       	mov	r25, r24
     1be:	95 d2       	rcall	.+1322   	; 0x6ea <__floatsisf>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	60 e0       	ldi	r22, 0x00	; 0
     1c6:	70 e0       	ldi	r23, 0x00	; 0
     1c8:	88 ec       	ldi	r24, 0xC8	; 200
     1ca:	92 e4       	ldi	r25, 0x42	; 66
     1cc:	f3 d1       	rcall	.+998    	; 0x5b4 <__divsf3>
     1ce:	9b 01       	movw	r18, r22
     1d0:	ac 01       	movw	r20, r24
	double f=(slope*((double)(x-x1)));
     1d2:	c7 01       	movw	r24, r14
     1d4:	b6 01       	movw	r22, r12
     1d6:	15 d3       	rcall	.+1578   	; 0x802 <__mulsf3>
	
	return (int8_t)f;	
     1d8:	55 d2       	rcall	.+1194   	; 0x684 <__fixsfsi>
     1da:	86 2f       	mov	r24, r22
}
     1dc:	df 91       	pop	r29
     1de:	cf 91       	pop	r28
     1e0:	1f 91       	pop	r17
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	df 90       	pop	r13
     1e8:	cf 90       	pop	r12
     1ea:	08 95       	ret

000001ec <joyGetPosX>:


void joyGetPosX(uint8_t xUncalibratedPos,int8_t *xCalibratedPos)
{
     1ec:	cf 93       	push	r28
     1ee:	df 93       	push	r29
     1f0:	48 2f       	mov	r20, r24
     1f2:	eb 01       	movw	r28, r22
	globalStruct *ptr=&globalVar;
		
	if(xUncalibratedPos>ptr->joyData[JOY_X_AXIS_MID])
     1f4:	80 91 73 03 	lds	r24, 0x0373
     1f8:	84 17       	cp	r24, r20
     1fa:	28 f4       	brcc	.+10     	; 0x206 <joyGetPosX+0x1a>
	{
		*xCalibratedPos=calcCalibParam(ptr->joyData[JOY_X_AXIS_MID],ptr->joyData[JOY_X_AXIS_MAX],xUncalibratedPos);			
     1fc:	60 91 75 03 	lds	r22, 0x0375
     200:	c1 df       	rcall	.-126    	; 0x184 <calcCalibParam>
     202:	88 83       	st	Y, r24
     204:	05 c0       	rjmp	.+10     	; 0x210 <joyGetPosX+0x24>
	}
	else
	{
		*xCalibratedPos=calcCalibParam(ptr->joyData[JOY_X_AXIS_MID],ptr->joyData[JOY_X_AXIS_MIN],xUncalibratedPos)*(-1);
     206:	60 91 74 03 	lds	r22, 0x0374
     20a:	bc df       	rcall	.-136    	; 0x184 <calcCalibParam>
     20c:	81 95       	neg	r24
     20e:	88 83       	st	Y, r24
	}
			
}
     210:	df 91       	pop	r29
     212:	cf 91       	pop	r28
     214:	08 95       	ret

00000216 <joyGetPosY>:

void joyGetPosY(uint8_t yUncalibratedPos, int8_t *yCalibratedPos)
{
     216:	cf 93       	push	r28
     218:	df 93       	push	r29
     21a:	48 2f       	mov	r20, r24
     21c:	eb 01       	movw	r28, r22
		globalStruct *ptr=&globalVar;
		
		if(yUncalibratedPos>ptr->joyData[JOY_Y_AXIS_MID])
     21e:	80 91 72 03 	lds	r24, 0x0372
     222:	84 17       	cp	r24, r20
     224:	28 f4       	brcc	.+10     	; 0x230 <joyGetPosY+0x1a>
		{
			*yCalibratedPos=calcCalibParam(ptr->joyData[JOY_Y_AXIS_MID],ptr->joyData[JOY_Y_AXIS_MAX],yUncalibratedPos);			
     226:	60 91 77 03 	lds	r22, 0x0377
     22a:	ac df       	rcall	.-168    	; 0x184 <calcCalibParam>
     22c:	88 83       	st	Y, r24
     22e:	05 c0       	rjmp	.+10     	; 0x23a <joyGetPosY+0x24>
		}
		else
		{
			*yCalibratedPos=calcCalibParam(ptr->joyData[JOY_Y_AXIS_MID],ptr->joyData[JOY_Y_AXIS_MIN],yUncalibratedPos)*(-1);			
     230:	60 91 76 03 	lds	r22, 0x0376
     234:	a7 df       	rcall	.-178    	; 0x184 <calcCalibParam>
     236:	81 95       	neg	r24
     238:	88 83       	st	Y, r24
		}
		
}
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	08 95       	ret

00000240 <usartSendByte>:


//Send a byte using USART
void usartSendByte(uint8_t byteToSend)
{
		while((UCSR0A&(1<<UDRE0))==0);//---------------//Only transmit data if data bus is available (not already transmitting)
     240:	5d 9b       	sbis	0x0b, 5	; 11
     242:	fe cf       	rjmp	.-4      	; 0x240 <usartSendByte>
		UDR0=byteToSend;//---------------------------//transmit byte
     244:	8c b9       	out	0x0c, r24	; 12
     246:	08 95       	ret

00000248 <usartInitialize>:
		#if USART_OPERATING_MODE_U2X
			unsigned int UBRR=(F_CPU / (8UL * USART_BAUDRATE)) - 1; //if integer trunctuation is noticed (...not getting the expected baudrate) due to integer devision, USE: ((F_CPU + USART_BAUD_RATE * 8L) / (USART_BAUD_RATE * 16L) - 1) instead. When doing integer division it is usually better to round to the nearest integer, rather than to the lowest. 
			UCSR0A |= (1<<U2X0);//---------------------------//U2x=1
		#else
			unsigned int UBRR=(F_CPU / (16UL * USART_BAUDRATE)) - 1;
			UCSR0A &= ~(1<<U2X0);//---------------------------//U2X=0
     248:	59 98       	cbi	0x0b, 1	; 11
		#endif

		//Set up the baud rate for USART0
		UBRR0L=UBRR;//---------------------------// load lower 8 bits of baud rate value
     24a:	8f e1       	ldi	r24, 0x1F	; 31
     24c:	89 b9       	out	0x09, r24	; 9
		UBRR0H=(UBRR>>8);//---------------------------// load upper 8 bits of baud rate value	
     24e:	10 bc       	out	0x20, r1	; 32
		
		//Enable Tx & Rx
		UCSR0B=(1<<TXEN0)|(1<<RXEN0);
     250:	88 e1       	ldi	r24, 0x18	; 24
     252:	8a b9       	out	0x0a, r24	; 10
		/*Configure Data Format: 
			-	Data Bits = 8;
			-	Stop Bits = 2;
			-	Parity = EVEN;		
		*/
		UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00)|(1<<UPM01);
     254:	8e ea       	ldi	r24, 0xAE	; 174
     256:	80 bd       	out	0x20, r24	; 32
		*	- Second parameter: optional; used for get functions, ie. receiving a character from the USART.
		*	- BEAWARE that this function uses malloc()
		*/
		if(USART_ENABLE_printf)
		{
			fdevopen(&usartSendByte,NULL);
     258:	60 e0       	ldi	r22, 0x00	; 0
     25a:	70 e0       	ldi	r23, 0x00	; 0
     25c:	80 e2       	ldi	r24, 0x20	; 32
     25e:	91 e0       	ldi	r25, 0x01	; 1
     260:	5a d4       	rcall	.+2228   	; 0xb16 <fdevopen>
		}
		
		
		if(USART_INTERRUPT_RX)
		{
			UCSR0B |= (1<<RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXCIE0)
     262:	57 9a       	sbi	0x0a, 7	; 10
			//Enable the interrupts globally. 
			sei();
     264:	78 94       	sei
     266:	08 95       	ret

00000268 <__vector_19>:
UsartGlobalStruct globalVariables;

//volatile uint8_t byteOfData; //to hold data on RX interrupt
//interrupt if receiving data
ISR (USART0_RXC_vect,ISR_BLOCK)
{
     268:	1f 92       	push	r1
     26a:	0f 92       	push	r0
     26c:	0f b6       	in	r0, 0x3f	; 63
     26e:	0f 92       	push	r0
     270:	11 24       	eor	r1, r1
     272:	8f 93       	push	r24
	if (USART_INTERRUPT_RX)
	{
		UsartGlobalStruct *ptr=&globalVariables;	
		ptr->RXdata=UDR0;//grab RX byte 
     274:	8c b1       	in	r24, 0x0c	; 12
     276:	80 93 7e 03 	sts	0x037E, r24
	}
}
     27a:	8f 91       	pop	r24
     27c:	0f 90       	pop	r0
     27e:	0f be       	out	0x3f, r0	; 63
     280:	0f 90       	pop	r0
     282:	1f 90       	pop	r1
     284:	18 95       	reti

00000286 <usartReadByte>:
uint8_t usartReadByte(void)
{
	if(USART_INTERRUPT_RX)
	{
		UsartGlobalStruct *ptr=&globalVariables;
		ptr->RXdataBuffer=ptr->RXdata;//--------//dataBuffer to hold previously received data
     286:	ee e7       	ldi	r30, 0x7E	; 126
     288:	f3 e0       	ldi	r31, 0x03	; 3
     28a:	80 81       	ld	r24, Z
     28c:	80 93 7f 03 	sts	0x037F, r24
		ptr->RXdata=NULL;//-------------------//make sure that read data is not latched in memory until next interrupt occurs
     290:	10 82       	st	Z, r1
	else
	{
		while((UCSR0A&(1<<RXC0))==0);//---------------------------//wait until data is received
		return UDR0;//-------------------------------------------//return received data
	}
}
     292:	08 95       	ret

00000294 <usartSendDataString>:
		UDR0=byteToSend;//---------------------------//transmit byte
}

//Send a string of data using USART
void usartSendDataString(const char *dataString)
{
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	ec 01       	movw	r28, r24
	while(*dataString)
     29a:	88 81       	ld	r24, Y
     29c:	88 23       	and	r24, r24
     29e:	29 f0       	breq	.+10     	; 0x2aa <usartSendDataString+0x16>
     2a0:	21 96       	adiw	r28, 0x01	; 1
	{
		usartSendByte(*dataString);
     2a2:	ce df       	rcall	.-100    	; 0x240 <usartSendByte>
}

//Send a string of data using USART
void usartSendDataString(const char *dataString)
{
	while(*dataString)
     2a4:	89 91       	ld	r24, Y+
     2a6:	81 11       	cpse	r24, r1
     2a8:	fc cf       	rjmp	.-8      	; 0x2a2 <usartSendDataString+0xe>
	{
		usartSendByte(*dataString);
		dataString++;
	}
}
     2aa:	df 91       	pop	r29
     2ac:	cf 91       	pop	r28
     2ae:	08 95       	ret

000002b0 <xmemInit>:

	//Write address on SRAM
	memoryPosition[address] = data;
	
	return 0;
}
     2b0:	80 e8       	ldi	r24, 0x80	; 128
     2b2:	85 bf       	out	0x35, r24	; 53
     2b4:	16 be       	out	0x36, r1	; 54
     2b6:	80 e2       	ldi	r24, 0x20	; 32
     2b8:	80 bf       	out	0x30, r24	; 48
     2ba:	08 95       	ret

000002bc <xmemTest>:
     2bc:	cf 92       	push	r12
     2be:	df 92       	push	r13
     2c0:	ef 92       	push	r14
     2c2:	ff 92       	push	r15
     2c4:	0f 93       	push	r16
     2c6:	1f 93       	push	r17
     2c8:	cf 93       	push	r28
     2ca:	df 93       	push	r29
     2cc:	82 e6       	ldi	r24, 0x62	; 98
     2ce:	91 e0       	ldi	r25, 0x01	; 1
     2d0:	7d d4       	rcall	.+2298   	; 0xbcc <puts>
     2d2:	00 e0       	ldi	r16, 0x00	; 0
     2d4:	10 e0       	ldi	r17, 0x00	; 0
     2d6:	c0 e0       	ldi	r28, 0x00	; 0
     2d8:	d0 e0       	ldi	r29, 0x00	; 0
     2da:	0f 2e       	mov	r0, r31
     2dc:	f9 e7       	ldi	r31, 0x79	; 121
     2de:	ef 2e       	mov	r14, r31
     2e0:	f1 e0       	ldi	r31, 0x01	; 1
     2e2:	ff 2e       	mov	r15, r31
     2e4:	f0 2d       	mov	r31, r0
     2e6:	8c 2f       	mov	r24, r28
     2e8:	80 95       	com	r24
     2ea:	fe 01       	movw	r30, r28
     2ec:	f8 5e       	subi	r31, 0xE8	; 232
     2ee:	80 83       	st	Z, r24
     2f0:	90 81       	ld	r25, Z
     2f2:	98 17       	cp	r25, r24
     2f4:	a1 f0       	breq	.+40     	; 0x31e <xmemTest+0x62>
     2f6:	90 81       	ld	r25, Z
     2f8:	1f 92       	push	r1
     2fa:	8f 93       	push	r24
     2fc:	1f 92       	push	r1
     2fe:	9f 93       	push	r25
     300:	df 93       	push	r29
     302:	cf 93       	push	r28
     304:	ff 92       	push	r15
     306:	ef 92       	push	r14
     308:	50 d4       	rcall	.+2208   	; 0xbaa <printf>
     30a:	0f 5f       	subi	r16, 0xFF	; 255
     30c:	1f 4f       	sbci	r17, 0xFF	; 255
     30e:	8d b7       	in	r24, 0x3d	; 61
     310:	9e b7       	in	r25, 0x3e	; 62
     312:	08 96       	adiw	r24, 0x08	; 8
     314:	0f b6       	in	r0, 0x3f	; 63
     316:	f8 94       	cli
     318:	9e bf       	out	0x3e, r25	; 62
     31a:	0f be       	out	0x3f, r0	; 63
     31c:	8d bf       	out	0x3d, r24	; 61
     31e:	21 96       	adiw	r28, 0x01	; 1
     320:	c1 15       	cp	r28, r1
     322:	98 e0       	ldi	r25, 0x08	; 8
     324:	d9 07       	cpc	r29, r25
     326:	f9 f6       	brne	.-66     	; 0x2e6 <xmemTest+0x2a>
     328:	e1 2c       	mov	r14, r1
     32a:	f1 2c       	mov	r15, r1
     32c:	c0 e0       	ldi	r28, 0x00	; 0
     32e:	d0 e0       	ldi	r29, 0x00	; 0
     330:	0f 2e       	mov	r0, r31
     332:	f9 eb       	ldi	r31, 0xB9	; 185
     334:	cf 2e       	mov	r12, r31
     336:	f1 e0       	ldi	r31, 0x01	; 1
     338:	df 2e       	mov	r13, r31
     33a:	f0 2d       	mov	r31, r0
     33c:	8c 2f       	mov	r24, r28
     33e:	80 95       	com	r24
     340:	fe 01       	movw	r30, r28
     342:	f8 5e       	subi	r31, 0xE8	; 232
     344:	90 81       	ld	r25, Z
     346:	89 17       	cp	r24, r25
     348:	a9 f0       	breq	.+42     	; 0x374 <xmemTest+0xb8>
     34a:	90 81       	ld	r25, Z
     34c:	1f 92       	push	r1
     34e:	8f 93       	push	r24
     350:	1f 92       	push	r1
     352:	9f 93       	push	r25
     354:	df 93       	push	r29
     356:	cf 93       	push	r28
     358:	df 92       	push	r13
     35a:	cf 92       	push	r12
     35c:	26 d4       	rcall	.+2124   	; 0xbaa <printf>
     35e:	8f ef       	ldi	r24, 0xFF	; 255
     360:	e8 1a       	sub	r14, r24
     362:	f8 0a       	sbc	r15, r24
     364:	8d b7       	in	r24, 0x3d	; 61
     366:	9e b7       	in	r25, 0x3e	; 62
     368:	08 96       	adiw	r24, 0x08	; 8
     36a:	0f b6       	in	r0, 0x3f	; 63
     36c:	f8 94       	cli
     36e:	9e bf       	out	0x3e, r25	; 62
     370:	0f be       	out	0x3f, r0	; 63
     372:	8d bf       	out	0x3d, r24	; 61
     374:	21 96       	adiw	r28, 0x01	; 1
     376:	c1 15       	cp	r28, r1
     378:	98 e0       	ldi	r25, 0x08	; 8
     37a:	d9 07       	cpc	r29, r25
     37c:	f9 f6       	brne	.-66     	; 0x33c <xmemTest+0x80>
     37e:	ff 92       	push	r15
     380:	ef 92       	push	r14
     382:	1f 93       	push	r17
     384:	0f 93       	push	r16
     386:	88 ef       	ldi	r24, 0xF8	; 248
     388:	91 e0       	ldi	r25, 0x01	; 1
     38a:	9f 93       	push	r25
     38c:	8f 93       	push	r24
     38e:	0d d4       	rcall	.+2074   	; 0xbaa <printf>
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
     394:	0f 90       	pop	r0
     396:	0f 90       	pop	r0
     398:	0f 90       	pop	r0
     39a:	0f 90       	pop	r0
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	1f 91       	pop	r17
     3a2:	0f 91       	pop	r16
     3a4:	ff 90       	pop	r15
     3a6:	ef 90       	pop	r14
     3a8:	df 90       	pop	r13
     3aa:	cf 90       	pop	r12
     3ac:	08 95       	ret

000003ae <xmemExampleFunction>:
     3ae:	bf 92       	push	r11
     3b0:	cf 92       	push	r12
     3b2:	df 92       	push	r13
     3b4:	ef 92       	push	r14
     3b6:	ff 92       	push	r15
     3b8:	0f 93       	push	r16
     3ba:	1f 93       	push	r17
     3bc:	cf 93       	push	r28
     3be:	df 93       	push	r29
     3c0:	88 e4       	ldi	r24, 0x48	; 72
     3c2:	92 e0       	ldi	r25, 0x02	; 2
     3c4:	03 d4       	rcall	.+2054   	; 0xbcc <puts>
     3c6:	80 e4       	ldi	r24, 0x40	; 64
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	7e d2       	rcall	.+1276   	; 0x8c8 <malloc>
     3cc:	7c 01       	movw	r14, r24
     3ce:	ff 92       	push	r15
     3d0:	8f 93       	push	r24
     3d2:	1f 92       	push	r1
     3d4:	80 e4       	ldi	r24, 0x40	; 64
     3d6:	8f 93       	push	r24
     3d8:	83 e6       	ldi	r24, 0x63	; 99
     3da:	92 e0       	ldi	r25, 0x02	; 2
     3dc:	9f 93       	push	r25
     3de:	8f 93       	push	r24
     3e0:	e4 d3       	rcall	.+1992   	; 0xbaa <printf>
     3e2:	0f 90       	pop	r0
     3e4:	0f 90       	pop	r0
     3e6:	0f 90       	pop	r0
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	f7 01       	movw	r30, r14
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	11 92       	st	Z+, r1
     3f4:	8f 5f       	subi	r24, 0xFF	; 255
     3f6:	80 34       	cpi	r24, 0x40	; 64
     3f8:	e1 f7       	brne	.-8      	; 0x3f2 <xmemExampleFunction+0x44>
     3fa:	58 c0       	rjmp	.+176    	; 0x4ac <xmemExampleFunction+0xfe>
     3fc:	f8 01       	movw	r30, r16
     3fe:	81 91       	ld	r24, Z+
     400:	8f 01       	movw	r16, r30
     402:	1f 92       	push	r1
     404:	8f 93       	push	r24
     406:	df 93       	push	r29
     408:	cf 93       	push	r28
     40a:	cf d3       	rcall	.+1950   	; 0xbaa <printf>
     40c:	0f 90       	pop	r0
     40e:	0f 90       	pop	r0
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
     414:	8b 2d       	mov	r24, r11
     416:	8f 70       	andi	r24, 0x0F	; 15
     418:	8f 30       	cpi	r24, 0x0F	; 15
     41a:	19 f4       	brne	.+6      	; 0x422 <xmemExampleFunction+0x74>
     41c:	86 e3       	ldi	r24, 0x36	; 54
     41e:	91 e0       	ldi	r25, 0x01	; 1
     420:	d5 d3       	rcall	.+1962   	; 0xbcc <puts>
     422:	b3 94       	inc	r11
     424:	e0 e4       	ldi	r30, 0x40	; 64
     426:	be 12       	cpse	r11, r30
     428:	e9 cf       	rjmp	.-46     	; 0x3fc <xmemExampleFunction+0x4e>
     42a:	ff 92       	push	r15
     42c:	ef 92       	push	r14
     42e:	1f 92       	push	r1
     430:	80 e4       	ldi	r24, 0x40	; 64
     432:	8f 93       	push	r24
     434:	80 ea       	ldi	r24, 0xA0	; 160
     436:	92 e0       	ldi	r25, 0x02	; 2
     438:	9f 93       	push	r25
     43a:	8f 93       	push	r24
     43c:	b6 d3       	rcall	.+1900   	; 0xbaa <printf>
     43e:	0f 90       	pop	r0
     440:	0f 90       	pop	r0
     442:	0f 90       	pop	r0
     444:	0f 90       	pop	r0
     446:	0f 90       	pop	r0
     448:	0f 90       	pop	r0
     44a:	f7 01       	movw	r30, r14
     44c:	80 e0       	ldi	r24, 0x00	; 0
     44e:	81 93       	st	Z+, r24
     450:	8f 5f       	subi	r24, 0xFF	; 255
     452:	80 34       	cpi	r24, 0x40	; 64
     454:	e1 f7       	brne	.-8      	; 0x44e <xmemExampleFunction+0xa0>
     456:	18 c0       	rjmp	.+48     	; 0x488 <xmemExampleFunction+0xda>
     458:	f8 01       	movw	r30, r16
     45a:	81 91       	ld	r24, Z+
     45c:	8f 01       	movw	r16, r30
     45e:	1f 92       	push	r1
     460:	8f 93       	push	r24
     462:	df 93       	push	r29
     464:	cf 93       	push	r28
     466:	a1 d3       	rcall	.+1858   	; 0xbaa <printf>
     468:	0f 90       	pop	r0
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	0f 90       	pop	r0
     470:	8f 2d       	mov	r24, r15
     472:	8f 70       	andi	r24, 0x0F	; 15
     474:	8f 30       	cpi	r24, 0x0F	; 15
     476:	19 f4       	brne	.+6      	; 0x47e <xmemExampleFunction+0xd0>
     478:	86 e3       	ldi	r24, 0x36	; 54
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	a7 d3       	rcall	.+1870   	; 0xbcc <puts>
     47e:	f3 94       	inc	r15
     480:	e0 e4       	ldi	r30, 0x40	; 64
     482:	fe 12       	cpse	r15, r30
     484:	e9 cf       	rjmp	.-46     	; 0x458 <xmemExampleFunction+0xaa>
     486:	25 c0       	rjmp	.+74     	; 0x4d2 <xmemExampleFunction+0x124>
     488:	f7 01       	movw	r30, r14
     48a:	80 81       	ld	r24, Z
     48c:	1f 92       	push	r1
     48e:	8f 93       	push	r24
     490:	8a e9       	ldi	r24, 0x9A	; 154
     492:	92 e0       	ldi	r25, 0x02	; 2
     494:	9f 93       	push	r25
     496:	8f 93       	push	r24
     498:	88 d3       	rcall	.+1808   	; 0xbaa <printf>
     49a:	0f 90       	pop	r0
     49c:	0f 90       	pop	r0
     49e:	0f 90       	pop	r0
     4a0:	0f 90       	pop	r0
     4a2:	86 01       	movw	r16, r12
     4a4:	f1 2c       	mov	r15, r1
     4a6:	ca e9       	ldi	r28, 0x9A	; 154
     4a8:	d2 e0       	ldi	r29, 0x02	; 2
     4aa:	e9 cf       	rjmp	.-46     	; 0x47e <xmemExampleFunction+0xd0>
     4ac:	f7 01       	movw	r30, r14
     4ae:	81 91       	ld	r24, Z+
     4b0:	6f 01       	movw	r12, r30
     4b2:	1f 92       	push	r1
     4b4:	8f 93       	push	r24
     4b6:	8a e9       	ldi	r24, 0x9A	; 154
     4b8:	92 e0       	ldi	r25, 0x02	; 2
     4ba:	9f 93       	push	r25
     4bc:	8f 93       	push	r24
     4be:	75 d3       	rcall	.+1770   	; 0xbaa <printf>
     4c0:	0f 90       	pop	r0
     4c2:	0f 90       	pop	r0
     4c4:	0f 90       	pop	r0
     4c6:	0f 90       	pop	r0
     4c8:	86 01       	movw	r16, r12
     4ca:	b1 2c       	mov	r11, r1
     4cc:	ca e9       	ldi	r28, 0x9A	; 154
     4ce:	d2 e0       	ldi	r29, 0x02	; 2
     4d0:	a8 cf       	rjmp	.-176    	; 0x422 <xmemExampleFunction+0x74>
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	df 90       	pop	r13
     4e0:	cf 90       	pop	r12
     4e2:	bf 90       	pop	r11
     4e4:	08 95       	ret

000004e6 <xmemReadFrom>:
{
	//Start address for the xmem
	uint8_t *memoryPosition = 0x1800;
	
	//Read address from SRAM
	return memoryPosition[address];
     4e6:	98 5e       	subi	r25, 0xE8	; 232
     4e8:	fc 01       	movw	r30, r24
     4ea:	80 81       	ld	r24, Z
}
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	08 95       	ret

000004f0 <main>:
bool interruptOn=false;
uint8_t byteOfData=0;

//main function
int main (void)
{
     4f0:	cf 93       	push	r28
     4f2:	df 93       	push	r29
     4f4:	00 d0       	rcall	.+0      	; 0x4f6 <main+0x6>
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
	// Initialise external memory interface // NB: "xmemInit()" must be called before any function that uses heap memory!!
	xmemInit();
     4fa:	da de       	rcall	.-588    	; 0x2b0 <xmemInit>
	
	// dummy for testing USART
	//char *dataString="\r......Booting up.\r";
		
	//init. USART
	usartInitialize();//--------*****-////TO DO: implement light diode blink if(usartInitialize()); else ERROR BLINK CODE.. also write reference for blinking code...
     4fc:	a5 de       	rcall	.-694    	; 0x248 <usartInitialize>
	
	//test external SRAM
	xmemTest();
     4fe:	de de       	rcall	.-580    	; 0x2bc <xmemTest>
	xmemExampleFunction();
     500:	56 df       	rcall	.-340    	; 0x3ae <xmemExampleFunction>
	printf("\n\r0x%02x",xmemReadFrom(5));
     502:	85 e0       	ldi	r24, 0x05	; 5
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	ef df       	rcall	.-34     	; 0x4e6 <xmemReadFrom>
     508:	9f 93       	push	r25
     50a:	8f 93       	push	r24
     50c:	88 e2       	ldi	r24, 0x28	; 40
     50e:	93 e0       	ldi	r25, 0x03	; 3
     510:	9f 93       	push	r25
     512:	8f 93       	push	r24
     514:	4a d3       	rcall	.+1684   	; 0xbaa <printf>
	//vXMEMTestTask();
	
	
	
	uint8_t *test= malloc(4*sizeof(uint8_t));
     516:	84 e0       	ldi	r24, 0x04	; 4
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	d6 d1       	rcall	.+940    	; 0x8c8 <malloc>
     51c:	8c 01       	movw	r16, r24
	//uint8_t ptr->joyData[JOY_Y_AXIS_MIN];
	
	
	uint8_t buffer1=adcRead(ADC_CH1_JOY_Y_AXIS);
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	c4 dd       	rcall	.-1144   	; 0xaa <adcRead>
	uint8_t buffer2=adcRead(ADC_CH2_JOY_X_AXIS);
     522:	81 e0       	ldi	r24, 0x01	; 1
     524:	c2 dd       	rcall	.-1148   	; 0xaa <adcRead>
	

	usartSendDataString("\r\n\n@ECHO ON\r\n");
     526:	81 e3       	ldi	r24, 0x31	; 49
     528:	93 e0       	ldi	r25, 0x03	; 3
     52a:	b4 de       	rcall	.-664    	; 0x294 <usartSendDataString>
	
	joyCalibrateXY();
     52c:	e0 dd       	rcall	.-1088   	; 0xee <joyCalibrateXY>


	int8_t x,y=0;
     52e:	1a 82       	std	Y+2, r1	; 0x02
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
		buffer2=adcRead(ADC_CH2_JOY_X_AXIS);
		//printf("\n\rX POS: %d\n\r",buffer2);
		joyGetPosX(buffer2,&x);
		//printf("x POS: %d",x);
		joyGetPosY(buffer1,&y);
		printf("\n\ry = %d, x = %d, Unscaled_Y = %d, Uncaled_X = %d",y,x,test[2],test[3]);
     538:	0f 2e       	mov	r0, r31
     53a:	ff e3       	ldi	r31, 0x3F	; 63
     53c:	ef 2e       	mov	r14, r31
     53e:	f3 e0       	ldi	r31, 0x03	; 3
     540:	ff 2e       	mov	r15, r31
     542:	f0 2d       	mov	r31, r0


	int8_t x,y=0;
	while(true)
	{	
		test=joyGetUnscaledXY(test);
     544:	c8 01       	movw	r24, r16
     546:	c1 dd       	rcall	.-1150   	; 0xca <joyGetUnscaledXY>
     548:	8c 01       	movw	r16, r24
		//buffer1=(test[0]/2);
		//test= joystickInitialize();
		//printf("\n\r%d",test[0]);
		//printf("\n\r%d",buffer1);
		
		buffer1=adcRead(ADC_CH1_JOY_Y_AXIS);
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	ae dd       	rcall	.-1188   	; 0xaa <adcRead>
     54e:	d8 2e       	mov	r13, r24
		buffer2=adcRead(ADC_CH2_JOY_X_AXIS);
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	ab dd       	rcall	.-1194   	; 0xaa <adcRead>
		//printf("\n\rX POS: %d\n\r",buffer2);
		joyGetPosX(buffer2,&x);
     554:	be 01       	movw	r22, r28
     556:	6f 5f       	subi	r22, 0xFF	; 255
     558:	7f 4f       	sbci	r23, 0xFF	; 255
     55a:	48 de       	rcall	.-880    	; 0x1ec <joyGetPosX>
		//printf("x POS: %d",x);
		joyGetPosY(buffer1,&y);
     55c:	be 01       	movw	r22, r28
     55e:	6e 5f       	subi	r22, 0xFE	; 254
     560:	7f 4f       	sbci	r23, 0xFF	; 255
     562:	8d 2d       	mov	r24, r13
     564:	58 de       	rcall	.-848    	; 0x216 <joyGetPosY>
		printf("\n\ry = %d, x = %d, Unscaled_Y = %d, Uncaled_X = %d",y,x,test[2],test[3]);
     566:	f8 01       	movw	r30, r16
     568:	83 81       	ldd	r24, Z+3	; 0x03
     56a:	1f 92       	push	r1
     56c:	8f 93       	push	r24
     56e:	82 81       	ldd	r24, Z+2	; 0x02
     570:	1f 92       	push	r1
     572:	8f 93       	push	r24
     574:	29 81       	ldd	r18, Y+1	; 0x01
     576:	82 2f       	mov	r24, r18
     578:	99 27       	eor	r25, r25
     57a:	87 fd       	sbrc	r24, 7
     57c:	90 95       	com	r25
     57e:	9f 93       	push	r25
     580:	2f 93       	push	r18
     582:	2a 81       	ldd	r18, Y+2	; 0x02
     584:	82 2f       	mov	r24, r18
     586:	99 27       	eor	r25, r25
     588:	87 fd       	sbrc	r24, 7
     58a:	90 95       	com	r25
     58c:	9f 93       	push	r25
     58e:	2f 93       	push	r18
     590:	ff 92       	push	r15
     592:	ef 92       	push	r14
     594:	0a d3       	rcall	.+1556   	; 0xbaa <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     596:	ff ef       	ldi	r31, 0xFF	; 255
     598:	2f e3       	ldi	r18, 0x3F	; 63
     59a:	82 e0       	ldi	r24, 0x02	; 2
     59c:	f1 50       	subi	r31, 0x01	; 1
     59e:	20 40       	sbci	r18, 0x00	; 0
     5a0:	80 40       	sbci	r24, 0x00	; 0
     5a2:	e1 f7       	brne	.-8      	; 0x59c <__stack+0x9d>
     5a4:	00 c0       	rjmp	.+0      	; 0x5a6 <__stack+0xa7>
     5a6:	00 00       	nop
     5a8:	0f b6       	in	r0, 0x3f	; 63
     5aa:	f8 94       	cli
     5ac:	de bf       	out	0x3e, r29	; 62
     5ae:	0f be       	out	0x3f, r0	; 63
     5b0:	cd bf       	out	0x3d, r28	; 61
     5b2:	c8 cf       	rjmp	.-112    	; 0x544 <__stack+0x45>

000005b4 <__divsf3>:
     5b4:	0c d0       	rcall	.+24     	; 0x5ce <__divsf3x>
     5b6:	eb c0       	rjmp	.+470    	; 0x78e <__fp_round>
     5b8:	e3 d0       	rcall	.+454    	; 0x780 <__fp_pscB>
     5ba:	40 f0       	brcs	.+16     	; 0x5cc <__divsf3+0x18>
     5bc:	da d0       	rcall	.+436    	; 0x772 <__fp_pscA>
     5be:	30 f0       	brcs	.+12     	; 0x5cc <__divsf3+0x18>
     5c0:	21 f4       	brne	.+8      	; 0x5ca <__divsf3+0x16>
     5c2:	5f 3f       	cpi	r21, 0xFF	; 255
     5c4:	19 f0       	breq	.+6      	; 0x5cc <__divsf3+0x18>
     5c6:	cc c0       	rjmp	.+408    	; 0x760 <__fp_inf>
     5c8:	51 11       	cpse	r21, r1
     5ca:	15 c1       	rjmp	.+554    	; 0x7f6 <__fp_szero>
     5cc:	cf c0       	rjmp	.+414    	; 0x76c <__fp_nan>

000005ce <__divsf3x>:
     5ce:	f0 d0       	rcall	.+480    	; 0x7b0 <__fp_split3>
     5d0:	98 f3       	brcs	.-26     	; 0x5b8 <__divsf3+0x4>

000005d2 <__divsf3_pse>:
     5d2:	99 23       	and	r25, r25
     5d4:	c9 f3       	breq	.-14     	; 0x5c8 <__divsf3+0x14>
     5d6:	55 23       	and	r21, r21
     5d8:	b1 f3       	breq	.-20     	; 0x5c6 <__divsf3+0x12>
     5da:	95 1b       	sub	r25, r21
     5dc:	55 0b       	sbc	r21, r21
     5de:	bb 27       	eor	r27, r27
     5e0:	aa 27       	eor	r26, r26
     5e2:	62 17       	cp	r22, r18
     5e4:	73 07       	cpc	r23, r19
     5e6:	84 07       	cpc	r24, r20
     5e8:	38 f0       	brcs	.+14     	; 0x5f8 <__divsf3_pse+0x26>
     5ea:	9f 5f       	subi	r25, 0xFF	; 255
     5ec:	5f 4f       	sbci	r21, 0xFF	; 255
     5ee:	22 0f       	add	r18, r18
     5f0:	33 1f       	adc	r19, r19
     5f2:	44 1f       	adc	r20, r20
     5f4:	aa 1f       	adc	r26, r26
     5f6:	a9 f3       	breq	.-22     	; 0x5e2 <__divsf3_pse+0x10>
     5f8:	33 d0       	rcall	.+102    	; 0x660 <__divsf3_pse+0x8e>
     5fa:	0e 2e       	mov	r0, r30
     5fc:	3a f0       	brmi	.+14     	; 0x60c <__divsf3_pse+0x3a>
     5fe:	e0 e8       	ldi	r30, 0x80	; 128
     600:	30 d0       	rcall	.+96     	; 0x662 <__divsf3_pse+0x90>
     602:	91 50       	subi	r25, 0x01	; 1
     604:	50 40       	sbci	r21, 0x00	; 0
     606:	e6 95       	lsr	r30
     608:	00 1c       	adc	r0, r0
     60a:	ca f7       	brpl	.-14     	; 0x5fe <__divsf3_pse+0x2c>
     60c:	29 d0       	rcall	.+82     	; 0x660 <__divsf3_pse+0x8e>
     60e:	fe 2f       	mov	r31, r30
     610:	27 d0       	rcall	.+78     	; 0x660 <__divsf3_pse+0x8e>
     612:	66 0f       	add	r22, r22
     614:	77 1f       	adc	r23, r23
     616:	88 1f       	adc	r24, r24
     618:	bb 1f       	adc	r27, r27
     61a:	26 17       	cp	r18, r22
     61c:	37 07       	cpc	r19, r23
     61e:	48 07       	cpc	r20, r24
     620:	ab 07       	cpc	r26, r27
     622:	b0 e8       	ldi	r27, 0x80	; 128
     624:	09 f0       	breq	.+2      	; 0x628 <__divsf3_pse+0x56>
     626:	bb 0b       	sbc	r27, r27
     628:	80 2d       	mov	r24, r0
     62a:	bf 01       	movw	r22, r30
     62c:	ff 27       	eor	r31, r31
     62e:	93 58       	subi	r25, 0x83	; 131
     630:	5f 4f       	sbci	r21, 0xFF	; 255
     632:	2a f0       	brmi	.+10     	; 0x63e <__divsf3_pse+0x6c>
     634:	9e 3f       	cpi	r25, 0xFE	; 254
     636:	51 05       	cpc	r21, r1
     638:	68 f0       	brcs	.+26     	; 0x654 <__divsf3_pse+0x82>
     63a:	92 c0       	rjmp	.+292    	; 0x760 <__fp_inf>
     63c:	dc c0       	rjmp	.+440    	; 0x7f6 <__fp_szero>
     63e:	5f 3f       	cpi	r21, 0xFF	; 255
     640:	ec f3       	brlt	.-6      	; 0x63c <__divsf3_pse+0x6a>
     642:	98 3e       	cpi	r25, 0xE8	; 232
     644:	dc f3       	brlt	.-10     	; 0x63c <__divsf3_pse+0x6a>
     646:	86 95       	lsr	r24
     648:	77 95       	ror	r23
     64a:	67 95       	ror	r22
     64c:	b7 95       	ror	r27
     64e:	f7 95       	ror	r31
     650:	9f 5f       	subi	r25, 0xFF	; 255
     652:	c9 f7       	brne	.-14     	; 0x646 <__divsf3_pse+0x74>
     654:	88 0f       	add	r24, r24
     656:	91 1d       	adc	r25, r1
     658:	96 95       	lsr	r25
     65a:	87 95       	ror	r24
     65c:	97 f9       	bld	r25, 7
     65e:	08 95       	ret
     660:	e1 e0       	ldi	r30, 0x01	; 1
     662:	66 0f       	add	r22, r22
     664:	77 1f       	adc	r23, r23
     666:	88 1f       	adc	r24, r24
     668:	bb 1f       	adc	r27, r27
     66a:	62 17       	cp	r22, r18
     66c:	73 07       	cpc	r23, r19
     66e:	84 07       	cpc	r24, r20
     670:	ba 07       	cpc	r27, r26
     672:	20 f0       	brcs	.+8      	; 0x67c <__divsf3_pse+0xaa>
     674:	62 1b       	sub	r22, r18
     676:	73 0b       	sbc	r23, r19
     678:	84 0b       	sbc	r24, r20
     67a:	ba 0b       	sbc	r27, r26
     67c:	ee 1f       	adc	r30, r30
     67e:	88 f7       	brcc	.-30     	; 0x662 <__divsf3_pse+0x90>
     680:	e0 95       	com	r30
     682:	08 95       	ret

00000684 <__fixsfsi>:
     684:	04 d0       	rcall	.+8      	; 0x68e <__fixunssfsi>
     686:	68 94       	set
     688:	b1 11       	cpse	r27, r1
     68a:	b5 c0       	rjmp	.+362    	; 0x7f6 <__fp_szero>
     68c:	08 95       	ret

0000068e <__fixunssfsi>:
     68e:	98 d0       	rcall	.+304    	; 0x7c0 <__fp_splitA>
     690:	88 f0       	brcs	.+34     	; 0x6b4 <__fixunssfsi+0x26>
     692:	9f 57       	subi	r25, 0x7F	; 127
     694:	90 f0       	brcs	.+36     	; 0x6ba <__fixunssfsi+0x2c>
     696:	b9 2f       	mov	r27, r25
     698:	99 27       	eor	r25, r25
     69a:	b7 51       	subi	r27, 0x17	; 23
     69c:	a0 f0       	brcs	.+40     	; 0x6c6 <__fixunssfsi+0x38>
     69e:	d1 f0       	breq	.+52     	; 0x6d4 <__fixunssfsi+0x46>
     6a0:	66 0f       	add	r22, r22
     6a2:	77 1f       	adc	r23, r23
     6a4:	88 1f       	adc	r24, r24
     6a6:	99 1f       	adc	r25, r25
     6a8:	1a f0       	brmi	.+6      	; 0x6b0 <__fixunssfsi+0x22>
     6aa:	ba 95       	dec	r27
     6ac:	c9 f7       	brne	.-14     	; 0x6a0 <__fixunssfsi+0x12>
     6ae:	12 c0       	rjmp	.+36     	; 0x6d4 <__fixunssfsi+0x46>
     6b0:	b1 30       	cpi	r27, 0x01	; 1
     6b2:	81 f0       	breq	.+32     	; 0x6d4 <__fixunssfsi+0x46>
     6b4:	9f d0       	rcall	.+318    	; 0x7f4 <__fp_zero>
     6b6:	b1 e0       	ldi	r27, 0x01	; 1
     6b8:	08 95       	ret
     6ba:	9c c0       	rjmp	.+312    	; 0x7f4 <__fp_zero>
     6bc:	67 2f       	mov	r22, r23
     6be:	78 2f       	mov	r23, r24
     6c0:	88 27       	eor	r24, r24
     6c2:	b8 5f       	subi	r27, 0xF8	; 248
     6c4:	39 f0       	breq	.+14     	; 0x6d4 <__fixunssfsi+0x46>
     6c6:	b9 3f       	cpi	r27, 0xF9	; 249
     6c8:	cc f3       	brlt	.-14     	; 0x6bc <__fixunssfsi+0x2e>
     6ca:	86 95       	lsr	r24
     6cc:	77 95       	ror	r23
     6ce:	67 95       	ror	r22
     6d0:	b3 95       	inc	r27
     6d2:	d9 f7       	brne	.-10     	; 0x6ca <__fixunssfsi+0x3c>
     6d4:	3e f4       	brtc	.+14     	; 0x6e4 <__fixunssfsi+0x56>
     6d6:	90 95       	com	r25
     6d8:	80 95       	com	r24
     6da:	70 95       	com	r23
     6dc:	61 95       	neg	r22
     6de:	7f 4f       	sbci	r23, 0xFF	; 255
     6e0:	8f 4f       	sbci	r24, 0xFF	; 255
     6e2:	9f 4f       	sbci	r25, 0xFF	; 255
     6e4:	08 95       	ret

000006e6 <__floatunsisf>:
     6e6:	e8 94       	clt
     6e8:	09 c0       	rjmp	.+18     	; 0x6fc <__floatsisf+0x12>

000006ea <__floatsisf>:
     6ea:	97 fb       	bst	r25, 7
     6ec:	3e f4       	brtc	.+14     	; 0x6fc <__floatsisf+0x12>
     6ee:	90 95       	com	r25
     6f0:	80 95       	com	r24
     6f2:	70 95       	com	r23
     6f4:	61 95       	neg	r22
     6f6:	7f 4f       	sbci	r23, 0xFF	; 255
     6f8:	8f 4f       	sbci	r24, 0xFF	; 255
     6fa:	9f 4f       	sbci	r25, 0xFF	; 255
     6fc:	99 23       	and	r25, r25
     6fe:	a9 f0       	breq	.+42     	; 0x72a <__floatsisf+0x40>
     700:	f9 2f       	mov	r31, r25
     702:	96 e9       	ldi	r25, 0x96	; 150
     704:	bb 27       	eor	r27, r27
     706:	93 95       	inc	r25
     708:	f6 95       	lsr	r31
     70a:	87 95       	ror	r24
     70c:	77 95       	ror	r23
     70e:	67 95       	ror	r22
     710:	b7 95       	ror	r27
     712:	f1 11       	cpse	r31, r1
     714:	f8 cf       	rjmp	.-16     	; 0x706 <__floatsisf+0x1c>
     716:	fa f4       	brpl	.+62     	; 0x756 <__floatsisf+0x6c>
     718:	bb 0f       	add	r27, r27
     71a:	11 f4       	brne	.+4      	; 0x720 <__floatsisf+0x36>
     71c:	60 ff       	sbrs	r22, 0
     71e:	1b c0       	rjmp	.+54     	; 0x756 <__floatsisf+0x6c>
     720:	6f 5f       	subi	r22, 0xFF	; 255
     722:	7f 4f       	sbci	r23, 0xFF	; 255
     724:	8f 4f       	sbci	r24, 0xFF	; 255
     726:	9f 4f       	sbci	r25, 0xFF	; 255
     728:	16 c0       	rjmp	.+44     	; 0x756 <__floatsisf+0x6c>
     72a:	88 23       	and	r24, r24
     72c:	11 f0       	breq	.+4      	; 0x732 <__floatsisf+0x48>
     72e:	96 e9       	ldi	r25, 0x96	; 150
     730:	11 c0       	rjmp	.+34     	; 0x754 <__floatsisf+0x6a>
     732:	77 23       	and	r23, r23
     734:	21 f0       	breq	.+8      	; 0x73e <__floatsisf+0x54>
     736:	9e e8       	ldi	r25, 0x8E	; 142
     738:	87 2f       	mov	r24, r23
     73a:	76 2f       	mov	r23, r22
     73c:	05 c0       	rjmp	.+10     	; 0x748 <__floatsisf+0x5e>
     73e:	66 23       	and	r22, r22
     740:	71 f0       	breq	.+28     	; 0x75e <__floatsisf+0x74>
     742:	96 e8       	ldi	r25, 0x86	; 134
     744:	86 2f       	mov	r24, r22
     746:	70 e0       	ldi	r23, 0x00	; 0
     748:	60 e0       	ldi	r22, 0x00	; 0
     74a:	2a f0       	brmi	.+10     	; 0x756 <__floatsisf+0x6c>
     74c:	9a 95       	dec	r25
     74e:	66 0f       	add	r22, r22
     750:	77 1f       	adc	r23, r23
     752:	88 1f       	adc	r24, r24
     754:	da f7       	brpl	.-10     	; 0x74c <__floatsisf+0x62>
     756:	88 0f       	add	r24, r24
     758:	96 95       	lsr	r25
     75a:	87 95       	ror	r24
     75c:	97 f9       	bld	r25, 7
     75e:	08 95       	ret

00000760 <__fp_inf>:
     760:	97 f9       	bld	r25, 7
     762:	9f 67       	ori	r25, 0x7F	; 127
     764:	80 e8       	ldi	r24, 0x80	; 128
     766:	70 e0       	ldi	r23, 0x00	; 0
     768:	60 e0       	ldi	r22, 0x00	; 0
     76a:	08 95       	ret

0000076c <__fp_nan>:
     76c:	9f ef       	ldi	r25, 0xFF	; 255
     76e:	80 ec       	ldi	r24, 0xC0	; 192
     770:	08 95       	ret

00000772 <__fp_pscA>:
     772:	00 24       	eor	r0, r0
     774:	0a 94       	dec	r0
     776:	16 16       	cp	r1, r22
     778:	17 06       	cpc	r1, r23
     77a:	18 06       	cpc	r1, r24
     77c:	09 06       	cpc	r0, r25
     77e:	08 95       	ret

00000780 <__fp_pscB>:
     780:	00 24       	eor	r0, r0
     782:	0a 94       	dec	r0
     784:	12 16       	cp	r1, r18
     786:	13 06       	cpc	r1, r19
     788:	14 06       	cpc	r1, r20
     78a:	05 06       	cpc	r0, r21
     78c:	08 95       	ret

0000078e <__fp_round>:
     78e:	09 2e       	mov	r0, r25
     790:	03 94       	inc	r0
     792:	00 0c       	add	r0, r0
     794:	11 f4       	brne	.+4      	; 0x79a <__fp_round+0xc>
     796:	88 23       	and	r24, r24
     798:	52 f0       	brmi	.+20     	; 0x7ae <__fp_round+0x20>
     79a:	bb 0f       	add	r27, r27
     79c:	40 f4       	brcc	.+16     	; 0x7ae <__fp_round+0x20>
     79e:	bf 2b       	or	r27, r31
     7a0:	11 f4       	brne	.+4      	; 0x7a6 <__fp_round+0x18>
     7a2:	60 ff       	sbrs	r22, 0
     7a4:	04 c0       	rjmp	.+8      	; 0x7ae <__fp_round+0x20>
     7a6:	6f 5f       	subi	r22, 0xFF	; 255
     7a8:	7f 4f       	sbci	r23, 0xFF	; 255
     7aa:	8f 4f       	sbci	r24, 0xFF	; 255
     7ac:	9f 4f       	sbci	r25, 0xFF	; 255
     7ae:	08 95       	ret

000007b0 <__fp_split3>:
     7b0:	57 fd       	sbrc	r21, 7
     7b2:	90 58       	subi	r25, 0x80	; 128
     7b4:	44 0f       	add	r20, r20
     7b6:	55 1f       	adc	r21, r21
     7b8:	59 f0       	breq	.+22     	; 0x7d0 <__fp_splitA+0x10>
     7ba:	5f 3f       	cpi	r21, 0xFF	; 255
     7bc:	71 f0       	breq	.+28     	; 0x7da <__fp_splitA+0x1a>
     7be:	47 95       	ror	r20

000007c0 <__fp_splitA>:
     7c0:	88 0f       	add	r24, r24
     7c2:	97 fb       	bst	r25, 7
     7c4:	99 1f       	adc	r25, r25
     7c6:	61 f0       	breq	.+24     	; 0x7e0 <__fp_splitA+0x20>
     7c8:	9f 3f       	cpi	r25, 0xFF	; 255
     7ca:	79 f0       	breq	.+30     	; 0x7ea <__fp_splitA+0x2a>
     7cc:	87 95       	ror	r24
     7ce:	08 95       	ret
     7d0:	12 16       	cp	r1, r18
     7d2:	13 06       	cpc	r1, r19
     7d4:	14 06       	cpc	r1, r20
     7d6:	55 1f       	adc	r21, r21
     7d8:	f2 cf       	rjmp	.-28     	; 0x7be <__fp_split3+0xe>
     7da:	46 95       	lsr	r20
     7dc:	f1 df       	rcall	.-30     	; 0x7c0 <__fp_splitA>
     7de:	08 c0       	rjmp	.+16     	; 0x7f0 <__fp_splitA+0x30>
     7e0:	16 16       	cp	r1, r22
     7e2:	17 06       	cpc	r1, r23
     7e4:	18 06       	cpc	r1, r24
     7e6:	99 1f       	adc	r25, r25
     7e8:	f1 cf       	rjmp	.-30     	; 0x7cc <__fp_splitA+0xc>
     7ea:	86 95       	lsr	r24
     7ec:	71 05       	cpc	r23, r1
     7ee:	61 05       	cpc	r22, r1
     7f0:	08 94       	sec
     7f2:	08 95       	ret

000007f4 <__fp_zero>:
     7f4:	e8 94       	clt

000007f6 <__fp_szero>:
     7f6:	bb 27       	eor	r27, r27
     7f8:	66 27       	eor	r22, r22
     7fa:	77 27       	eor	r23, r23
     7fc:	cb 01       	movw	r24, r22
     7fe:	97 f9       	bld	r25, 7
     800:	08 95       	ret

00000802 <__mulsf3>:
     802:	0b d0       	rcall	.+22     	; 0x81a <__mulsf3x>
     804:	c4 cf       	rjmp	.-120    	; 0x78e <__fp_round>
     806:	b5 df       	rcall	.-150    	; 0x772 <__fp_pscA>
     808:	28 f0       	brcs	.+10     	; 0x814 <__mulsf3+0x12>
     80a:	ba df       	rcall	.-140    	; 0x780 <__fp_pscB>
     80c:	18 f0       	brcs	.+6      	; 0x814 <__mulsf3+0x12>
     80e:	95 23       	and	r25, r21
     810:	09 f0       	breq	.+2      	; 0x814 <__mulsf3+0x12>
     812:	a6 cf       	rjmp	.-180    	; 0x760 <__fp_inf>
     814:	ab cf       	rjmp	.-170    	; 0x76c <__fp_nan>
     816:	11 24       	eor	r1, r1
     818:	ee cf       	rjmp	.-36     	; 0x7f6 <__fp_szero>

0000081a <__mulsf3x>:
     81a:	ca df       	rcall	.-108    	; 0x7b0 <__fp_split3>
     81c:	a0 f3       	brcs	.-24     	; 0x806 <__mulsf3+0x4>

0000081e <__mulsf3_pse>:
     81e:	95 9f       	mul	r25, r21
     820:	d1 f3       	breq	.-12     	; 0x816 <__mulsf3+0x14>
     822:	95 0f       	add	r25, r21
     824:	50 e0       	ldi	r21, 0x00	; 0
     826:	55 1f       	adc	r21, r21
     828:	62 9f       	mul	r22, r18
     82a:	f0 01       	movw	r30, r0
     82c:	72 9f       	mul	r23, r18
     82e:	bb 27       	eor	r27, r27
     830:	f0 0d       	add	r31, r0
     832:	b1 1d       	adc	r27, r1
     834:	63 9f       	mul	r22, r19
     836:	aa 27       	eor	r26, r26
     838:	f0 0d       	add	r31, r0
     83a:	b1 1d       	adc	r27, r1
     83c:	aa 1f       	adc	r26, r26
     83e:	64 9f       	mul	r22, r20
     840:	66 27       	eor	r22, r22
     842:	b0 0d       	add	r27, r0
     844:	a1 1d       	adc	r26, r1
     846:	66 1f       	adc	r22, r22
     848:	82 9f       	mul	r24, r18
     84a:	22 27       	eor	r18, r18
     84c:	b0 0d       	add	r27, r0
     84e:	a1 1d       	adc	r26, r1
     850:	62 1f       	adc	r22, r18
     852:	73 9f       	mul	r23, r19
     854:	b0 0d       	add	r27, r0
     856:	a1 1d       	adc	r26, r1
     858:	62 1f       	adc	r22, r18
     85a:	83 9f       	mul	r24, r19
     85c:	a0 0d       	add	r26, r0
     85e:	61 1d       	adc	r22, r1
     860:	22 1f       	adc	r18, r18
     862:	74 9f       	mul	r23, r20
     864:	33 27       	eor	r19, r19
     866:	a0 0d       	add	r26, r0
     868:	61 1d       	adc	r22, r1
     86a:	23 1f       	adc	r18, r19
     86c:	84 9f       	mul	r24, r20
     86e:	60 0d       	add	r22, r0
     870:	21 1d       	adc	r18, r1
     872:	82 2f       	mov	r24, r18
     874:	76 2f       	mov	r23, r22
     876:	6a 2f       	mov	r22, r26
     878:	11 24       	eor	r1, r1
     87a:	9f 57       	subi	r25, 0x7F	; 127
     87c:	50 40       	sbci	r21, 0x00	; 0
     87e:	8a f0       	brmi	.+34     	; 0x8a2 <__mulsf3_pse+0x84>
     880:	e1 f0       	breq	.+56     	; 0x8ba <__mulsf3_pse+0x9c>
     882:	88 23       	and	r24, r24
     884:	4a f0       	brmi	.+18     	; 0x898 <__mulsf3_pse+0x7a>
     886:	ee 0f       	add	r30, r30
     888:	ff 1f       	adc	r31, r31
     88a:	bb 1f       	adc	r27, r27
     88c:	66 1f       	adc	r22, r22
     88e:	77 1f       	adc	r23, r23
     890:	88 1f       	adc	r24, r24
     892:	91 50       	subi	r25, 0x01	; 1
     894:	50 40       	sbci	r21, 0x00	; 0
     896:	a9 f7       	brne	.-22     	; 0x882 <__mulsf3_pse+0x64>
     898:	9e 3f       	cpi	r25, 0xFE	; 254
     89a:	51 05       	cpc	r21, r1
     89c:	70 f0       	brcs	.+28     	; 0x8ba <__mulsf3_pse+0x9c>
     89e:	60 cf       	rjmp	.-320    	; 0x760 <__fp_inf>
     8a0:	aa cf       	rjmp	.-172    	; 0x7f6 <__fp_szero>
     8a2:	5f 3f       	cpi	r21, 0xFF	; 255
     8a4:	ec f3       	brlt	.-6      	; 0x8a0 <__mulsf3_pse+0x82>
     8a6:	98 3e       	cpi	r25, 0xE8	; 232
     8a8:	dc f3       	brlt	.-10     	; 0x8a0 <__mulsf3_pse+0x82>
     8aa:	86 95       	lsr	r24
     8ac:	77 95       	ror	r23
     8ae:	67 95       	ror	r22
     8b0:	b7 95       	ror	r27
     8b2:	f7 95       	ror	r31
     8b4:	e7 95       	ror	r30
     8b6:	9f 5f       	subi	r25, 0xFF	; 255
     8b8:	c1 f7       	brne	.-16     	; 0x8aa <__mulsf3_pse+0x8c>
     8ba:	fe 2b       	or	r31, r30
     8bc:	88 0f       	add	r24, r24
     8be:	91 1d       	adc	r25, r1
     8c0:	96 95       	lsr	r25
     8c2:	87 95       	ror	r24
     8c4:	97 f9       	bld	r25, 7
     8c6:	08 95       	ret

000008c8 <malloc>:
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	82 30       	cpi	r24, 0x02	; 2
     8ce:	91 05       	cpc	r25, r1
     8d0:	10 f4       	brcc	.+4      	; 0x8d6 <malloc+0xe>
     8d2:	82 e0       	ldi	r24, 0x02	; 2
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	e0 91 82 03 	lds	r30, 0x0382
     8da:	f0 91 83 03 	lds	r31, 0x0383
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	a0 e0       	ldi	r26, 0x00	; 0
     8e4:	b0 e0       	ldi	r27, 0x00	; 0
     8e6:	30 97       	sbiw	r30, 0x00	; 0
     8e8:	39 f1       	breq	.+78     	; 0x938 <malloc+0x70>
     8ea:	40 81       	ld	r20, Z
     8ec:	51 81       	ldd	r21, Z+1	; 0x01
     8ee:	48 17       	cp	r20, r24
     8f0:	59 07       	cpc	r21, r25
     8f2:	b8 f0       	brcs	.+46     	; 0x922 <malloc+0x5a>
     8f4:	48 17       	cp	r20, r24
     8f6:	59 07       	cpc	r21, r25
     8f8:	71 f4       	brne	.+28     	; 0x916 <malloc+0x4e>
     8fa:	82 81       	ldd	r24, Z+2	; 0x02
     8fc:	93 81       	ldd	r25, Z+3	; 0x03
     8fe:	10 97       	sbiw	r26, 0x00	; 0
     900:	29 f0       	breq	.+10     	; 0x90c <malloc+0x44>
     902:	13 96       	adiw	r26, 0x03	; 3
     904:	9c 93       	st	X, r25
     906:	8e 93       	st	-X, r24
     908:	12 97       	sbiw	r26, 0x02	; 2
     90a:	2c c0       	rjmp	.+88     	; 0x964 <malloc+0x9c>
     90c:	90 93 83 03 	sts	0x0383, r25
     910:	80 93 82 03 	sts	0x0382, r24
     914:	27 c0       	rjmp	.+78     	; 0x964 <malloc+0x9c>
     916:	21 15       	cp	r18, r1
     918:	31 05       	cpc	r19, r1
     91a:	31 f0       	breq	.+12     	; 0x928 <malloc+0x60>
     91c:	42 17       	cp	r20, r18
     91e:	53 07       	cpc	r21, r19
     920:	18 f0       	brcs	.+6      	; 0x928 <malloc+0x60>
     922:	a9 01       	movw	r20, r18
     924:	db 01       	movw	r26, r22
     926:	01 c0       	rjmp	.+2      	; 0x92a <malloc+0x62>
     928:	ef 01       	movw	r28, r30
     92a:	9a 01       	movw	r18, r20
     92c:	bd 01       	movw	r22, r26
     92e:	df 01       	movw	r26, r30
     930:	02 80       	ldd	r0, Z+2	; 0x02
     932:	f3 81       	ldd	r31, Z+3	; 0x03
     934:	e0 2d       	mov	r30, r0
     936:	d7 cf       	rjmp	.-82     	; 0x8e6 <malloc+0x1e>
     938:	21 15       	cp	r18, r1
     93a:	31 05       	cpc	r19, r1
     93c:	f9 f0       	breq	.+62     	; 0x97c <malloc+0xb4>
     93e:	28 1b       	sub	r18, r24
     940:	39 0b       	sbc	r19, r25
     942:	24 30       	cpi	r18, 0x04	; 4
     944:	31 05       	cpc	r19, r1
     946:	80 f4       	brcc	.+32     	; 0x968 <malloc+0xa0>
     948:	8a 81       	ldd	r24, Y+2	; 0x02
     94a:	9b 81       	ldd	r25, Y+3	; 0x03
     94c:	61 15       	cp	r22, r1
     94e:	71 05       	cpc	r23, r1
     950:	21 f0       	breq	.+8      	; 0x95a <malloc+0x92>
     952:	fb 01       	movw	r30, r22
     954:	93 83       	std	Z+3, r25	; 0x03
     956:	82 83       	std	Z+2, r24	; 0x02
     958:	04 c0       	rjmp	.+8      	; 0x962 <malloc+0x9a>
     95a:	90 93 83 03 	sts	0x0383, r25
     95e:	80 93 82 03 	sts	0x0382, r24
     962:	fe 01       	movw	r30, r28
     964:	32 96       	adiw	r30, 0x02	; 2
     966:	44 c0       	rjmp	.+136    	; 0x9f0 <malloc+0x128>
     968:	fe 01       	movw	r30, r28
     96a:	e2 0f       	add	r30, r18
     96c:	f3 1f       	adc	r31, r19
     96e:	81 93       	st	Z+, r24
     970:	91 93       	st	Z+, r25
     972:	22 50       	subi	r18, 0x02	; 2
     974:	31 09       	sbc	r19, r1
     976:	39 83       	std	Y+1, r19	; 0x01
     978:	28 83       	st	Y, r18
     97a:	3a c0       	rjmp	.+116    	; 0x9f0 <malloc+0x128>
     97c:	20 91 80 03 	lds	r18, 0x0380
     980:	30 91 81 03 	lds	r19, 0x0381
     984:	23 2b       	or	r18, r19
     986:	41 f4       	brne	.+16     	; 0x998 <malloc+0xd0>
     988:	20 91 02 01 	lds	r18, 0x0102
     98c:	30 91 03 01 	lds	r19, 0x0103
     990:	30 93 81 03 	sts	0x0381, r19
     994:	20 93 80 03 	sts	0x0380, r18
     998:	20 91 00 01 	lds	r18, 0x0100
     99c:	30 91 01 01 	lds	r19, 0x0101
     9a0:	21 15       	cp	r18, r1
     9a2:	31 05       	cpc	r19, r1
     9a4:	41 f4       	brne	.+16     	; 0x9b6 <malloc+0xee>
     9a6:	2d b7       	in	r18, 0x3d	; 61
     9a8:	3e b7       	in	r19, 0x3e	; 62
     9aa:	40 91 04 01 	lds	r20, 0x0104
     9ae:	50 91 05 01 	lds	r21, 0x0105
     9b2:	24 1b       	sub	r18, r20
     9b4:	35 0b       	sbc	r19, r21
     9b6:	e0 91 80 03 	lds	r30, 0x0380
     9ba:	f0 91 81 03 	lds	r31, 0x0381
     9be:	e2 17       	cp	r30, r18
     9c0:	f3 07       	cpc	r31, r19
     9c2:	a0 f4       	brcc	.+40     	; 0x9ec <malloc+0x124>
     9c4:	2e 1b       	sub	r18, r30
     9c6:	3f 0b       	sbc	r19, r31
     9c8:	28 17       	cp	r18, r24
     9ca:	39 07       	cpc	r19, r25
     9cc:	78 f0       	brcs	.+30     	; 0x9ec <malloc+0x124>
     9ce:	ac 01       	movw	r20, r24
     9d0:	4e 5f       	subi	r20, 0xFE	; 254
     9d2:	5f 4f       	sbci	r21, 0xFF	; 255
     9d4:	24 17       	cp	r18, r20
     9d6:	35 07       	cpc	r19, r21
     9d8:	48 f0       	brcs	.+18     	; 0x9ec <malloc+0x124>
     9da:	4e 0f       	add	r20, r30
     9dc:	5f 1f       	adc	r21, r31
     9de:	50 93 81 03 	sts	0x0381, r21
     9e2:	40 93 80 03 	sts	0x0380, r20
     9e6:	81 93       	st	Z+, r24
     9e8:	91 93       	st	Z+, r25
     9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <malloc+0x128>
     9ec:	e0 e0       	ldi	r30, 0x00	; 0
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	cf 01       	movw	r24, r30
     9f2:	df 91       	pop	r29
     9f4:	cf 91       	pop	r28
     9f6:	08 95       	ret

000009f8 <free>:
     9f8:	cf 93       	push	r28
     9fa:	df 93       	push	r29
     9fc:	00 97       	sbiw	r24, 0x00	; 0
     9fe:	09 f4       	brne	.+2      	; 0xa02 <free+0xa>
     a00:	87 c0       	rjmp	.+270    	; 0xb10 <free+0x118>
     a02:	fc 01       	movw	r30, r24
     a04:	32 97       	sbiw	r30, 0x02	; 2
     a06:	13 82       	std	Z+3, r1	; 0x03
     a08:	12 82       	std	Z+2, r1	; 0x02
     a0a:	c0 91 82 03 	lds	r28, 0x0382
     a0e:	d0 91 83 03 	lds	r29, 0x0383
     a12:	20 97       	sbiw	r28, 0x00	; 0
     a14:	81 f4       	brne	.+32     	; 0xa36 <free+0x3e>
     a16:	20 81       	ld	r18, Z
     a18:	31 81       	ldd	r19, Z+1	; 0x01
     a1a:	28 0f       	add	r18, r24
     a1c:	39 1f       	adc	r19, r25
     a1e:	80 91 80 03 	lds	r24, 0x0380
     a22:	90 91 81 03 	lds	r25, 0x0381
     a26:	82 17       	cp	r24, r18
     a28:	93 07       	cpc	r25, r19
     a2a:	79 f5       	brne	.+94     	; 0xa8a <free+0x92>
     a2c:	f0 93 81 03 	sts	0x0381, r31
     a30:	e0 93 80 03 	sts	0x0380, r30
     a34:	6d c0       	rjmp	.+218    	; 0xb10 <free+0x118>
     a36:	de 01       	movw	r26, r28
     a38:	20 e0       	ldi	r18, 0x00	; 0
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	ae 17       	cp	r26, r30
     a3e:	bf 07       	cpc	r27, r31
     a40:	50 f4       	brcc	.+20     	; 0xa56 <free+0x5e>
     a42:	12 96       	adiw	r26, 0x02	; 2
     a44:	4d 91       	ld	r20, X+
     a46:	5c 91       	ld	r21, X
     a48:	13 97       	sbiw	r26, 0x03	; 3
     a4a:	9d 01       	movw	r18, r26
     a4c:	41 15       	cp	r20, r1
     a4e:	51 05       	cpc	r21, r1
     a50:	09 f1       	breq	.+66     	; 0xa94 <free+0x9c>
     a52:	da 01       	movw	r26, r20
     a54:	f3 cf       	rjmp	.-26     	; 0xa3c <free+0x44>
     a56:	b3 83       	std	Z+3, r27	; 0x03
     a58:	a2 83       	std	Z+2, r26	; 0x02
     a5a:	40 81       	ld	r20, Z
     a5c:	51 81       	ldd	r21, Z+1	; 0x01
     a5e:	84 0f       	add	r24, r20
     a60:	95 1f       	adc	r25, r21
     a62:	8a 17       	cp	r24, r26
     a64:	9b 07       	cpc	r25, r27
     a66:	71 f4       	brne	.+28     	; 0xa84 <free+0x8c>
     a68:	8d 91       	ld	r24, X+
     a6a:	9c 91       	ld	r25, X
     a6c:	11 97       	sbiw	r26, 0x01	; 1
     a6e:	84 0f       	add	r24, r20
     a70:	95 1f       	adc	r25, r21
     a72:	02 96       	adiw	r24, 0x02	; 2
     a74:	91 83       	std	Z+1, r25	; 0x01
     a76:	80 83       	st	Z, r24
     a78:	12 96       	adiw	r26, 0x02	; 2
     a7a:	8d 91       	ld	r24, X+
     a7c:	9c 91       	ld	r25, X
     a7e:	13 97       	sbiw	r26, 0x03	; 3
     a80:	93 83       	std	Z+3, r25	; 0x03
     a82:	82 83       	std	Z+2, r24	; 0x02
     a84:	21 15       	cp	r18, r1
     a86:	31 05       	cpc	r19, r1
     a88:	29 f4       	brne	.+10     	; 0xa94 <free+0x9c>
     a8a:	f0 93 83 03 	sts	0x0383, r31
     a8e:	e0 93 82 03 	sts	0x0382, r30
     a92:	3e c0       	rjmp	.+124    	; 0xb10 <free+0x118>
     a94:	d9 01       	movw	r26, r18
     a96:	13 96       	adiw	r26, 0x03	; 3
     a98:	fc 93       	st	X, r31
     a9a:	ee 93       	st	-X, r30
     a9c:	12 97       	sbiw	r26, 0x02	; 2
     a9e:	4d 91       	ld	r20, X+
     aa0:	5d 91       	ld	r21, X+
     aa2:	a4 0f       	add	r26, r20
     aa4:	b5 1f       	adc	r27, r21
     aa6:	ea 17       	cp	r30, r26
     aa8:	fb 07       	cpc	r31, r27
     aaa:	79 f4       	brne	.+30     	; 0xaca <free+0xd2>
     aac:	80 81       	ld	r24, Z
     aae:	91 81       	ldd	r25, Z+1	; 0x01
     ab0:	84 0f       	add	r24, r20
     ab2:	95 1f       	adc	r25, r21
     ab4:	02 96       	adiw	r24, 0x02	; 2
     ab6:	d9 01       	movw	r26, r18
     ab8:	11 96       	adiw	r26, 0x01	; 1
     aba:	9c 93       	st	X, r25
     abc:	8e 93       	st	-X, r24
     abe:	82 81       	ldd	r24, Z+2	; 0x02
     ac0:	93 81       	ldd	r25, Z+3	; 0x03
     ac2:	13 96       	adiw	r26, 0x03	; 3
     ac4:	9c 93       	st	X, r25
     ac6:	8e 93       	st	-X, r24
     ac8:	12 97       	sbiw	r26, 0x02	; 2
     aca:	e0 e0       	ldi	r30, 0x00	; 0
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	8a 81       	ldd	r24, Y+2	; 0x02
     ad0:	9b 81       	ldd	r25, Y+3	; 0x03
     ad2:	00 97       	sbiw	r24, 0x00	; 0
     ad4:	19 f0       	breq	.+6      	; 0xadc <free+0xe4>
     ad6:	fe 01       	movw	r30, r28
     ad8:	ec 01       	movw	r28, r24
     ada:	f9 cf       	rjmp	.-14     	; 0xace <free+0xd6>
     adc:	ce 01       	movw	r24, r28
     ade:	02 96       	adiw	r24, 0x02	; 2
     ae0:	28 81       	ld	r18, Y
     ae2:	39 81       	ldd	r19, Y+1	; 0x01
     ae4:	82 0f       	add	r24, r18
     ae6:	93 1f       	adc	r25, r19
     ae8:	20 91 80 03 	lds	r18, 0x0380
     aec:	30 91 81 03 	lds	r19, 0x0381
     af0:	28 17       	cp	r18, r24
     af2:	39 07       	cpc	r19, r25
     af4:	69 f4       	brne	.+26     	; 0xb10 <free+0x118>
     af6:	30 97       	sbiw	r30, 0x00	; 0
     af8:	29 f4       	brne	.+10     	; 0xb04 <free+0x10c>
     afa:	10 92 83 03 	sts	0x0383, r1
     afe:	10 92 82 03 	sts	0x0382, r1
     b02:	02 c0       	rjmp	.+4      	; 0xb08 <free+0x110>
     b04:	13 82       	std	Z+3, r1	; 0x03
     b06:	12 82       	std	Z+2, r1	; 0x02
     b08:	d0 93 81 03 	sts	0x0381, r29
     b0c:	c0 93 80 03 	sts	0x0380, r28
     b10:	df 91       	pop	r29
     b12:	cf 91       	pop	r28
     b14:	08 95       	ret

00000b16 <fdevopen>:
     b16:	0f 93       	push	r16
     b18:	1f 93       	push	r17
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	ec 01       	movw	r28, r24
     b20:	8b 01       	movw	r16, r22
     b22:	00 97       	sbiw	r24, 0x00	; 0
     b24:	31 f4       	brne	.+12     	; 0xb32 <fdevopen+0x1c>
     b26:	61 15       	cp	r22, r1
     b28:	71 05       	cpc	r23, r1
     b2a:	19 f4       	brne	.+6      	; 0xb32 <fdevopen+0x1c>
     b2c:	80 e0       	ldi	r24, 0x00	; 0
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	37 c0       	rjmp	.+110    	; 0xba0 <fdevopen+0x8a>
     b32:	6e e0       	ldi	r22, 0x0E	; 14
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	81 e0       	ldi	r24, 0x01	; 1
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	38 d2       	rcall	.+1136   	; 0xfac <calloc>
     b3c:	fc 01       	movw	r30, r24
     b3e:	00 97       	sbiw	r24, 0x00	; 0
     b40:	a9 f3       	breq	.-22     	; 0xb2c <fdevopen+0x16>
     b42:	80 e8       	ldi	r24, 0x80	; 128
     b44:	83 83       	std	Z+3, r24	; 0x03
     b46:	01 15       	cp	r16, r1
     b48:	11 05       	cpc	r17, r1
     b4a:	71 f0       	breq	.+28     	; 0xb68 <fdevopen+0x52>
     b4c:	13 87       	std	Z+11, r17	; 0x0b
     b4e:	02 87       	std	Z+10, r16	; 0x0a
     b50:	81 e8       	ldi	r24, 0x81	; 129
     b52:	83 83       	std	Z+3, r24	; 0x03
     b54:	80 91 84 03 	lds	r24, 0x0384
     b58:	90 91 85 03 	lds	r25, 0x0385
     b5c:	89 2b       	or	r24, r25
     b5e:	21 f4       	brne	.+8      	; 0xb68 <fdevopen+0x52>
     b60:	f0 93 85 03 	sts	0x0385, r31
     b64:	e0 93 84 03 	sts	0x0384, r30
     b68:	20 97       	sbiw	r28, 0x00	; 0
     b6a:	c9 f0       	breq	.+50     	; 0xb9e <fdevopen+0x88>
     b6c:	d1 87       	std	Z+9, r29	; 0x09
     b6e:	c0 87       	std	Z+8, r28	; 0x08
     b70:	83 81       	ldd	r24, Z+3	; 0x03
     b72:	82 60       	ori	r24, 0x02	; 2
     b74:	83 83       	std	Z+3, r24	; 0x03
     b76:	80 91 86 03 	lds	r24, 0x0386
     b7a:	90 91 87 03 	lds	r25, 0x0387
     b7e:	89 2b       	or	r24, r25
     b80:	71 f4       	brne	.+28     	; 0xb9e <fdevopen+0x88>
     b82:	f0 93 87 03 	sts	0x0387, r31
     b86:	e0 93 86 03 	sts	0x0386, r30
     b8a:	80 91 88 03 	lds	r24, 0x0388
     b8e:	90 91 89 03 	lds	r25, 0x0389
     b92:	89 2b       	or	r24, r25
     b94:	21 f4       	brne	.+8      	; 0xb9e <fdevopen+0x88>
     b96:	f0 93 89 03 	sts	0x0389, r31
     b9a:	e0 93 88 03 	sts	0x0388, r30
     b9e:	cf 01       	movw	r24, r30
     ba0:	df 91       	pop	r29
     ba2:	cf 91       	pop	r28
     ba4:	1f 91       	pop	r17
     ba6:	0f 91       	pop	r16
     ba8:	08 95       	ret

00000baa <printf>:
     baa:	a0 e0       	ldi	r26, 0x00	; 0
     bac:	b0 e0       	ldi	r27, 0x00	; 0
     bae:	ea ed       	ldi	r30, 0xDA	; 218
     bb0:	f5 e0       	ldi	r31, 0x05	; 5
     bb2:	d3 c2       	rjmp	.+1446   	; 0x115a <__prologue_saves__+0x20>
     bb4:	fe 01       	movw	r30, r28
     bb6:	35 96       	adiw	r30, 0x05	; 5
     bb8:	61 91       	ld	r22, Z+
     bba:	71 91       	ld	r23, Z+
     bbc:	af 01       	movw	r20, r30
     bbe:	80 91 86 03 	lds	r24, 0x0386
     bc2:	90 91 87 03 	lds	r25, 0x0387
     bc6:	2f d0       	rcall	.+94     	; 0xc26 <vfprintf>
     bc8:	e2 e0       	ldi	r30, 0x02	; 2
     bca:	e3 c2       	rjmp	.+1478   	; 0x1192 <__epilogue_restores__+0x20>

00000bcc <puts>:
     bcc:	0f 93       	push	r16
     bce:	1f 93       	push	r17
     bd0:	cf 93       	push	r28
     bd2:	df 93       	push	r29
     bd4:	e0 91 86 03 	lds	r30, 0x0386
     bd8:	f0 91 87 03 	lds	r31, 0x0387
     bdc:	23 81       	ldd	r18, Z+3	; 0x03
     bde:	21 ff       	sbrs	r18, 1
     be0:	1b c0       	rjmp	.+54     	; 0xc18 <puts+0x4c>
     be2:	ec 01       	movw	r28, r24
     be4:	00 e0       	ldi	r16, 0x00	; 0
     be6:	10 e0       	ldi	r17, 0x00	; 0
     be8:	89 91       	ld	r24, Y+
     bea:	60 91 86 03 	lds	r22, 0x0386
     bee:	70 91 87 03 	lds	r23, 0x0387
     bf2:	db 01       	movw	r26, r22
     bf4:	18 96       	adiw	r26, 0x08	; 8
     bf6:	ed 91       	ld	r30, X+
     bf8:	fc 91       	ld	r31, X
     bfa:	19 97       	sbiw	r26, 0x09	; 9
     bfc:	88 23       	and	r24, r24
     bfe:	31 f0       	breq	.+12     	; 0xc0c <puts+0x40>
     c00:	09 95       	icall
     c02:	89 2b       	or	r24, r25
     c04:	89 f3       	breq	.-30     	; 0xbe8 <puts+0x1c>
     c06:	0f ef       	ldi	r16, 0xFF	; 255
     c08:	1f ef       	ldi	r17, 0xFF	; 255
     c0a:	ee cf       	rjmp	.-36     	; 0xbe8 <puts+0x1c>
     c0c:	8a e0       	ldi	r24, 0x0A	; 10
     c0e:	09 95       	icall
     c10:	89 2b       	or	r24, r25
     c12:	11 f4       	brne	.+4      	; 0xc18 <puts+0x4c>
     c14:	c8 01       	movw	r24, r16
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <puts+0x50>
     c18:	8f ef       	ldi	r24, 0xFF	; 255
     c1a:	9f ef       	ldi	r25, 0xFF	; 255
     c1c:	df 91       	pop	r29
     c1e:	cf 91       	pop	r28
     c20:	1f 91       	pop	r17
     c22:	0f 91       	pop	r16
     c24:	08 95       	ret

00000c26 <vfprintf>:
     c26:	ac e0       	ldi	r26, 0x0C	; 12
     c28:	b0 e0       	ldi	r27, 0x00	; 0
     c2a:	e8 e1       	ldi	r30, 0x18	; 24
     c2c:	f6 e0       	ldi	r31, 0x06	; 6
     c2e:	85 c2       	rjmp	.+1290   	; 0x113a <__prologue_saves__>
     c30:	7c 01       	movw	r14, r24
     c32:	6b 01       	movw	r12, r22
     c34:	8a 01       	movw	r16, r20
     c36:	fc 01       	movw	r30, r24
     c38:	17 82       	std	Z+7, r1	; 0x07
     c3a:	16 82       	std	Z+6, r1	; 0x06
     c3c:	83 81       	ldd	r24, Z+3	; 0x03
     c3e:	81 ff       	sbrs	r24, 1
     c40:	b0 c1       	rjmp	.+864    	; 0xfa2 <vfprintf+0x37c>
     c42:	ce 01       	movw	r24, r28
     c44:	01 96       	adiw	r24, 0x01	; 1
     c46:	4c 01       	movw	r8, r24
     c48:	f7 01       	movw	r30, r14
     c4a:	93 81       	ldd	r25, Z+3	; 0x03
     c4c:	f6 01       	movw	r30, r12
     c4e:	93 fd       	sbrc	r25, 3
     c50:	85 91       	lpm	r24, Z+
     c52:	93 ff       	sbrs	r25, 3
     c54:	81 91       	ld	r24, Z+
     c56:	6f 01       	movw	r12, r30
     c58:	88 23       	and	r24, r24
     c5a:	09 f4       	brne	.+2      	; 0xc5e <vfprintf+0x38>
     c5c:	9e c1       	rjmp	.+828    	; 0xf9a <vfprintf+0x374>
     c5e:	85 32       	cpi	r24, 0x25	; 37
     c60:	39 f4       	brne	.+14     	; 0xc70 <vfprintf+0x4a>
     c62:	93 fd       	sbrc	r25, 3
     c64:	85 91       	lpm	r24, Z+
     c66:	93 ff       	sbrs	r25, 3
     c68:	81 91       	ld	r24, Z+
     c6a:	6f 01       	movw	r12, r30
     c6c:	85 32       	cpi	r24, 0x25	; 37
     c6e:	21 f4       	brne	.+8      	; 0xc78 <vfprintf+0x52>
     c70:	b7 01       	movw	r22, r14
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	d2 d1       	rcall	.+932    	; 0x101a <fputc>
     c76:	e8 cf       	rjmp	.-48     	; 0xc48 <vfprintf+0x22>
     c78:	51 2c       	mov	r5, r1
     c7a:	31 2c       	mov	r3, r1
     c7c:	20 e0       	ldi	r18, 0x00	; 0
     c7e:	20 32       	cpi	r18, 0x20	; 32
     c80:	a0 f4       	brcc	.+40     	; 0xcaa <vfprintf+0x84>
     c82:	8b 32       	cpi	r24, 0x2B	; 43
     c84:	69 f0       	breq	.+26     	; 0xca0 <vfprintf+0x7a>
     c86:	30 f4       	brcc	.+12     	; 0xc94 <vfprintf+0x6e>
     c88:	80 32       	cpi	r24, 0x20	; 32
     c8a:	59 f0       	breq	.+22     	; 0xca2 <vfprintf+0x7c>
     c8c:	83 32       	cpi	r24, 0x23	; 35
     c8e:	69 f4       	brne	.+26     	; 0xcaa <vfprintf+0x84>
     c90:	20 61       	ori	r18, 0x10	; 16
     c92:	2c c0       	rjmp	.+88     	; 0xcec <vfprintf+0xc6>
     c94:	8d 32       	cpi	r24, 0x2D	; 45
     c96:	39 f0       	breq	.+14     	; 0xca6 <vfprintf+0x80>
     c98:	80 33       	cpi	r24, 0x30	; 48
     c9a:	39 f4       	brne	.+14     	; 0xcaa <vfprintf+0x84>
     c9c:	21 60       	ori	r18, 0x01	; 1
     c9e:	26 c0       	rjmp	.+76     	; 0xcec <vfprintf+0xc6>
     ca0:	22 60       	ori	r18, 0x02	; 2
     ca2:	24 60       	ori	r18, 0x04	; 4
     ca4:	23 c0       	rjmp	.+70     	; 0xcec <vfprintf+0xc6>
     ca6:	28 60       	ori	r18, 0x08	; 8
     ca8:	21 c0       	rjmp	.+66     	; 0xcec <vfprintf+0xc6>
     caa:	27 fd       	sbrc	r18, 7
     cac:	27 c0       	rjmp	.+78     	; 0xcfc <vfprintf+0xd6>
     cae:	30 ed       	ldi	r19, 0xD0	; 208
     cb0:	38 0f       	add	r19, r24
     cb2:	3a 30       	cpi	r19, 0x0A	; 10
     cb4:	78 f4       	brcc	.+30     	; 0xcd4 <vfprintf+0xae>
     cb6:	26 ff       	sbrs	r18, 6
     cb8:	06 c0       	rjmp	.+12     	; 0xcc6 <vfprintf+0xa0>
     cba:	fa e0       	ldi	r31, 0x0A	; 10
     cbc:	5f 9e       	mul	r5, r31
     cbe:	30 0d       	add	r19, r0
     cc0:	11 24       	eor	r1, r1
     cc2:	53 2e       	mov	r5, r19
     cc4:	13 c0       	rjmp	.+38     	; 0xcec <vfprintf+0xc6>
     cc6:	8a e0       	ldi	r24, 0x0A	; 10
     cc8:	38 9e       	mul	r3, r24
     cca:	30 0d       	add	r19, r0
     ccc:	11 24       	eor	r1, r1
     cce:	33 2e       	mov	r3, r19
     cd0:	20 62       	ori	r18, 0x20	; 32
     cd2:	0c c0       	rjmp	.+24     	; 0xcec <vfprintf+0xc6>
     cd4:	8e 32       	cpi	r24, 0x2E	; 46
     cd6:	21 f4       	brne	.+8      	; 0xce0 <vfprintf+0xba>
     cd8:	26 fd       	sbrc	r18, 6
     cda:	5f c1       	rjmp	.+702    	; 0xf9a <vfprintf+0x374>
     cdc:	20 64       	ori	r18, 0x40	; 64
     cde:	06 c0       	rjmp	.+12     	; 0xcec <vfprintf+0xc6>
     ce0:	8c 36       	cpi	r24, 0x6C	; 108
     ce2:	11 f4       	brne	.+4      	; 0xce8 <vfprintf+0xc2>
     ce4:	20 68       	ori	r18, 0x80	; 128
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <vfprintf+0xc6>
     ce8:	88 36       	cpi	r24, 0x68	; 104
     cea:	41 f4       	brne	.+16     	; 0xcfc <vfprintf+0xd6>
     cec:	f6 01       	movw	r30, r12
     cee:	93 fd       	sbrc	r25, 3
     cf0:	85 91       	lpm	r24, Z+
     cf2:	93 ff       	sbrs	r25, 3
     cf4:	81 91       	ld	r24, Z+
     cf6:	6f 01       	movw	r12, r30
     cf8:	81 11       	cpse	r24, r1
     cfa:	c1 cf       	rjmp	.-126    	; 0xc7e <vfprintf+0x58>
     cfc:	98 2f       	mov	r25, r24
     cfe:	9f 7d       	andi	r25, 0xDF	; 223
     d00:	95 54       	subi	r25, 0x45	; 69
     d02:	93 30       	cpi	r25, 0x03	; 3
     d04:	28 f4       	brcc	.+10     	; 0xd10 <vfprintf+0xea>
     d06:	0c 5f       	subi	r16, 0xFC	; 252
     d08:	1f 4f       	sbci	r17, 0xFF	; 255
     d0a:	ff e3       	ldi	r31, 0x3F	; 63
     d0c:	f9 83       	std	Y+1, r31	; 0x01
     d0e:	0d c0       	rjmp	.+26     	; 0xd2a <vfprintf+0x104>
     d10:	83 36       	cpi	r24, 0x63	; 99
     d12:	31 f0       	breq	.+12     	; 0xd20 <vfprintf+0xfa>
     d14:	83 37       	cpi	r24, 0x73	; 115
     d16:	71 f0       	breq	.+28     	; 0xd34 <vfprintf+0x10e>
     d18:	83 35       	cpi	r24, 0x53	; 83
     d1a:	09 f0       	breq	.+2      	; 0xd1e <vfprintf+0xf8>
     d1c:	57 c0       	rjmp	.+174    	; 0xdcc <vfprintf+0x1a6>
     d1e:	21 c0       	rjmp	.+66     	; 0xd62 <vfprintf+0x13c>
     d20:	f8 01       	movw	r30, r16
     d22:	80 81       	ld	r24, Z
     d24:	89 83       	std	Y+1, r24	; 0x01
     d26:	0e 5f       	subi	r16, 0xFE	; 254
     d28:	1f 4f       	sbci	r17, 0xFF	; 255
     d2a:	44 24       	eor	r4, r4
     d2c:	43 94       	inc	r4
     d2e:	51 2c       	mov	r5, r1
     d30:	54 01       	movw	r10, r8
     d32:	14 c0       	rjmp	.+40     	; 0xd5c <vfprintf+0x136>
     d34:	38 01       	movw	r6, r16
     d36:	f2 e0       	ldi	r31, 0x02	; 2
     d38:	6f 0e       	add	r6, r31
     d3a:	71 1c       	adc	r7, r1
     d3c:	f8 01       	movw	r30, r16
     d3e:	a0 80       	ld	r10, Z
     d40:	b1 80       	ldd	r11, Z+1	; 0x01
     d42:	26 ff       	sbrs	r18, 6
     d44:	03 c0       	rjmp	.+6      	; 0xd4c <vfprintf+0x126>
     d46:	65 2d       	mov	r22, r5
     d48:	70 e0       	ldi	r23, 0x00	; 0
     d4a:	02 c0       	rjmp	.+4      	; 0xd50 <vfprintf+0x12a>
     d4c:	6f ef       	ldi	r22, 0xFF	; 255
     d4e:	7f ef       	ldi	r23, 0xFF	; 255
     d50:	c5 01       	movw	r24, r10
     d52:	2c 87       	std	Y+12, r18	; 0x0c
     d54:	57 d1       	rcall	.+686    	; 0x1004 <strnlen>
     d56:	2c 01       	movw	r4, r24
     d58:	83 01       	movw	r16, r6
     d5a:	2c 85       	ldd	r18, Y+12	; 0x0c
     d5c:	2f 77       	andi	r18, 0x7F	; 127
     d5e:	22 2e       	mov	r2, r18
     d60:	16 c0       	rjmp	.+44     	; 0xd8e <vfprintf+0x168>
     d62:	38 01       	movw	r6, r16
     d64:	f2 e0       	ldi	r31, 0x02	; 2
     d66:	6f 0e       	add	r6, r31
     d68:	71 1c       	adc	r7, r1
     d6a:	f8 01       	movw	r30, r16
     d6c:	a0 80       	ld	r10, Z
     d6e:	b1 80       	ldd	r11, Z+1	; 0x01
     d70:	26 ff       	sbrs	r18, 6
     d72:	03 c0       	rjmp	.+6      	; 0xd7a <vfprintf+0x154>
     d74:	65 2d       	mov	r22, r5
     d76:	70 e0       	ldi	r23, 0x00	; 0
     d78:	02 c0       	rjmp	.+4      	; 0xd7e <vfprintf+0x158>
     d7a:	6f ef       	ldi	r22, 0xFF	; 255
     d7c:	7f ef       	ldi	r23, 0xFF	; 255
     d7e:	c5 01       	movw	r24, r10
     d80:	2c 87       	std	Y+12, r18	; 0x0c
     d82:	2e d1       	rcall	.+604    	; 0xfe0 <strnlen_P>
     d84:	2c 01       	movw	r4, r24
     d86:	2c 85       	ldd	r18, Y+12	; 0x0c
     d88:	20 68       	ori	r18, 0x80	; 128
     d8a:	22 2e       	mov	r2, r18
     d8c:	83 01       	movw	r16, r6
     d8e:	23 fc       	sbrc	r2, 3
     d90:	19 c0       	rjmp	.+50     	; 0xdc4 <vfprintf+0x19e>
     d92:	83 2d       	mov	r24, r3
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	48 16       	cp	r4, r24
     d98:	59 06       	cpc	r5, r25
     d9a:	a0 f4       	brcc	.+40     	; 0xdc4 <vfprintf+0x19e>
     d9c:	b7 01       	movw	r22, r14
     d9e:	80 e2       	ldi	r24, 0x20	; 32
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	3b d1       	rcall	.+630    	; 0x101a <fputc>
     da4:	3a 94       	dec	r3
     da6:	f5 cf       	rjmp	.-22     	; 0xd92 <vfprintf+0x16c>
     da8:	f5 01       	movw	r30, r10
     daa:	27 fc       	sbrc	r2, 7
     dac:	85 91       	lpm	r24, Z+
     dae:	27 fe       	sbrs	r2, 7
     db0:	81 91       	ld	r24, Z+
     db2:	5f 01       	movw	r10, r30
     db4:	b7 01       	movw	r22, r14
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	30 d1       	rcall	.+608    	; 0x101a <fputc>
     dba:	31 10       	cpse	r3, r1
     dbc:	3a 94       	dec	r3
     dbe:	f1 e0       	ldi	r31, 0x01	; 1
     dc0:	4f 1a       	sub	r4, r31
     dc2:	51 08       	sbc	r5, r1
     dc4:	41 14       	cp	r4, r1
     dc6:	51 04       	cpc	r5, r1
     dc8:	79 f7       	brne	.-34     	; 0xda8 <vfprintf+0x182>
     dca:	de c0       	rjmp	.+444    	; 0xf88 <vfprintf+0x362>
     dcc:	84 36       	cpi	r24, 0x64	; 100
     dce:	11 f0       	breq	.+4      	; 0xdd4 <vfprintf+0x1ae>
     dd0:	89 36       	cpi	r24, 0x69	; 105
     dd2:	31 f5       	brne	.+76     	; 0xe20 <vfprintf+0x1fa>
     dd4:	f8 01       	movw	r30, r16
     dd6:	27 ff       	sbrs	r18, 7
     dd8:	07 c0       	rjmp	.+14     	; 0xde8 <vfprintf+0x1c2>
     dda:	60 81       	ld	r22, Z
     ddc:	71 81       	ldd	r23, Z+1	; 0x01
     dde:	82 81       	ldd	r24, Z+2	; 0x02
     de0:	93 81       	ldd	r25, Z+3	; 0x03
     de2:	0c 5f       	subi	r16, 0xFC	; 252
     de4:	1f 4f       	sbci	r17, 0xFF	; 255
     de6:	08 c0       	rjmp	.+16     	; 0xdf8 <vfprintf+0x1d2>
     de8:	60 81       	ld	r22, Z
     dea:	71 81       	ldd	r23, Z+1	; 0x01
     dec:	88 27       	eor	r24, r24
     dee:	77 fd       	sbrc	r23, 7
     df0:	80 95       	com	r24
     df2:	98 2f       	mov	r25, r24
     df4:	0e 5f       	subi	r16, 0xFE	; 254
     df6:	1f 4f       	sbci	r17, 0xFF	; 255
     df8:	2f 76       	andi	r18, 0x6F	; 111
     dfa:	b2 2e       	mov	r11, r18
     dfc:	97 ff       	sbrs	r25, 7
     dfe:	09 c0       	rjmp	.+18     	; 0xe12 <vfprintf+0x1ec>
     e00:	90 95       	com	r25
     e02:	80 95       	com	r24
     e04:	70 95       	com	r23
     e06:	61 95       	neg	r22
     e08:	7f 4f       	sbci	r23, 0xFF	; 255
     e0a:	8f 4f       	sbci	r24, 0xFF	; 255
     e0c:	9f 4f       	sbci	r25, 0xFF	; 255
     e0e:	20 68       	ori	r18, 0x80	; 128
     e10:	b2 2e       	mov	r11, r18
     e12:	2a e0       	ldi	r18, 0x0A	; 10
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	a4 01       	movw	r20, r8
     e18:	32 d1       	rcall	.+612    	; 0x107e <__ultoa_invert>
     e1a:	a8 2e       	mov	r10, r24
     e1c:	a8 18       	sub	r10, r8
     e1e:	43 c0       	rjmp	.+134    	; 0xea6 <vfprintf+0x280>
     e20:	85 37       	cpi	r24, 0x75	; 117
     e22:	29 f4       	brne	.+10     	; 0xe2e <vfprintf+0x208>
     e24:	2f 7e       	andi	r18, 0xEF	; 239
     e26:	b2 2e       	mov	r11, r18
     e28:	2a e0       	ldi	r18, 0x0A	; 10
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	25 c0       	rjmp	.+74     	; 0xe78 <vfprintf+0x252>
     e2e:	f2 2f       	mov	r31, r18
     e30:	f9 7f       	andi	r31, 0xF9	; 249
     e32:	bf 2e       	mov	r11, r31
     e34:	8f 36       	cpi	r24, 0x6F	; 111
     e36:	c1 f0       	breq	.+48     	; 0xe68 <vfprintf+0x242>
     e38:	18 f4       	brcc	.+6      	; 0xe40 <vfprintf+0x21a>
     e3a:	88 35       	cpi	r24, 0x58	; 88
     e3c:	79 f0       	breq	.+30     	; 0xe5c <vfprintf+0x236>
     e3e:	ad c0       	rjmp	.+346    	; 0xf9a <vfprintf+0x374>
     e40:	80 37       	cpi	r24, 0x70	; 112
     e42:	19 f0       	breq	.+6      	; 0xe4a <vfprintf+0x224>
     e44:	88 37       	cpi	r24, 0x78	; 120
     e46:	21 f0       	breq	.+8      	; 0xe50 <vfprintf+0x22a>
     e48:	a8 c0       	rjmp	.+336    	; 0xf9a <vfprintf+0x374>
     e4a:	2f 2f       	mov	r18, r31
     e4c:	20 61       	ori	r18, 0x10	; 16
     e4e:	b2 2e       	mov	r11, r18
     e50:	b4 fe       	sbrs	r11, 4
     e52:	0d c0       	rjmp	.+26     	; 0xe6e <vfprintf+0x248>
     e54:	8b 2d       	mov	r24, r11
     e56:	84 60       	ori	r24, 0x04	; 4
     e58:	b8 2e       	mov	r11, r24
     e5a:	09 c0       	rjmp	.+18     	; 0xe6e <vfprintf+0x248>
     e5c:	24 ff       	sbrs	r18, 4
     e5e:	0a c0       	rjmp	.+20     	; 0xe74 <vfprintf+0x24e>
     e60:	9f 2f       	mov	r25, r31
     e62:	96 60       	ori	r25, 0x06	; 6
     e64:	b9 2e       	mov	r11, r25
     e66:	06 c0       	rjmp	.+12     	; 0xe74 <vfprintf+0x24e>
     e68:	28 e0       	ldi	r18, 0x08	; 8
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	05 c0       	rjmp	.+10     	; 0xe78 <vfprintf+0x252>
     e6e:	20 e1       	ldi	r18, 0x10	; 16
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x252>
     e74:	20 e1       	ldi	r18, 0x10	; 16
     e76:	32 e0       	ldi	r19, 0x02	; 2
     e78:	f8 01       	movw	r30, r16
     e7a:	b7 fe       	sbrs	r11, 7
     e7c:	07 c0       	rjmp	.+14     	; 0xe8c <vfprintf+0x266>
     e7e:	60 81       	ld	r22, Z
     e80:	71 81       	ldd	r23, Z+1	; 0x01
     e82:	82 81       	ldd	r24, Z+2	; 0x02
     e84:	93 81       	ldd	r25, Z+3	; 0x03
     e86:	0c 5f       	subi	r16, 0xFC	; 252
     e88:	1f 4f       	sbci	r17, 0xFF	; 255
     e8a:	06 c0       	rjmp	.+12     	; 0xe98 <vfprintf+0x272>
     e8c:	60 81       	ld	r22, Z
     e8e:	71 81       	ldd	r23, Z+1	; 0x01
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	0e 5f       	subi	r16, 0xFE	; 254
     e96:	1f 4f       	sbci	r17, 0xFF	; 255
     e98:	a4 01       	movw	r20, r8
     e9a:	f1 d0       	rcall	.+482    	; 0x107e <__ultoa_invert>
     e9c:	a8 2e       	mov	r10, r24
     e9e:	a8 18       	sub	r10, r8
     ea0:	fb 2d       	mov	r31, r11
     ea2:	ff 77       	andi	r31, 0x7F	; 127
     ea4:	bf 2e       	mov	r11, r31
     ea6:	b6 fe       	sbrs	r11, 6
     ea8:	0b c0       	rjmp	.+22     	; 0xec0 <vfprintf+0x29a>
     eaa:	2b 2d       	mov	r18, r11
     eac:	2e 7f       	andi	r18, 0xFE	; 254
     eae:	a5 14       	cp	r10, r5
     eb0:	50 f4       	brcc	.+20     	; 0xec6 <vfprintf+0x2a0>
     eb2:	b4 fe       	sbrs	r11, 4
     eb4:	0a c0       	rjmp	.+20     	; 0xeca <vfprintf+0x2a4>
     eb6:	b2 fc       	sbrc	r11, 2
     eb8:	08 c0       	rjmp	.+16     	; 0xeca <vfprintf+0x2a4>
     eba:	2b 2d       	mov	r18, r11
     ebc:	2e 7e       	andi	r18, 0xEE	; 238
     ebe:	05 c0       	rjmp	.+10     	; 0xeca <vfprintf+0x2a4>
     ec0:	7a 2c       	mov	r7, r10
     ec2:	2b 2d       	mov	r18, r11
     ec4:	03 c0       	rjmp	.+6      	; 0xecc <vfprintf+0x2a6>
     ec6:	7a 2c       	mov	r7, r10
     ec8:	01 c0       	rjmp	.+2      	; 0xecc <vfprintf+0x2a6>
     eca:	75 2c       	mov	r7, r5
     ecc:	24 ff       	sbrs	r18, 4
     ece:	0d c0       	rjmp	.+26     	; 0xeea <vfprintf+0x2c4>
     ed0:	fe 01       	movw	r30, r28
     ed2:	ea 0d       	add	r30, r10
     ed4:	f1 1d       	adc	r31, r1
     ed6:	80 81       	ld	r24, Z
     ed8:	80 33       	cpi	r24, 0x30	; 48
     eda:	11 f4       	brne	.+4      	; 0xee0 <vfprintf+0x2ba>
     edc:	29 7e       	andi	r18, 0xE9	; 233
     ede:	09 c0       	rjmp	.+18     	; 0xef2 <vfprintf+0x2cc>
     ee0:	22 ff       	sbrs	r18, 2
     ee2:	06 c0       	rjmp	.+12     	; 0xef0 <vfprintf+0x2ca>
     ee4:	73 94       	inc	r7
     ee6:	73 94       	inc	r7
     ee8:	04 c0       	rjmp	.+8      	; 0xef2 <vfprintf+0x2cc>
     eea:	82 2f       	mov	r24, r18
     eec:	86 78       	andi	r24, 0x86	; 134
     eee:	09 f0       	breq	.+2      	; 0xef2 <vfprintf+0x2cc>
     ef0:	73 94       	inc	r7
     ef2:	23 fd       	sbrc	r18, 3
     ef4:	12 c0       	rjmp	.+36     	; 0xf1a <vfprintf+0x2f4>
     ef6:	20 ff       	sbrs	r18, 0
     ef8:	06 c0       	rjmp	.+12     	; 0xf06 <vfprintf+0x2e0>
     efa:	5a 2c       	mov	r5, r10
     efc:	73 14       	cp	r7, r3
     efe:	18 f4       	brcc	.+6      	; 0xf06 <vfprintf+0x2e0>
     f00:	53 0c       	add	r5, r3
     f02:	57 18       	sub	r5, r7
     f04:	73 2c       	mov	r7, r3
     f06:	73 14       	cp	r7, r3
     f08:	60 f4       	brcc	.+24     	; 0xf22 <vfprintf+0x2fc>
     f0a:	b7 01       	movw	r22, r14
     f0c:	80 e2       	ldi	r24, 0x20	; 32
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	2c 87       	std	Y+12, r18	; 0x0c
     f12:	83 d0       	rcall	.+262    	; 0x101a <fputc>
     f14:	73 94       	inc	r7
     f16:	2c 85       	ldd	r18, Y+12	; 0x0c
     f18:	f6 cf       	rjmp	.-20     	; 0xf06 <vfprintf+0x2e0>
     f1a:	73 14       	cp	r7, r3
     f1c:	10 f4       	brcc	.+4      	; 0xf22 <vfprintf+0x2fc>
     f1e:	37 18       	sub	r3, r7
     f20:	01 c0       	rjmp	.+2      	; 0xf24 <vfprintf+0x2fe>
     f22:	31 2c       	mov	r3, r1
     f24:	24 ff       	sbrs	r18, 4
     f26:	11 c0       	rjmp	.+34     	; 0xf4a <vfprintf+0x324>
     f28:	b7 01       	movw	r22, r14
     f2a:	80 e3       	ldi	r24, 0x30	; 48
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	2c 87       	std	Y+12, r18	; 0x0c
     f30:	74 d0       	rcall	.+232    	; 0x101a <fputc>
     f32:	2c 85       	ldd	r18, Y+12	; 0x0c
     f34:	22 ff       	sbrs	r18, 2
     f36:	16 c0       	rjmp	.+44     	; 0xf64 <vfprintf+0x33e>
     f38:	21 ff       	sbrs	r18, 1
     f3a:	03 c0       	rjmp	.+6      	; 0xf42 <vfprintf+0x31c>
     f3c:	88 e5       	ldi	r24, 0x58	; 88
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <vfprintf+0x320>
     f42:	88 e7       	ldi	r24, 0x78	; 120
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	b7 01       	movw	r22, r14
     f48:	0c c0       	rjmp	.+24     	; 0xf62 <vfprintf+0x33c>
     f4a:	82 2f       	mov	r24, r18
     f4c:	86 78       	andi	r24, 0x86	; 134
     f4e:	51 f0       	breq	.+20     	; 0xf64 <vfprintf+0x33e>
     f50:	21 fd       	sbrc	r18, 1
     f52:	02 c0       	rjmp	.+4      	; 0xf58 <vfprintf+0x332>
     f54:	80 e2       	ldi	r24, 0x20	; 32
     f56:	01 c0       	rjmp	.+2      	; 0xf5a <vfprintf+0x334>
     f58:	8b e2       	ldi	r24, 0x2B	; 43
     f5a:	27 fd       	sbrc	r18, 7
     f5c:	8d e2       	ldi	r24, 0x2D	; 45
     f5e:	b7 01       	movw	r22, r14
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	5b d0       	rcall	.+182    	; 0x101a <fputc>
     f64:	a5 14       	cp	r10, r5
     f66:	30 f4       	brcc	.+12     	; 0xf74 <vfprintf+0x34e>
     f68:	b7 01       	movw	r22, r14
     f6a:	80 e3       	ldi	r24, 0x30	; 48
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	55 d0       	rcall	.+170    	; 0x101a <fputc>
     f70:	5a 94       	dec	r5
     f72:	f8 cf       	rjmp	.-16     	; 0xf64 <vfprintf+0x33e>
     f74:	aa 94       	dec	r10
     f76:	f4 01       	movw	r30, r8
     f78:	ea 0d       	add	r30, r10
     f7a:	f1 1d       	adc	r31, r1
     f7c:	80 81       	ld	r24, Z
     f7e:	b7 01       	movw	r22, r14
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	4b d0       	rcall	.+150    	; 0x101a <fputc>
     f84:	a1 10       	cpse	r10, r1
     f86:	f6 cf       	rjmp	.-20     	; 0xf74 <vfprintf+0x34e>
     f88:	33 20       	and	r3, r3
     f8a:	09 f4       	brne	.+2      	; 0xf8e <vfprintf+0x368>
     f8c:	5d ce       	rjmp	.-838    	; 0xc48 <vfprintf+0x22>
     f8e:	b7 01       	movw	r22, r14
     f90:	80 e2       	ldi	r24, 0x20	; 32
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	42 d0       	rcall	.+132    	; 0x101a <fputc>
     f96:	3a 94       	dec	r3
     f98:	f7 cf       	rjmp	.-18     	; 0xf88 <vfprintf+0x362>
     f9a:	f7 01       	movw	r30, r14
     f9c:	86 81       	ldd	r24, Z+6	; 0x06
     f9e:	97 81       	ldd	r25, Z+7	; 0x07
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <vfprintf+0x380>
     fa2:	8f ef       	ldi	r24, 0xFF	; 255
     fa4:	9f ef       	ldi	r25, 0xFF	; 255
     fa6:	2c 96       	adiw	r28, 0x0c	; 12
     fa8:	e2 e1       	ldi	r30, 0x12	; 18
     faa:	e3 c0       	rjmp	.+454    	; 0x1172 <__epilogue_restores__>

00000fac <calloc>:
     fac:	0f 93       	push	r16
     fae:	1f 93       	push	r17
     fb0:	cf 93       	push	r28
     fb2:	df 93       	push	r29
     fb4:	86 9f       	mul	r24, r22
     fb6:	80 01       	movw	r16, r0
     fb8:	87 9f       	mul	r24, r23
     fba:	10 0d       	add	r17, r0
     fbc:	96 9f       	mul	r25, r22
     fbe:	10 0d       	add	r17, r0
     fc0:	11 24       	eor	r1, r1
     fc2:	c8 01       	movw	r24, r16
     fc4:	81 dc       	rcall	.-1790   	; 0x8c8 <malloc>
     fc6:	ec 01       	movw	r28, r24
     fc8:	00 97       	sbiw	r24, 0x00	; 0
     fca:	21 f0       	breq	.+8      	; 0xfd4 <calloc+0x28>
     fcc:	a8 01       	movw	r20, r16
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	11 d0       	rcall	.+34     	; 0xff6 <memset>
     fd4:	ce 01       	movw	r24, r28
     fd6:	df 91       	pop	r29
     fd8:	cf 91       	pop	r28
     fda:	1f 91       	pop	r17
     fdc:	0f 91       	pop	r16
     fde:	08 95       	ret

00000fe0 <strnlen_P>:
     fe0:	fc 01       	movw	r30, r24
     fe2:	05 90       	lpm	r0, Z+
     fe4:	61 50       	subi	r22, 0x01	; 1
     fe6:	70 40       	sbci	r23, 0x00	; 0
     fe8:	01 10       	cpse	r0, r1
     fea:	d8 f7       	brcc	.-10     	; 0xfe2 <strnlen_P+0x2>
     fec:	80 95       	com	r24
     fee:	90 95       	com	r25
     ff0:	8e 0f       	add	r24, r30
     ff2:	9f 1f       	adc	r25, r31
     ff4:	08 95       	ret

00000ff6 <memset>:
     ff6:	dc 01       	movw	r26, r24
     ff8:	01 c0       	rjmp	.+2      	; 0xffc <memset+0x6>
     ffa:	6d 93       	st	X+, r22
     ffc:	41 50       	subi	r20, 0x01	; 1
     ffe:	50 40       	sbci	r21, 0x00	; 0
    1000:	e0 f7       	brcc	.-8      	; 0xffa <memset+0x4>
    1002:	08 95       	ret

00001004 <strnlen>:
    1004:	fc 01       	movw	r30, r24
    1006:	61 50       	subi	r22, 0x01	; 1
    1008:	70 40       	sbci	r23, 0x00	; 0
    100a:	01 90       	ld	r0, Z+
    100c:	01 10       	cpse	r0, r1
    100e:	d8 f7       	brcc	.-10     	; 0x1006 <strnlen+0x2>
    1010:	80 95       	com	r24
    1012:	90 95       	com	r25
    1014:	8e 0f       	add	r24, r30
    1016:	9f 1f       	adc	r25, r31
    1018:	08 95       	ret

0000101a <fputc>:
    101a:	0f 93       	push	r16
    101c:	1f 93       	push	r17
    101e:	cf 93       	push	r28
    1020:	df 93       	push	r29
    1022:	18 2f       	mov	r17, r24
    1024:	09 2f       	mov	r16, r25
    1026:	eb 01       	movw	r28, r22
    1028:	8b 81       	ldd	r24, Y+3	; 0x03
    102a:	81 fd       	sbrc	r24, 1
    102c:	03 c0       	rjmp	.+6      	; 0x1034 <fputc+0x1a>
    102e:	8f ef       	ldi	r24, 0xFF	; 255
    1030:	9f ef       	ldi	r25, 0xFF	; 255
    1032:	20 c0       	rjmp	.+64     	; 0x1074 <fputc+0x5a>
    1034:	82 ff       	sbrs	r24, 2
    1036:	10 c0       	rjmp	.+32     	; 0x1058 <fputc+0x3e>
    1038:	4e 81       	ldd	r20, Y+6	; 0x06
    103a:	5f 81       	ldd	r21, Y+7	; 0x07
    103c:	2c 81       	ldd	r18, Y+4	; 0x04
    103e:	3d 81       	ldd	r19, Y+5	; 0x05
    1040:	42 17       	cp	r20, r18
    1042:	53 07       	cpc	r21, r19
    1044:	7c f4       	brge	.+30     	; 0x1064 <fputc+0x4a>
    1046:	e8 81       	ld	r30, Y
    1048:	f9 81       	ldd	r31, Y+1	; 0x01
    104a:	9f 01       	movw	r18, r30
    104c:	2f 5f       	subi	r18, 0xFF	; 255
    104e:	3f 4f       	sbci	r19, 0xFF	; 255
    1050:	39 83       	std	Y+1, r19	; 0x01
    1052:	28 83       	st	Y, r18
    1054:	10 83       	st	Z, r17
    1056:	06 c0       	rjmp	.+12     	; 0x1064 <fputc+0x4a>
    1058:	e8 85       	ldd	r30, Y+8	; 0x08
    105a:	f9 85       	ldd	r31, Y+9	; 0x09
    105c:	81 2f       	mov	r24, r17
    105e:	09 95       	icall
    1060:	89 2b       	or	r24, r25
    1062:	29 f7       	brne	.-54     	; 0x102e <fputc+0x14>
    1064:	2e 81       	ldd	r18, Y+6	; 0x06
    1066:	3f 81       	ldd	r19, Y+7	; 0x07
    1068:	2f 5f       	subi	r18, 0xFF	; 255
    106a:	3f 4f       	sbci	r19, 0xFF	; 255
    106c:	3f 83       	std	Y+7, r19	; 0x07
    106e:	2e 83       	std	Y+6, r18	; 0x06
    1070:	81 2f       	mov	r24, r17
    1072:	90 2f       	mov	r25, r16
    1074:	df 91       	pop	r29
    1076:	cf 91       	pop	r28
    1078:	1f 91       	pop	r17
    107a:	0f 91       	pop	r16
    107c:	08 95       	ret

0000107e <__ultoa_invert>:
    107e:	fa 01       	movw	r30, r20
    1080:	aa 27       	eor	r26, r26
    1082:	28 30       	cpi	r18, 0x08	; 8
    1084:	51 f1       	breq	.+84     	; 0x10da <__ultoa_invert+0x5c>
    1086:	20 31       	cpi	r18, 0x10	; 16
    1088:	81 f1       	breq	.+96     	; 0x10ea <__ultoa_invert+0x6c>
    108a:	e8 94       	clt
    108c:	6f 93       	push	r22
    108e:	6e 7f       	andi	r22, 0xFE	; 254
    1090:	6e 5f       	subi	r22, 0xFE	; 254
    1092:	7f 4f       	sbci	r23, 0xFF	; 255
    1094:	8f 4f       	sbci	r24, 0xFF	; 255
    1096:	9f 4f       	sbci	r25, 0xFF	; 255
    1098:	af 4f       	sbci	r26, 0xFF	; 255
    109a:	b1 e0       	ldi	r27, 0x01	; 1
    109c:	3e d0       	rcall	.+124    	; 0x111a <__ultoa_invert+0x9c>
    109e:	b4 e0       	ldi	r27, 0x04	; 4
    10a0:	3c d0       	rcall	.+120    	; 0x111a <__ultoa_invert+0x9c>
    10a2:	67 0f       	add	r22, r23
    10a4:	78 1f       	adc	r23, r24
    10a6:	89 1f       	adc	r24, r25
    10a8:	9a 1f       	adc	r25, r26
    10aa:	a1 1d       	adc	r26, r1
    10ac:	68 0f       	add	r22, r24
    10ae:	79 1f       	adc	r23, r25
    10b0:	8a 1f       	adc	r24, r26
    10b2:	91 1d       	adc	r25, r1
    10b4:	a1 1d       	adc	r26, r1
    10b6:	6a 0f       	add	r22, r26
    10b8:	71 1d       	adc	r23, r1
    10ba:	81 1d       	adc	r24, r1
    10bc:	91 1d       	adc	r25, r1
    10be:	a1 1d       	adc	r26, r1
    10c0:	20 d0       	rcall	.+64     	; 0x1102 <__ultoa_invert+0x84>
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <__ultoa_invert+0x48>
    10c4:	68 94       	set
    10c6:	3f 91       	pop	r19
    10c8:	2a e0       	ldi	r18, 0x0A	; 10
    10ca:	26 9f       	mul	r18, r22
    10cc:	11 24       	eor	r1, r1
    10ce:	30 19       	sub	r19, r0
    10d0:	30 5d       	subi	r19, 0xD0	; 208
    10d2:	31 93       	st	Z+, r19
    10d4:	de f6       	brtc	.-74     	; 0x108c <__ultoa_invert+0xe>
    10d6:	cf 01       	movw	r24, r30
    10d8:	08 95       	ret
    10da:	46 2f       	mov	r20, r22
    10dc:	47 70       	andi	r20, 0x07	; 7
    10de:	40 5d       	subi	r20, 0xD0	; 208
    10e0:	41 93       	st	Z+, r20
    10e2:	b3 e0       	ldi	r27, 0x03	; 3
    10e4:	0f d0       	rcall	.+30     	; 0x1104 <__ultoa_invert+0x86>
    10e6:	c9 f7       	brne	.-14     	; 0x10da <__ultoa_invert+0x5c>
    10e8:	f6 cf       	rjmp	.-20     	; 0x10d6 <__ultoa_invert+0x58>
    10ea:	46 2f       	mov	r20, r22
    10ec:	4f 70       	andi	r20, 0x0F	; 15
    10ee:	40 5d       	subi	r20, 0xD0	; 208
    10f0:	4a 33       	cpi	r20, 0x3A	; 58
    10f2:	18 f0       	brcs	.+6      	; 0x10fa <__ultoa_invert+0x7c>
    10f4:	49 5d       	subi	r20, 0xD9	; 217
    10f6:	31 fd       	sbrc	r19, 1
    10f8:	40 52       	subi	r20, 0x20	; 32
    10fa:	41 93       	st	Z+, r20
    10fc:	02 d0       	rcall	.+4      	; 0x1102 <__ultoa_invert+0x84>
    10fe:	a9 f7       	brne	.-22     	; 0x10ea <__ultoa_invert+0x6c>
    1100:	ea cf       	rjmp	.-44     	; 0x10d6 <__ultoa_invert+0x58>
    1102:	b4 e0       	ldi	r27, 0x04	; 4
    1104:	a6 95       	lsr	r26
    1106:	97 95       	ror	r25
    1108:	87 95       	ror	r24
    110a:	77 95       	ror	r23
    110c:	67 95       	ror	r22
    110e:	ba 95       	dec	r27
    1110:	c9 f7       	brne	.-14     	; 0x1104 <__ultoa_invert+0x86>
    1112:	00 97       	sbiw	r24, 0x00	; 0
    1114:	61 05       	cpc	r22, r1
    1116:	71 05       	cpc	r23, r1
    1118:	08 95       	ret
    111a:	9b 01       	movw	r18, r22
    111c:	ac 01       	movw	r20, r24
    111e:	0a 2e       	mov	r0, r26
    1120:	06 94       	lsr	r0
    1122:	57 95       	ror	r21
    1124:	47 95       	ror	r20
    1126:	37 95       	ror	r19
    1128:	27 95       	ror	r18
    112a:	ba 95       	dec	r27
    112c:	c9 f7       	brne	.-14     	; 0x1120 <__ultoa_invert+0xa2>
    112e:	62 0f       	add	r22, r18
    1130:	73 1f       	adc	r23, r19
    1132:	84 1f       	adc	r24, r20
    1134:	95 1f       	adc	r25, r21
    1136:	a0 1d       	adc	r26, r0
    1138:	08 95       	ret

0000113a <__prologue_saves__>:
    113a:	2f 92       	push	r2
    113c:	3f 92       	push	r3
    113e:	4f 92       	push	r4
    1140:	5f 92       	push	r5
    1142:	6f 92       	push	r6
    1144:	7f 92       	push	r7
    1146:	8f 92       	push	r8
    1148:	9f 92       	push	r9
    114a:	af 92       	push	r10
    114c:	bf 92       	push	r11
    114e:	cf 92       	push	r12
    1150:	df 92       	push	r13
    1152:	ef 92       	push	r14
    1154:	ff 92       	push	r15
    1156:	0f 93       	push	r16
    1158:	1f 93       	push	r17
    115a:	cf 93       	push	r28
    115c:	df 93       	push	r29
    115e:	cd b7       	in	r28, 0x3d	; 61
    1160:	de b7       	in	r29, 0x3e	; 62
    1162:	ca 1b       	sub	r28, r26
    1164:	db 0b       	sbc	r29, r27
    1166:	0f b6       	in	r0, 0x3f	; 63
    1168:	f8 94       	cli
    116a:	de bf       	out	0x3e, r29	; 62
    116c:	0f be       	out	0x3f, r0	; 63
    116e:	cd bf       	out	0x3d, r28	; 61
    1170:	09 94       	ijmp

00001172 <__epilogue_restores__>:
    1172:	2a 88       	ldd	r2, Y+18	; 0x12
    1174:	39 88       	ldd	r3, Y+17	; 0x11
    1176:	48 88       	ldd	r4, Y+16	; 0x10
    1178:	5f 84       	ldd	r5, Y+15	; 0x0f
    117a:	6e 84       	ldd	r6, Y+14	; 0x0e
    117c:	7d 84       	ldd	r7, Y+13	; 0x0d
    117e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1180:	9b 84       	ldd	r9, Y+11	; 0x0b
    1182:	aa 84       	ldd	r10, Y+10	; 0x0a
    1184:	b9 84       	ldd	r11, Y+9	; 0x09
    1186:	c8 84       	ldd	r12, Y+8	; 0x08
    1188:	df 80       	ldd	r13, Y+7	; 0x07
    118a:	ee 80       	ldd	r14, Y+6	; 0x06
    118c:	fd 80       	ldd	r15, Y+5	; 0x05
    118e:	0c 81       	ldd	r16, Y+4	; 0x04
    1190:	1b 81       	ldd	r17, Y+3	; 0x03
    1192:	aa 81       	ldd	r26, Y+2	; 0x02
    1194:	b9 81       	ldd	r27, Y+1	; 0x01
    1196:	ce 0f       	add	r28, r30
    1198:	d1 1d       	adc	r29, r1
    119a:	0f b6       	in	r0, 0x3f	; 63
    119c:	f8 94       	cli
    119e:	de bf       	out	0x3e, r29	; 62
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	cd bf       	out	0x3d, r28	; 61
    11a4:	ed 01       	movw	r28, r26
    11a6:	08 95       	ret

000011a8 <_exit>:
    11a8:	f8 94       	cli

000011aa <__stop_program>:
    11aa:	ff cf       	rjmp	.-2      	; 0x11aa <__stop_program>
