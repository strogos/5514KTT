
LabExc03-Joystick.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000264  00800100  00001176  0000120a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001176  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800364  00800364  0000146e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000146e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000138  00000000  00000000  000014ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000103e  00000000  00000000  00001602  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000080b  00000000  00000000  00002640  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001c75  00000000  00000000  00002e4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000036c  00000000  00000000  00004ac0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000dd6c  00000000  00000000  00004e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d23  00000000  00000000  00012b98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  000138bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00003ce6  00000000  00000000  00013993  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	37 c0       	rjmp	.+110    	; 0x70 <__ctors_end>
       2:	00 00       	nop
       4:	51 c0       	rjmp	.+162    	; 0xa8 <__bad_interrupt>
       6:	00 00       	nop
       8:	4f c0       	rjmp	.+158    	; 0xa8 <__bad_interrupt>
       a:	00 00       	nop
       c:	4d c0       	rjmp	.+154    	; 0xa8 <__bad_interrupt>
       e:	00 00       	nop
      10:	4b c0       	rjmp	.+150    	; 0xa8 <__bad_interrupt>
      12:	00 00       	nop
      14:	49 c0       	rjmp	.+146    	; 0xa8 <__bad_interrupt>
      16:	00 00       	nop
      18:	47 c0       	rjmp	.+142    	; 0xa8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	45 c0       	rjmp	.+138    	; 0xa8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	43 c0       	rjmp	.+134    	; 0xa8 <__bad_interrupt>
      22:	00 00       	nop
      24:	41 c0       	rjmp	.+130    	; 0xa8 <__bad_interrupt>
      26:	00 00       	nop
      28:	3f c0       	rjmp	.+126    	; 0xa8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3d c0       	rjmp	.+122    	; 0xa8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	3b c0       	rjmp	.+118    	; 0xa8 <__bad_interrupt>
      32:	00 00       	nop
      34:	39 c0       	rjmp	.+114    	; 0xa8 <__bad_interrupt>
      36:	00 00       	nop
      38:	37 c0       	rjmp	.+110    	; 0xa8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	35 c0       	rjmp	.+106    	; 0xa8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	33 c0       	rjmp	.+102    	; 0xa8 <__bad_interrupt>
      42:	00 00       	nop
      44:	31 c0       	rjmp	.+98     	; 0xa8 <__bad_interrupt>
      46:	00 00       	nop
      48:	2f c0       	rjmp	.+94     	; 0xa8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	84 c2       	rjmp	.+1288   	; 0x556 <__vector_19>
      4e:	00 00       	nop
      50:	2b c0       	rjmp	.+86     	; 0xa8 <__bad_interrupt>
      52:	00 00       	nop
      54:	29 c0       	rjmp	.+82     	; 0xa8 <__bad_interrupt>
      56:	00 00       	nop
      58:	27 c0       	rjmp	.+78     	; 0xa8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	25 c0       	rjmp	.+74     	; 0xa8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	23 c0       	rjmp	.+70     	; 0xa8 <__bad_interrupt>
      62:	00 00       	nop
      64:	21 c0       	rjmp	.+66     	; 0xa8 <__bad_interrupt>
      66:	00 00       	nop
      68:	1f c0       	rjmp	.+62     	; 0xa8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	1d c0       	rjmp	.+58     	; 0xa8 <__bad_interrupt>
	...

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	13 e0       	ldi	r17, 0x03	; 3
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e6 e7       	ldi	r30, 0x76	; 118
      84:	f1 e1       	ldi	r31, 0x11	; 17
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a4 36       	cpi	r26, 0x64	; 100
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	23 e0       	ldi	r18, 0x03	; 3
      94:	a4 e6       	ldi	r26, 0x64	; 100
      96:	b3 e0       	ldi	r27, 0x03	; 3
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a6 37       	cpi	r26, 0x76	; 118
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	fa d1       	rcall	.+1012   	; 0x498 <main>
      a4:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <_exit>

000000a8 <__bad_interrupt>:
      a8:	ab cf       	rjmp	.-170    	; 0x0 <__vectors>

000000aa <adcRead>:
	// MALLOC?
}
uint8_t adcRead(uint8_t adcChannel)
{
	//check if the channel on the ADC exceeds number of used channels
	if(!(adcChannel<=3)&&(adcChannel>0))
      aa:	84 30       	cpi	r24, 0x04	; 4
      ac:	70 f4       	brcc	.+28     	; 0xca <adcRead+0x20>
	
	//set start position for ADC addressing
	volatile uint8_t *adcAddressing = 0x1400;
					
	//Choose address to work with in the ADC based on channel set in adcChannel
	*adcAddressing = (0x04|adcChannel);
      ae:	84 60       	ori	r24, 0x04	; 4
      b0:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      b4:	8f ef       	ldi	r24, 0xFF	; 255
      b6:	9f e2       	ldi	r25, 0x2F	; 47
      b8:	01 97       	sbiw	r24, 0x01	; 1
      ba:	f1 f7       	brne	.-4      	; 0xb8 <adcRead+0xe>
      bc:	00 c0       	rjmp	.+0      	; 0xbe <adcRead+0x14>
      be:	00 00       	nop
	
	_delay_ms(10);//add delay between reads (if no delay; adc will read from the prevously selected channel )
		
	//wait for data to be read (..implement interrupt!!!)
	while(PINE & (1<<PINE0));//test PINE0 for changes (pin is cleared)
      c0:	28 99       	sbic	0x05, 0	; 5
      c2:	fe cf       	rjmp	.-4      	; 0xc0 <adcRead+0x16>
		
	return *adcAddressing;
      c4:	80 91 00 14 	lds	r24, 0x1400
      c8:	08 95       	ret
}
uint8_t adcRead(uint8_t adcChannel)
{
	//check if the channel on the ADC exceeds number of used channels
	if(!(adcChannel<=3)&&(adcChannel>0))
		return 0;
      ca:	80 e0       	ldi	r24, 0x00	; 0
		
	//wait for data to be read (..implement interrupt!!!)
	while(PINE & (1<<PINE0));//test PINE0 for changes (pin is cleared)
		
	return *adcAddressing;
}
      cc:	08 95       	ret

000000ce <joystickInitialize>:




uint8_t *joystickInitialize(uint8_t *joyPos)
{
      ce:	1f 93       	push	r17
      d0:	cf 93       	push	r28
      d2:	df 93       	push	r29
      d4:	ec 01       	movw	r28, r24
	
	uint8_t buffer1=adcRead(ADC_CH1_JOY_Y_AXIS);
      d6:	80 e0       	ldi	r24, 0x00	; 0
      d8:	e8 df       	rcall	.-48     	; 0xaa <adcRead>
      da:	18 2f       	mov	r17, r24
	uint8_t buffer2=adcRead(ADC_CH2_JOY_X_AXIS);
      dc:	81 e0       	ldi	r24, 0x01	; 1
      de:	e5 df       	rcall	.-54     	; 0xaa <adcRead>
	uint8_t buffer3=buffer1;
	uint8_t buffer4=buffer2;
	//printf("\n\r%d",buffer3);
	joyPos[0]=buffer1;
      e0:	18 83       	st	Y, r17
	joyPos[1]=buffer2;
      e2:	89 83       	std	Y+1, r24	; 0x01
	joyPos[2]=buffer3;
      e4:	1a 83       	std	Y+2, r17	; 0x02
	joyPos[3]=buffer4;
      e6:	8b 83       	std	Y+3, r24	; 0x03
	
	return joyPos;
	
}
      e8:	ce 01       	movw	r24, r28
      ea:	df 91       	pop	r29
      ec:	cf 91       	pop	r28
      ee:	1f 91       	pop	r17
      f0:	08 95       	ret

000000f2 <joystickCalibrate>:
{
	
	uint8_t byteOfData=0;
	
	
	printf("\n\rPut joystick in center position\n\r");
      f2:	86 e0       	ldi	r24, 0x06	; 6
      f4:	91 e0       	ldi	r25, 0x01	; 1
      f6:	9f 93       	push	r25
      f8:	8f 93       	push	r24
      fa:	3c d5       	rcall	.+2680   	; 0xb74 <printf>
	if(byteOfData=usartReceiveByte()=='y');	
      fc:	a9 d0       	rcall	.+338    	; 0x250 <usartReceiveByte>
	array[0]=adcRead(ADC_CH1_JOY_Y_AXIS);
      fe:	80 e0       	ldi	r24, 0x00	; 0
     100:	d4 df       	rcall	.-88     	; 0xaa <adcRead>
     102:	80 93 66 03 	sts	0x0366, r24
	array[1]=adcRead(ADC_CH2_JOY_X_AXIS);
     106:	81 e0       	ldi	r24, 0x01	; 1
     108:	d0 df       	rcall	.-96     	; 0xaa <adcRead>
     10a:	80 93 67 03 	sts	0x0367, r24
	
	
	printf("\n\rGet X_min\n\r");
     10e:	8a e2       	ldi	r24, 0x2A	; 42
     110:	91 e0       	ldi	r25, 0x01	; 1
     112:	9f 93       	push	r25
     114:	8f 93       	push	r24
     116:	2e d5       	rcall	.+2652   	; 0xb74 <printf>
	if(byteOfData=usartReceiveByte()=='y');
     118:	9b d0       	rcall	.+310    	; 0x250 <usartReceiveByte>
	array[2]=adcRead(ADC_CH2_JOY_X_AXIS);//X_min
     11a:	81 e0       	ldi	r24, 0x01	; 1
     11c:	c6 df       	rcall	.-116    	; 0xaa <adcRead>
     11e:	80 93 68 03 	sts	0x0368, r24

	printf("\n\rGet X_max\n\r");
     122:	88 e3       	ldi	r24, 0x38	; 56
     124:	91 e0       	ldi	r25, 0x01	; 1
     126:	9f 93       	push	r25
     128:	8f 93       	push	r24
     12a:	24 d5       	rcall	.+2632   	; 0xb74 <printf>
	if(byteOfData=usartReceiveByte()=='y');
     12c:	91 d0       	rcall	.+290    	; 0x250 <usartReceiveByte>
	array[3]=adcRead(ADC_CH2_JOY_X_AXIS);//X_MAX
     12e:	81 e0       	ldi	r24, 0x01	; 1
     130:	bc df       	rcall	.-136    	; 0xaa <adcRead>
     132:	80 93 69 03 	sts	0x0369, r24
	
	printf("\n\rGet Y_min\n\r");
     136:	86 e4       	ldi	r24, 0x46	; 70
     138:	91 e0       	ldi	r25, 0x01	; 1
     13a:	9f 93       	push	r25
     13c:	8f 93       	push	r24
     13e:	1a d5       	rcall	.+2612   	; 0xb74 <printf>
	if(byteOfData=usartReceiveByte()=='y');
     140:	87 d0       	rcall	.+270    	; 0x250 <usartReceiveByte>
	array[4]=adcRead(ADC_CH1_JOY_Y_AXIS);//Y_min
     142:	80 e0       	ldi	r24, 0x00	; 0
     144:	b2 df       	rcall	.-156    	; 0xaa <adcRead>
     146:	80 93 6a 03 	sts	0x036A, r24
	
	printf("\n\rGet Y_max\n\r");
     14a:	84 e5       	ldi	r24, 0x54	; 84
     14c:	91 e0       	ldi	r25, 0x01	; 1
     14e:	9f 93       	push	r25
     150:	8f 93       	push	r24
     152:	10 d5       	rcall	.+2592   	; 0xb74 <printf>
	if(byteOfData=usartReceiveByte()=='y');
     154:	7d d0       	rcall	.+250    	; 0x250 <usartReceiveByte>
	array[5]=adcRead(ADC_CH1_JOY_Y_AXIS);//Y_MAX
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	a8 df       	rcall	.-176    	; 0xaa <adcRead>
     15a:	80 93 6b 03 	sts	0x036B, r24
     15e:	8d b7       	in	r24, 0x3d	; 61
     160:	9e b7       	in	r25, 0x3e	; 62
     162:	0a 96       	adiw	r24, 0x0a	; 10
     164:	0f b6       	in	r0, 0x3f	; 63
     166:	f8 94       	cli
     168:	9e bf       	out	0x3e, r25	; 62
     16a:	0f be       	out	0x3f, r0	; 63
     16c:	8d bf       	out	0x3d, r24	; 61
     16e:	08 95       	ret

00000170 <calcCalibParam>:
	
}


int8_t calcCalibParam(uint8_t x1,uint8_t x2,uint8_t X)
{
     170:	cf 92       	push	r12
     172:	df 92       	push	r13
     174:	ef 92       	push	r14
     176:	ff 92       	push	r15
     178:	1f 93       	push	r17
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	16 2f       	mov	r17, r22
	//skalering: Y->0-100; X->X2-X1
	//uint8_t byteOfData=0;
	
	double slope=((double)JOYSTICK_RESOLUTION_POST_CALIBRATION/(double)(x2-x1));
     180:	c8 2f       	mov	r28, r24
     182:	d0 e0       	ldi	r29, 0x00	; 0
	double f=(slope*((double)(X-x1)));
     184:	50 e0       	ldi	r21, 0x00	; 0
     186:	ba 01       	movw	r22, r20
     188:	6c 1b       	sub	r22, r28
     18a:	7d 0b       	sbc	r23, r29
     18c:	88 27       	eor	r24, r24
     18e:	77 fd       	sbrc	r23, 7
     190:	80 95       	com	r24
     192:	98 2f       	mov	r25, r24
     194:	8f d2       	rcall	.+1310   	; 0x6b4 <__floatsisf>
     196:	6b 01       	movw	r12, r22
     198:	7c 01       	movw	r14, r24
int8_t calcCalibParam(uint8_t x1,uint8_t x2,uint8_t X)
{
	//skalering: Y->0-100; X->X2-X1
	//uint8_t byteOfData=0;
	
	double slope=((double)JOYSTICK_RESOLUTION_POST_CALIBRATION/(double)(x2-x1));
     19a:	61 2f       	mov	r22, r17
     19c:	70 e0       	ldi	r23, 0x00	; 0
     19e:	6c 1b       	sub	r22, r28
     1a0:	7d 0b       	sbc	r23, r29
     1a2:	88 27       	eor	r24, r24
     1a4:	77 fd       	sbrc	r23, 7
     1a6:	80 95       	com	r24
     1a8:	98 2f       	mov	r25, r24
     1aa:	84 d2       	rcall	.+1288   	; 0x6b4 <__floatsisf>
     1ac:	9b 01       	movw	r18, r22
     1ae:	ac 01       	movw	r20, r24
     1b0:	60 e0       	ldi	r22, 0x00	; 0
     1b2:	70 e0       	ldi	r23, 0x00	; 0
     1b4:	88 ec       	ldi	r24, 0xC8	; 200
     1b6:	92 e4       	ldi	r25, 0x42	; 66
     1b8:	e2 d1       	rcall	.+964    	; 0x57e <__divsf3>
     1ba:	9b 01       	movw	r18, r22
     1bc:	ac 01       	movw	r20, r24
	double f=(slope*((double)(X-x1)));
     1be:	c7 01       	movw	r24, r14
     1c0:	b6 01       	movw	r22, r12
     1c2:	04 d3       	rcall	.+1544   	; 0x7cc <__mulsf3>
	
	//printf("\n\rSEEE!! %f : %f : %d : %d : %d\n\r",slope,f,x1,x2,X_variabel);	
	//if(byteOfData=usartReceiveByte()=='y');
	return (int8_t)f;
     1c4:	44 d2       	rcall	.+1160   	; 0x64e <__fixsfsi>
     1c6:	86 2f       	mov	r24, r22
	
}
     1c8:	df 91       	pop	r29
     1ca:	cf 91       	pop	r28
     1cc:	1f 91       	pop	r17
     1ce:	ff 90       	pop	r15
     1d0:	ef 90       	pop	r14
     1d2:	df 90       	pop	r13
     1d4:	cf 90       	pop	r12
     1d6:	08 95       	ret

000001d8 <getXPosition>:


void getXPosition(uint8_t xUncalibratedPos,int8_t *xCalibratedPos)
{
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	48 2f       	mov	r20, r24
     1de:	eb 01       	movw	r28, r22
	//uint8_t byteOfData=0;
	uint8_t XMid=array[1];	
     1e0:	80 91 67 03 	lds	r24, 0x0367
	if(xUncalibratedPos>XMid)
     1e4:	84 17       	cp	r24, r20
     1e6:	28 f4       	brcc	.+10     	; 0x1f2 <getXPosition+0x1a>
	{
		*xCalibratedPos=calcCalibParam(array[1],array[3],xUncalibratedPos);
     1e8:	60 91 69 03 	lds	r22, 0x0369
     1ec:	c1 df       	rcall	.-126    	; 0x170 <calcCalibParam>
     1ee:	88 83       	st	Y, r24
     1f0:	05 c0       	rjmp	.+10     	; 0x1fc <getXPosition+0x24>
			
	}
	else
	{
		*xCalibratedPos=calcCalibParam(array[1],array[2],xUncalibratedPos)*(-1);
     1f2:	60 91 68 03 	lds	r22, 0x0368
     1f6:	bc df       	rcall	.-136    	; 0x170 <calcCalibParam>
     1f8:	81 95       	neg	r24
     1fa:	88 83       	st	Y, r24
	}
	//printf("\n\r%d : %d : %d \n\r",XMid,xCalibratedPos,xUncalibratedPos);
	//if(byteOfData=usartReceiveByte()=='y');			
}
     1fc:	df 91       	pop	r29
     1fe:	cf 91       	pop	r28
     200:	08 95       	ret

00000202 <getYPosition>:

void getYPosition(uint8_t yUncalibratedPos, int8_t *yCalibratedPos)
{
     202:	cf 93       	push	r28
     204:	df 93       	push	r29
     206:	48 2f       	mov	r20, r24
     208:	eb 01       	movw	r28, r22
		uint8_t YMid=array[0];
     20a:	80 91 66 03 	lds	r24, 0x0366
		if(yUncalibratedPos>YMid)
     20e:	84 17       	cp	r24, r20
     210:	28 f4       	brcc	.+10     	; 0x21c <getYPosition+0x1a>
		{
			*yCalibratedPos=calcCalibParam(array[0],array[5],yUncalibratedPos);
     212:	60 91 6b 03 	lds	r22, 0x036B
     216:	ac df       	rcall	.-168    	; 0x170 <calcCalibParam>
     218:	88 83       	st	Y, r24
     21a:	05 c0       	rjmp	.+10     	; 0x226 <getYPosition+0x24>
			
		}
		else
		{
			*yCalibratedPos=calcCalibParam(array[0],array[4],yUncalibratedPos)*(-1);
     21c:	60 91 6a 03 	lds	r22, 0x036A
     220:	a7 df       	rcall	.-178    	; 0x170 <calcCalibParam>
     222:	81 95       	neg	r24
     224:	88 83       	st	Y, r24
			
		}
		
}
     226:	df 91       	pop	r29
     228:	cf 91       	pop	r28
     22a:	08 95       	ret

0000022c <usartSendByte>:
///<summary>
///Send a byte using USART
///</summary>
void usartSendByte(uint8_t byteToSend)
{
		while((UCSR0A&(1<<UDRE0))==0);//---------------//Only transmit data if data bus is available (not already transmitting)
     22c:	5d 9b       	sbis	0x0b, 5	; 11
     22e:	fe cf       	rjmp	.-4      	; 0x22c <usartSendByte>
		UDR0=byteToSend;//---------------------------//transmit byte
     230:	8c b9       	out	0x0c, r24	; 12
     232:	08 95       	ret

00000234 <usartInitialize>:
		#if USART_OPERATING_MODE_U2X
			unsigned int UBRR=(F_CPU / (8UL * USART_BAUDRATE)) - 1; //if integer trunctuation is noticed (...not getting the expected baudrate) due to integer devision, USE: ((F_CPU + USART_BAUD_RATE * 8L) / (USART_BAUD_RATE * 16L) - 1) instead. When doing integer division it is usually better to round to the nearest integer, rather than to the lowest. 
			UCSR0A |= (1<<U2X0);//---------------------------//U2x=1
		#else
			unsigned int UBRR=(F_CPU / (16UL * USART_BAUDRATE)) - 1;
			UCSR0A &= ~(1<<U2X0);//---------------------------//U2X=0
     234:	59 98       	cbi	0x0b, 1	; 11
		#endif

		//Set up the baud rate for USART0
		UBRR0L=UBRR;//---------------------------// load lower 8 bits of baud rate value
     236:	8f e1       	ldi	r24, 0x1F	; 31
     238:	89 b9       	out	0x09, r24	; 9
		UBRR0H=(UBRR>>8);//---------------------------// load upper 8 bits of baud rate value	
     23a:	10 bc       	out	0x20, r1	; 32
		
		//Enable Tx & Rx
		UCSR0B=(1<<TXEN0)|(1<<RXEN0);
     23c:	88 e1       	ldi	r24, 0x18	; 24
     23e:	8a b9       	out	0x0a, r24	; 10
		/*Configure Data Format: 
			-	Data Bits = 8;
			-	Stop Bits = 2;
			-	Parity = EVEN;		
		*/
		UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00)|(1<<UPM01);
     240:	8e ea       	ldi	r24, 0xAE	; 174
     242:	80 bd       	out	0x20, r24	; 32
		*	- Second parameter: optional; used for get functions, ie. receiving a character from the USART.
		*	- BEAWARE that this function uses malloc()
		*/
		if(USART_ENABLE_printf)
		{
			fdevopen(&usartSendByte,NULL);
     244:	60 e0       	ldi	r22, 0x00	; 0
     246:	70 e0       	ldi	r23, 0x00	; 0
     248:	86 e1       	ldi	r24, 0x16	; 22
     24a:	91 e0       	ldi	r25, 0x01	; 1
     24c:	49 c4       	rjmp	.+2194   	; 0xae0 <fdevopen>
     24e:	08 95       	ret

00000250 <usartReceiveByte>:
///<summary>
/////Receive a byte using USART
///</summary>
uint8_t usartReceiveByte(void)
{
	while((UCSR0A&(1<<RXC0))==0);//---------------------------//wait until data is received
     250:	5f 9b       	sbis	0x0b, 7	; 11
     252:	fe cf       	rjmp	.-4      	; 0x250 <usartReceiveByte>
	
	return UDR0;//-------------------------------------------//return received data
     254:	8c b1       	in	r24, 0x0c	; 12
}
     256:	08 95       	ret

00000258 <xmemInit>:

	//Write address on SRAM
	memoryPosition[address] = data;
	
	return 0;
}
     258:	80 e8       	ldi	r24, 0x80	; 128
     25a:	85 bf       	out	0x35, r24	; 53
     25c:	16 be       	out	0x36, r1	; 54
     25e:	80 e2       	ldi	r24, 0x20	; 32
     260:	80 bf       	out	0x30, r24	; 48
     262:	08 95       	ret

00000264 <xmemTest>:
     264:	cf 92       	push	r12
     266:	df 92       	push	r13
     268:	ef 92       	push	r14
     26a:	ff 92       	push	r15
     26c:	0f 93       	push	r16
     26e:	1f 93       	push	r17
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	82 e6       	ldi	r24, 0x62	; 98
     276:	91 e0       	ldi	r25, 0x01	; 1
     278:	8e d4       	rcall	.+2332   	; 0xb96 <puts>
     27a:	00 e0       	ldi	r16, 0x00	; 0
     27c:	10 e0       	ldi	r17, 0x00	; 0
     27e:	c0 e0       	ldi	r28, 0x00	; 0
     280:	d0 e0       	ldi	r29, 0x00	; 0
     282:	0f 2e       	mov	r0, r31
     284:	f9 e7       	ldi	r31, 0x79	; 121
     286:	ef 2e       	mov	r14, r31
     288:	f1 e0       	ldi	r31, 0x01	; 1
     28a:	ff 2e       	mov	r15, r31
     28c:	f0 2d       	mov	r31, r0
     28e:	8c 2f       	mov	r24, r28
     290:	80 95       	com	r24
     292:	fe 01       	movw	r30, r28
     294:	f8 5e       	subi	r31, 0xE8	; 232
     296:	80 83       	st	Z, r24
     298:	90 81       	ld	r25, Z
     29a:	98 17       	cp	r25, r24
     29c:	a1 f0       	breq	.+40     	; 0x2c6 <xmemTest+0x62>
     29e:	90 81       	ld	r25, Z
     2a0:	1f 92       	push	r1
     2a2:	8f 93       	push	r24
     2a4:	1f 92       	push	r1
     2a6:	9f 93       	push	r25
     2a8:	df 93       	push	r29
     2aa:	cf 93       	push	r28
     2ac:	ff 92       	push	r15
     2ae:	ef 92       	push	r14
     2b0:	61 d4       	rcall	.+2242   	; 0xb74 <printf>
     2b2:	0f 5f       	subi	r16, 0xFF	; 255
     2b4:	1f 4f       	sbci	r17, 0xFF	; 255
     2b6:	8d b7       	in	r24, 0x3d	; 61
     2b8:	9e b7       	in	r25, 0x3e	; 62
     2ba:	08 96       	adiw	r24, 0x08	; 8
     2bc:	0f b6       	in	r0, 0x3f	; 63
     2be:	f8 94       	cli
     2c0:	9e bf       	out	0x3e, r25	; 62
     2c2:	0f be       	out	0x3f, r0	; 63
     2c4:	8d bf       	out	0x3d, r24	; 61
     2c6:	21 96       	adiw	r28, 0x01	; 1
     2c8:	c1 15       	cp	r28, r1
     2ca:	98 e0       	ldi	r25, 0x08	; 8
     2cc:	d9 07       	cpc	r29, r25
     2ce:	f9 f6       	brne	.-66     	; 0x28e <xmemTest+0x2a>
     2d0:	e1 2c       	mov	r14, r1
     2d2:	f1 2c       	mov	r15, r1
     2d4:	c0 e0       	ldi	r28, 0x00	; 0
     2d6:	d0 e0       	ldi	r29, 0x00	; 0
     2d8:	0f 2e       	mov	r0, r31
     2da:	f9 eb       	ldi	r31, 0xB9	; 185
     2dc:	cf 2e       	mov	r12, r31
     2de:	f1 e0       	ldi	r31, 0x01	; 1
     2e0:	df 2e       	mov	r13, r31
     2e2:	f0 2d       	mov	r31, r0
     2e4:	8c 2f       	mov	r24, r28
     2e6:	80 95       	com	r24
     2e8:	fe 01       	movw	r30, r28
     2ea:	f8 5e       	subi	r31, 0xE8	; 232
     2ec:	90 81       	ld	r25, Z
     2ee:	89 17       	cp	r24, r25
     2f0:	a9 f0       	breq	.+42     	; 0x31c <xmemTest+0xb8>
     2f2:	90 81       	ld	r25, Z
     2f4:	1f 92       	push	r1
     2f6:	8f 93       	push	r24
     2f8:	1f 92       	push	r1
     2fa:	9f 93       	push	r25
     2fc:	df 93       	push	r29
     2fe:	cf 93       	push	r28
     300:	df 92       	push	r13
     302:	cf 92       	push	r12
     304:	37 d4       	rcall	.+2158   	; 0xb74 <printf>
     306:	8f ef       	ldi	r24, 0xFF	; 255
     308:	e8 1a       	sub	r14, r24
     30a:	f8 0a       	sbc	r15, r24
     30c:	8d b7       	in	r24, 0x3d	; 61
     30e:	9e b7       	in	r25, 0x3e	; 62
     310:	08 96       	adiw	r24, 0x08	; 8
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	f8 94       	cli
     316:	9e bf       	out	0x3e, r25	; 62
     318:	0f be       	out	0x3f, r0	; 63
     31a:	8d bf       	out	0x3d, r24	; 61
     31c:	21 96       	adiw	r28, 0x01	; 1
     31e:	c1 15       	cp	r28, r1
     320:	98 e0       	ldi	r25, 0x08	; 8
     322:	d9 07       	cpc	r29, r25
     324:	f9 f6       	brne	.-66     	; 0x2e4 <xmemTest+0x80>
     326:	ff 92       	push	r15
     328:	ef 92       	push	r14
     32a:	1f 93       	push	r17
     32c:	0f 93       	push	r16
     32e:	88 ef       	ldi	r24, 0xF8	; 248
     330:	91 e0       	ldi	r25, 0x01	; 1
     332:	9f 93       	push	r25
     334:	8f 93       	push	r24
     336:	1e d4       	rcall	.+2108   	; 0xb74 <printf>
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	0f 90       	pop	r0
     344:	df 91       	pop	r29
     346:	cf 91       	pop	r28
     348:	1f 91       	pop	r17
     34a:	0f 91       	pop	r16
     34c:	ff 90       	pop	r15
     34e:	ef 90       	pop	r14
     350:	df 90       	pop	r13
     352:	cf 90       	pop	r12
     354:	08 95       	ret

00000356 <xmemExampleFunction>:
     356:	bf 92       	push	r11
     358:	cf 92       	push	r12
     35a:	df 92       	push	r13
     35c:	ef 92       	push	r14
     35e:	ff 92       	push	r15
     360:	0f 93       	push	r16
     362:	1f 93       	push	r17
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	88 e4       	ldi	r24, 0x48	; 72
     36a:	92 e0       	ldi	r25, 0x02	; 2
     36c:	14 d4       	rcall	.+2088   	; 0xb96 <puts>
     36e:	80 e4       	ldi	r24, 0x40	; 64
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	8f d2       	rcall	.+1310   	; 0x892 <malloc>
     374:	7c 01       	movw	r14, r24
     376:	ff 92       	push	r15
     378:	8f 93       	push	r24
     37a:	1f 92       	push	r1
     37c:	80 e4       	ldi	r24, 0x40	; 64
     37e:	8f 93       	push	r24
     380:	83 e6       	ldi	r24, 0x63	; 99
     382:	92 e0       	ldi	r25, 0x02	; 2
     384:	9f 93       	push	r25
     386:	8f 93       	push	r24
     388:	f5 d3       	rcall	.+2026   	; 0xb74 <printf>
     38a:	0f 90       	pop	r0
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
     394:	0f 90       	pop	r0
     396:	f7 01       	movw	r30, r14
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	11 92       	st	Z+, r1
     39c:	8f 5f       	subi	r24, 0xFF	; 255
     39e:	80 34       	cpi	r24, 0x40	; 64
     3a0:	e1 f7       	brne	.-8      	; 0x39a <xmemExampleFunction+0x44>
     3a2:	58 c0       	rjmp	.+176    	; 0x454 <xmemExampleFunction+0xfe>
     3a4:	f8 01       	movw	r30, r16
     3a6:	81 91       	ld	r24, Z+
     3a8:	8f 01       	movw	r16, r30
     3aa:	1f 92       	push	r1
     3ac:	8f 93       	push	r24
     3ae:	df 93       	push	r29
     3b0:	cf 93       	push	r28
     3b2:	e0 d3       	rcall	.+1984   	; 0xb74 <printf>
     3b4:	0f 90       	pop	r0
     3b6:	0f 90       	pop	r0
     3b8:	0f 90       	pop	r0
     3ba:	0f 90       	pop	r0
     3bc:	8b 2d       	mov	r24, r11
     3be:	8f 70       	andi	r24, 0x0F	; 15
     3c0:	8f 30       	cpi	r24, 0x0F	; 15
     3c2:	19 f4       	brne	.+6      	; 0x3ca <xmemExampleFunction+0x74>
     3c4:	86 e3       	ldi	r24, 0x36	; 54
     3c6:	91 e0       	ldi	r25, 0x01	; 1
     3c8:	e6 d3       	rcall	.+1996   	; 0xb96 <puts>
     3ca:	b3 94       	inc	r11
     3cc:	e0 e4       	ldi	r30, 0x40	; 64
     3ce:	be 12       	cpse	r11, r30
     3d0:	e9 cf       	rjmp	.-46     	; 0x3a4 <xmemExampleFunction+0x4e>
     3d2:	ff 92       	push	r15
     3d4:	ef 92       	push	r14
     3d6:	1f 92       	push	r1
     3d8:	80 e4       	ldi	r24, 0x40	; 64
     3da:	8f 93       	push	r24
     3dc:	80 ea       	ldi	r24, 0xA0	; 160
     3de:	92 e0       	ldi	r25, 0x02	; 2
     3e0:	9f 93       	push	r25
     3e2:	8f 93       	push	r24
     3e4:	c7 d3       	rcall	.+1934   	; 0xb74 <printf>
     3e6:	0f 90       	pop	r0
     3e8:	0f 90       	pop	r0
     3ea:	0f 90       	pop	r0
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	0f 90       	pop	r0
     3f2:	f7 01       	movw	r30, r14
     3f4:	80 e0       	ldi	r24, 0x00	; 0
     3f6:	81 93       	st	Z+, r24
     3f8:	8f 5f       	subi	r24, 0xFF	; 255
     3fa:	80 34       	cpi	r24, 0x40	; 64
     3fc:	e1 f7       	brne	.-8      	; 0x3f6 <xmemExampleFunction+0xa0>
     3fe:	18 c0       	rjmp	.+48     	; 0x430 <xmemExampleFunction+0xda>
     400:	f8 01       	movw	r30, r16
     402:	81 91       	ld	r24, Z+
     404:	8f 01       	movw	r16, r30
     406:	1f 92       	push	r1
     408:	8f 93       	push	r24
     40a:	df 93       	push	r29
     40c:	cf 93       	push	r28
     40e:	b2 d3       	rcall	.+1892   	; 0xb74 <printf>
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
     414:	0f 90       	pop	r0
     416:	0f 90       	pop	r0
     418:	8f 2d       	mov	r24, r15
     41a:	8f 70       	andi	r24, 0x0F	; 15
     41c:	8f 30       	cpi	r24, 0x0F	; 15
     41e:	19 f4       	brne	.+6      	; 0x426 <xmemExampleFunction+0xd0>
     420:	86 e3       	ldi	r24, 0x36	; 54
     422:	91 e0       	ldi	r25, 0x01	; 1
     424:	b8 d3       	rcall	.+1904   	; 0xb96 <puts>
     426:	f3 94       	inc	r15
     428:	e0 e4       	ldi	r30, 0x40	; 64
     42a:	fe 12       	cpse	r15, r30
     42c:	e9 cf       	rjmp	.-46     	; 0x400 <xmemExampleFunction+0xaa>
     42e:	25 c0       	rjmp	.+74     	; 0x47a <xmemExampleFunction+0x124>
     430:	f7 01       	movw	r30, r14
     432:	80 81       	ld	r24, Z
     434:	1f 92       	push	r1
     436:	8f 93       	push	r24
     438:	8a e9       	ldi	r24, 0x9A	; 154
     43a:	92 e0       	ldi	r25, 0x02	; 2
     43c:	9f 93       	push	r25
     43e:	8f 93       	push	r24
     440:	99 d3       	rcall	.+1842   	; 0xb74 <printf>
     442:	0f 90       	pop	r0
     444:	0f 90       	pop	r0
     446:	0f 90       	pop	r0
     448:	0f 90       	pop	r0
     44a:	86 01       	movw	r16, r12
     44c:	f1 2c       	mov	r15, r1
     44e:	ca e9       	ldi	r28, 0x9A	; 154
     450:	d2 e0       	ldi	r29, 0x02	; 2
     452:	e9 cf       	rjmp	.-46     	; 0x426 <xmemExampleFunction+0xd0>
     454:	f7 01       	movw	r30, r14
     456:	81 91       	ld	r24, Z+
     458:	6f 01       	movw	r12, r30
     45a:	1f 92       	push	r1
     45c:	8f 93       	push	r24
     45e:	8a e9       	ldi	r24, 0x9A	; 154
     460:	92 e0       	ldi	r25, 0x02	; 2
     462:	9f 93       	push	r25
     464:	8f 93       	push	r24
     466:	86 d3       	rcall	.+1804   	; 0xb74 <printf>
     468:	0f 90       	pop	r0
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	0f 90       	pop	r0
     470:	86 01       	movw	r16, r12
     472:	b1 2c       	mov	r11, r1
     474:	ca e9       	ldi	r28, 0x9A	; 154
     476:	d2 e0       	ldi	r29, 0x02	; 2
     478:	a8 cf       	rjmp	.-176    	; 0x3ca <xmemExampleFunction+0x74>
     47a:	df 91       	pop	r29
     47c:	cf 91       	pop	r28
     47e:	1f 91       	pop	r17
     480:	0f 91       	pop	r16
     482:	ff 90       	pop	r15
     484:	ef 90       	pop	r14
     486:	df 90       	pop	r13
     488:	cf 90       	pop	r12
     48a:	bf 90       	pop	r11
     48c:	08 95       	ret

0000048e <xmemReadFrom>:
{
	//Start address for the xmem
	uint8_t *memoryPosition = 0x1800;
	
	//Read address from SRAM
	return memoryPosition[address];
     48e:	98 5e       	subi	r25, 0xE8	; 232
     490:	fc 01       	movw	r30, r24
     492:	80 81       	ld	r24, Z
}
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	08 95       	ret

00000498 <main>:
bool interruptOn=false;
uint8_t byteOfData=0;

//main function
int main (void)
{
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	00 d0       	rcall	.+0      	; 0x49e <main+0x6>
     49e:	cd b7       	in	r28, 0x3d	; 61
     4a0:	de b7       	in	r29, 0x3e	; 62
	// Initialise external memory interface // NB: "xmemInit()" must be called before any function that uses heap memory!!
	xmemInit();
     4a2:	da de       	rcall	.-588    	; 0x258 <xmemInit>
	
	// dummy for testing USART
	//char *dataString="\r......Booting up.\r";
		
	//init. USART
	usartInitialize();//--------*****-////TO DO: implement light diode blink if(usartInitialize()); else ERROR BLINK CODE.. also write reference for blinking code...
     4a4:	c7 de       	rcall	.-626    	; 0x234 <usartInitialize>
	
	//test external SRAM
	xmemTest();
     4a6:	de de       	rcall	.-580    	; 0x264 <xmemTest>
	xmemExampleFunction();
     4a8:	56 df       	rcall	.-340    	; 0x356 <xmemExampleFunction>
	printf("\n\r0x%02x",xmemReadFrom(5));
     4aa:	85 e0       	ldi	r24, 0x05	; 5
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	ef df       	rcall	.-34     	; 0x48e <xmemReadFrom>
     4b0:	9f 93       	push	r25
     4b2:	8f 93       	push	r24
     4b4:	88 e2       	ldi	r24, 0x28	; 40
     4b6:	93 e0       	ldi	r25, 0x03	; 3
     4b8:	9f 93       	push	r25
     4ba:	8f 93       	push	r24
     4bc:	5b d3       	rcall	.+1718   	; 0xb74 <printf>
	//vXMEMTestTask();
	
	
	
	uint8_t *test= malloc(4*sizeof(uint8_t));
     4be:	84 e0       	ldi	r24, 0x04	; 4
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	e7 d1       	rcall	.+974    	; 0x892 <malloc>
     4c4:	8c 01       	movw	r16, r24
	//uint8_t array[4];
	
	
	uint8_t buffer1=adcRead(ADC_CH1_JOY_Y_AXIS);
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	f0 dd       	rcall	.-1056   	; 0xaa <adcRead>
	uint8_t buffer2=adcRead(ADC_CH2_JOY_X_AXIS);
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	ee dd       	rcall	.-1060   	; 0xaa <adcRead>
	
	
	
	joystickCalibrate();
     4ce:	11 de       	rcall	.-990    	; 0xf2 <joystickCalibrate>
	int8_t x,y=0;
     4d0:	1a 82       	std	Y+2, r1	; 0x02
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	0f 90       	pop	r0
     4d8:	0f 90       	pop	r0
		buffer2=adcRead(ADC_CH2_JOY_X_AXIS);
		//printf("\n\rX POS: %d\n\r",buffer2);
		getXPosition(buffer2,&x);
		//printf("x POS: %d",x);
		getYPosition(buffer1,&y);
		printf("\n\ry = %d, x = %d, Unscaled_Y = %d, Uncaled_X = %d",y,x,test[2],test[3]);
     4da:	0f 2e       	mov	r0, r31
     4dc:	f1 e3       	ldi	r31, 0x31	; 49
     4de:	ef 2e       	mov	r14, r31
     4e0:	f3 e0       	ldi	r31, 0x03	; 3
     4e2:	ff 2e       	mov	r15, r31
     4e4:	f0 2d       	mov	r31, r0
	
	joystickCalibrate();
	int8_t x,y=0;
	while(true)
	{	
		test=joystickInitialize(test);
     4e6:	c8 01       	movw	r24, r16
     4e8:	f2 dd       	rcall	.-1052   	; 0xce <joystickInitialize>
     4ea:	8c 01       	movw	r16, r24
		//buffer1=(test[0]/2);
		//test= joystickInitialize();
		//printf("\n\r%d",test[0]);
		//printf("\n\r%d",buffer1);
		
		buffer1=adcRead(ADC_CH1_JOY_Y_AXIS);
     4ec:	80 e0       	ldi	r24, 0x00	; 0
     4ee:	dd dd       	rcall	.-1094   	; 0xaa <adcRead>
     4f0:	d8 2e       	mov	r13, r24
		buffer2=adcRead(ADC_CH2_JOY_X_AXIS);
     4f2:	81 e0       	ldi	r24, 0x01	; 1
     4f4:	da dd       	rcall	.-1100   	; 0xaa <adcRead>
		//printf("\n\rX POS: %d\n\r",buffer2);
		getXPosition(buffer2,&x);
     4f6:	be 01       	movw	r22, r28
     4f8:	6f 5f       	subi	r22, 0xFF	; 255
     4fa:	7f 4f       	sbci	r23, 0xFF	; 255
     4fc:	6d de       	rcall	.-806    	; 0x1d8 <getXPosition>
		//printf("x POS: %d",x);
		getYPosition(buffer1,&y);
     4fe:	be 01       	movw	r22, r28
     500:	6e 5f       	subi	r22, 0xFE	; 254
     502:	7f 4f       	sbci	r23, 0xFF	; 255
     504:	8d 2d       	mov	r24, r13
     506:	7d de       	rcall	.-774    	; 0x202 <getYPosition>
		printf("\n\ry = %d, x = %d, Unscaled_Y = %d, Uncaled_X = %d",y,x,test[2],test[3]);
     508:	f8 01       	movw	r30, r16
     50a:	83 81       	ldd	r24, Z+3	; 0x03
     50c:	1f 92       	push	r1
     50e:	8f 93       	push	r24
     510:	82 81       	ldd	r24, Z+2	; 0x02
     512:	1f 92       	push	r1
     514:	8f 93       	push	r24
     516:	29 81       	ldd	r18, Y+1	; 0x01
     518:	82 2f       	mov	r24, r18
     51a:	99 27       	eor	r25, r25
     51c:	87 fd       	sbrc	r24, 7
     51e:	90 95       	com	r25
     520:	9f 93       	push	r25
     522:	2f 93       	push	r18
     524:	2a 81       	ldd	r18, Y+2	; 0x02
     526:	82 2f       	mov	r24, r18
     528:	99 27       	eor	r25, r25
     52a:	87 fd       	sbrc	r24, 7
     52c:	90 95       	com	r25
     52e:	9f 93       	push	r25
     530:	2f 93       	push	r18
     532:	ff 92       	push	r15
     534:	ef 92       	push	r14
     536:	1e d3       	rcall	.+1596   	; 0xb74 <printf>
     538:	ff ef       	ldi	r31, 0xFF	; 255
     53a:	2f e3       	ldi	r18, 0x3F	; 63
     53c:	82 e0       	ldi	r24, 0x02	; 2
     53e:	f1 50       	subi	r31, 0x01	; 1
     540:	20 40       	sbci	r18, 0x00	; 0
     542:	80 40       	sbci	r24, 0x00	; 0
     544:	e1 f7       	brne	.-8      	; 0x53e <__stack+0x3f>
     546:	00 c0       	rjmp	.+0      	; 0x548 <__stack+0x49>
     548:	00 00       	nop
     54a:	0f b6       	in	r0, 0x3f	; 63
     54c:	f8 94       	cli
     54e:	de bf       	out	0x3e, r29	; 62
     550:	0f be       	out	0x3f, r0	; 63
     552:	cd bf       	out	0x3d, r28	; 61
     554:	c8 cf       	rjmp	.-112    	; 0x4e6 <main+0x4e>

00000556 <__vector_19>:

}

//interrupt function
ISR (USART0_RXC_vect,ISR_BLOCK)
{
     556:	1f 92       	push	r1
     558:	0f 92       	push	r0
     55a:	0f b6       	in	r0, 0x3f	; 63
     55c:	0f 92       	push	r0
     55e:	11 24       	eor	r1, r1
     560:	8f 93       	push	r24
	if (interruptOn)
     562:	80 91 65 03 	lds	r24, 0x0365
     566:	88 23       	and	r24, r24
     568:	21 f0       	breq	.+8      	; 0x572 <__vector_19+0x1c>
	{
		byteOfData=UDR0;//grab byte
     56a:	8c b1       	in	r24, 0x0c	; 12
     56c:	80 93 64 03 	sts	0x0364, r24
		UDR0=byteOfData;//echo grabbed byte
     570:	8c b9       	out	0x0c, r24	; 12
	}
}
     572:	8f 91       	pop	r24
     574:	0f 90       	pop	r0
     576:	0f be       	out	0x3f, r0	; 63
     578:	0f 90       	pop	r0
     57a:	1f 90       	pop	r1
     57c:	18 95       	reti

0000057e <__divsf3>:
     57e:	0c d0       	rcall	.+24     	; 0x598 <__divsf3x>
     580:	eb c0       	rjmp	.+470    	; 0x758 <__fp_round>
     582:	e3 d0       	rcall	.+454    	; 0x74a <__fp_pscB>
     584:	40 f0       	brcs	.+16     	; 0x596 <__divsf3+0x18>
     586:	da d0       	rcall	.+436    	; 0x73c <__fp_pscA>
     588:	30 f0       	brcs	.+12     	; 0x596 <__divsf3+0x18>
     58a:	21 f4       	brne	.+8      	; 0x594 <__divsf3+0x16>
     58c:	5f 3f       	cpi	r21, 0xFF	; 255
     58e:	19 f0       	breq	.+6      	; 0x596 <__divsf3+0x18>
     590:	cc c0       	rjmp	.+408    	; 0x72a <__fp_inf>
     592:	51 11       	cpse	r21, r1
     594:	15 c1       	rjmp	.+554    	; 0x7c0 <__fp_szero>
     596:	cf c0       	rjmp	.+414    	; 0x736 <__fp_nan>

00000598 <__divsf3x>:
     598:	f0 d0       	rcall	.+480    	; 0x77a <__fp_split3>
     59a:	98 f3       	brcs	.-26     	; 0x582 <__divsf3+0x4>

0000059c <__divsf3_pse>:
     59c:	99 23       	and	r25, r25
     59e:	c9 f3       	breq	.-14     	; 0x592 <__divsf3+0x14>
     5a0:	55 23       	and	r21, r21
     5a2:	b1 f3       	breq	.-20     	; 0x590 <__divsf3+0x12>
     5a4:	95 1b       	sub	r25, r21
     5a6:	55 0b       	sbc	r21, r21
     5a8:	bb 27       	eor	r27, r27
     5aa:	aa 27       	eor	r26, r26
     5ac:	62 17       	cp	r22, r18
     5ae:	73 07       	cpc	r23, r19
     5b0:	84 07       	cpc	r24, r20
     5b2:	38 f0       	brcs	.+14     	; 0x5c2 <__divsf3_pse+0x26>
     5b4:	9f 5f       	subi	r25, 0xFF	; 255
     5b6:	5f 4f       	sbci	r21, 0xFF	; 255
     5b8:	22 0f       	add	r18, r18
     5ba:	33 1f       	adc	r19, r19
     5bc:	44 1f       	adc	r20, r20
     5be:	aa 1f       	adc	r26, r26
     5c0:	a9 f3       	breq	.-22     	; 0x5ac <__divsf3_pse+0x10>
     5c2:	33 d0       	rcall	.+102    	; 0x62a <__divsf3_pse+0x8e>
     5c4:	0e 2e       	mov	r0, r30
     5c6:	3a f0       	brmi	.+14     	; 0x5d6 <__divsf3_pse+0x3a>
     5c8:	e0 e8       	ldi	r30, 0x80	; 128
     5ca:	30 d0       	rcall	.+96     	; 0x62c <__divsf3_pse+0x90>
     5cc:	91 50       	subi	r25, 0x01	; 1
     5ce:	50 40       	sbci	r21, 0x00	; 0
     5d0:	e6 95       	lsr	r30
     5d2:	00 1c       	adc	r0, r0
     5d4:	ca f7       	brpl	.-14     	; 0x5c8 <__divsf3_pse+0x2c>
     5d6:	29 d0       	rcall	.+82     	; 0x62a <__divsf3_pse+0x8e>
     5d8:	fe 2f       	mov	r31, r30
     5da:	27 d0       	rcall	.+78     	; 0x62a <__divsf3_pse+0x8e>
     5dc:	66 0f       	add	r22, r22
     5de:	77 1f       	adc	r23, r23
     5e0:	88 1f       	adc	r24, r24
     5e2:	bb 1f       	adc	r27, r27
     5e4:	26 17       	cp	r18, r22
     5e6:	37 07       	cpc	r19, r23
     5e8:	48 07       	cpc	r20, r24
     5ea:	ab 07       	cpc	r26, r27
     5ec:	b0 e8       	ldi	r27, 0x80	; 128
     5ee:	09 f0       	breq	.+2      	; 0x5f2 <__divsf3_pse+0x56>
     5f0:	bb 0b       	sbc	r27, r27
     5f2:	80 2d       	mov	r24, r0
     5f4:	bf 01       	movw	r22, r30
     5f6:	ff 27       	eor	r31, r31
     5f8:	93 58       	subi	r25, 0x83	; 131
     5fa:	5f 4f       	sbci	r21, 0xFF	; 255
     5fc:	2a f0       	brmi	.+10     	; 0x608 <__divsf3_pse+0x6c>
     5fe:	9e 3f       	cpi	r25, 0xFE	; 254
     600:	51 05       	cpc	r21, r1
     602:	68 f0       	brcs	.+26     	; 0x61e <__divsf3_pse+0x82>
     604:	92 c0       	rjmp	.+292    	; 0x72a <__fp_inf>
     606:	dc c0       	rjmp	.+440    	; 0x7c0 <__fp_szero>
     608:	5f 3f       	cpi	r21, 0xFF	; 255
     60a:	ec f3       	brlt	.-6      	; 0x606 <__divsf3_pse+0x6a>
     60c:	98 3e       	cpi	r25, 0xE8	; 232
     60e:	dc f3       	brlt	.-10     	; 0x606 <__divsf3_pse+0x6a>
     610:	86 95       	lsr	r24
     612:	77 95       	ror	r23
     614:	67 95       	ror	r22
     616:	b7 95       	ror	r27
     618:	f7 95       	ror	r31
     61a:	9f 5f       	subi	r25, 0xFF	; 255
     61c:	c9 f7       	brne	.-14     	; 0x610 <__divsf3_pse+0x74>
     61e:	88 0f       	add	r24, r24
     620:	91 1d       	adc	r25, r1
     622:	96 95       	lsr	r25
     624:	87 95       	ror	r24
     626:	97 f9       	bld	r25, 7
     628:	08 95       	ret
     62a:	e1 e0       	ldi	r30, 0x01	; 1
     62c:	66 0f       	add	r22, r22
     62e:	77 1f       	adc	r23, r23
     630:	88 1f       	adc	r24, r24
     632:	bb 1f       	adc	r27, r27
     634:	62 17       	cp	r22, r18
     636:	73 07       	cpc	r23, r19
     638:	84 07       	cpc	r24, r20
     63a:	ba 07       	cpc	r27, r26
     63c:	20 f0       	brcs	.+8      	; 0x646 <__divsf3_pse+0xaa>
     63e:	62 1b       	sub	r22, r18
     640:	73 0b       	sbc	r23, r19
     642:	84 0b       	sbc	r24, r20
     644:	ba 0b       	sbc	r27, r26
     646:	ee 1f       	adc	r30, r30
     648:	88 f7       	brcc	.-30     	; 0x62c <__divsf3_pse+0x90>
     64a:	e0 95       	com	r30
     64c:	08 95       	ret

0000064e <__fixsfsi>:
     64e:	04 d0       	rcall	.+8      	; 0x658 <__fixunssfsi>
     650:	68 94       	set
     652:	b1 11       	cpse	r27, r1
     654:	b5 c0       	rjmp	.+362    	; 0x7c0 <__fp_szero>
     656:	08 95       	ret

00000658 <__fixunssfsi>:
     658:	98 d0       	rcall	.+304    	; 0x78a <__fp_splitA>
     65a:	88 f0       	brcs	.+34     	; 0x67e <__fixunssfsi+0x26>
     65c:	9f 57       	subi	r25, 0x7F	; 127
     65e:	90 f0       	brcs	.+36     	; 0x684 <__fixunssfsi+0x2c>
     660:	b9 2f       	mov	r27, r25
     662:	99 27       	eor	r25, r25
     664:	b7 51       	subi	r27, 0x17	; 23
     666:	a0 f0       	brcs	.+40     	; 0x690 <__fixunssfsi+0x38>
     668:	d1 f0       	breq	.+52     	; 0x69e <__fixunssfsi+0x46>
     66a:	66 0f       	add	r22, r22
     66c:	77 1f       	adc	r23, r23
     66e:	88 1f       	adc	r24, r24
     670:	99 1f       	adc	r25, r25
     672:	1a f0       	brmi	.+6      	; 0x67a <__fixunssfsi+0x22>
     674:	ba 95       	dec	r27
     676:	c9 f7       	brne	.-14     	; 0x66a <__fixunssfsi+0x12>
     678:	12 c0       	rjmp	.+36     	; 0x69e <__fixunssfsi+0x46>
     67a:	b1 30       	cpi	r27, 0x01	; 1
     67c:	81 f0       	breq	.+32     	; 0x69e <__fixunssfsi+0x46>
     67e:	9f d0       	rcall	.+318    	; 0x7be <__fp_zero>
     680:	b1 e0       	ldi	r27, 0x01	; 1
     682:	08 95       	ret
     684:	9c c0       	rjmp	.+312    	; 0x7be <__fp_zero>
     686:	67 2f       	mov	r22, r23
     688:	78 2f       	mov	r23, r24
     68a:	88 27       	eor	r24, r24
     68c:	b8 5f       	subi	r27, 0xF8	; 248
     68e:	39 f0       	breq	.+14     	; 0x69e <__fixunssfsi+0x46>
     690:	b9 3f       	cpi	r27, 0xF9	; 249
     692:	cc f3       	brlt	.-14     	; 0x686 <__fixunssfsi+0x2e>
     694:	86 95       	lsr	r24
     696:	77 95       	ror	r23
     698:	67 95       	ror	r22
     69a:	b3 95       	inc	r27
     69c:	d9 f7       	brne	.-10     	; 0x694 <__fixunssfsi+0x3c>
     69e:	3e f4       	brtc	.+14     	; 0x6ae <__fixunssfsi+0x56>
     6a0:	90 95       	com	r25
     6a2:	80 95       	com	r24
     6a4:	70 95       	com	r23
     6a6:	61 95       	neg	r22
     6a8:	7f 4f       	sbci	r23, 0xFF	; 255
     6aa:	8f 4f       	sbci	r24, 0xFF	; 255
     6ac:	9f 4f       	sbci	r25, 0xFF	; 255
     6ae:	08 95       	ret

000006b0 <__floatunsisf>:
     6b0:	e8 94       	clt
     6b2:	09 c0       	rjmp	.+18     	; 0x6c6 <__floatsisf+0x12>

000006b4 <__floatsisf>:
     6b4:	97 fb       	bst	r25, 7
     6b6:	3e f4       	brtc	.+14     	; 0x6c6 <__floatsisf+0x12>
     6b8:	90 95       	com	r25
     6ba:	80 95       	com	r24
     6bc:	70 95       	com	r23
     6be:	61 95       	neg	r22
     6c0:	7f 4f       	sbci	r23, 0xFF	; 255
     6c2:	8f 4f       	sbci	r24, 0xFF	; 255
     6c4:	9f 4f       	sbci	r25, 0xFF	; 255
     6c6:	99 23       	and	r25, r25
     6c8:	a9 f0       	breq	.+42     	; 0x6f4 <__floatsisf+0x40>
     6ca:	f9 2f       	mov	r31, r25
     6cc:	96 e9       	ldi	r25, 0x96	; 150
     6ce:	bb 27       	eor	r27, r27
     6d0:	93 95       	inc	r25
     6d2:	f6 95       	lsr	r31
     6d4:	87 95       	ror	r24
     6d6:	77 95       	ror	r23
     6d8:	67 95       	ror	r22
     6da:	b7 95       	ror	r27
     6dc:	f1 11       	cpse	r31, r1
     6de:	f8 cf       	rjmp	.-16     	; 0x6d0 <__floatsisf+0x1c>
     6e0:	fa f4       	brpl	.+62     	; 0x720 <__floatsisf+0x6c>
     6e2:	bb 0f       	add	r27, r27
     6e4:	11 f4       	brne	.+4      	; 0x6ea <__floatsisf+0x36>
     6e6:	60 ff       	sbrs	r22, 0
     6e8:	1b c0       	rjmp	.+54     	; 0x720 <__floatsisf+0x6c>
     6ea:	6f 5f       	subi	r22, 0xFF	; 255
     6ec:	7f 4f       	sbci	r23, 0xFF	; 255
     6ee:	8f 4f       	sbci	r24, 0xFF	; 255
     6f0:	9f 4f       	sbci	r25, 0xFF	; 255
     6f2:	16 c0       	rjmp	.+44     	; 0x720 <__floatsisf+0x6c>
     6f4:	88 23       	and	r24, r24
     6f6:	11 f0       	breq	.+4      	; 0x6fc <__floatsisf+0x48>
     6f8:	96 e9       	ldi	r25, 0x96	; 150
     6fa:	11 c0       	rjmp	.+34     	; 0x71e <__floatsisf+0x6a>
     6fc:	77 23       	and	r23, r23
     6fe:	21 f0       	breq	.+8      	; 0x708 <__floatsisf+0x54>
     700:	9e e8       	ldi	r25, 0x8E	; 142
     702:	87 2f       	mov	r24, r23
     704:	76 2f       	mov	r23, r22
     706:	05 c0       	rjmp	.+10     	; 0x712 <__floatsisf+0x5e>
     708:	66 23       	and	r22, r22
     70a:	71 f0       	breq	.+28     	; 0x728 <__floatsisf+0x74>
     70c:	96 e8       	ldi	r25, 0x86	; 134
     70e:	86 2f       	mov	r24, r22
     710:	70 e0       	ldi	r23, 0x00	; 0
     712:	60 e0       	ldi	r22, 0x00	; 0
     714:	2a f0       	brmi	.+10     	; 0x720 <__floatsisf+0x6c>
     716:	9a 95       	dec	r25
     718:	66 0f       	add	r22, r22
     71a:	77 1f       	adc	r23, r23
     71c:	88 1f       	adc	r24, r24
     71e:	da f7       	brpl	.-10     	; 0x716 <__floatsisf+0x62>
     720:	88 0f       	add	r24, r24
     722:	96 95       	lsr	r25
     724:	87 95       	ror	r24
     726:	97 f9       	bld	r25, 7
     728:	08 95       	ret

0000072a <__fp_inf>:
     72a:	97 f9       	bld	r25, 7
     72c:	9f 67       	ori	r25, 0x7F	; 127
     72e:	80 e8       	ldi	r24, 0x80	; 128
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	08 95       	ret

00000736 <__fp_nan>:
     736:	9f ef       	ldi	r25, 0xFF	; 255
     738:	80 ec       	ldi	r24, 0xC0	; 192
     73a:	08 95       	ret

0000073c <__fp_pscA>:
     73c:	00 24       	eor	r0, r0
     73e:	0a 94       	dec	r0
     740:	16 16       	cp	r1, r22
     742:	17 06       	cpc	r1, r23
     744:	18 06       	cpc	r1, r24
     746:	09 06       	cpc	r0, r25
     748:	08 95       	ret

0000074a <__fp_pscB>:
     74a:	00 24       	eor	r0, r0
     74c:	0a 94       	dec	r0
     74e:	12 16       	cp	r1, r18
     750:	13 06       	cpc	r1, r19
     752:	14 06       	cpc	r1, r20
     754:	05 06       	cpc	r0, r21
     756:	08 95       	ret

00000758 <__fp_round>:
     758:	09 2e       	mov	r0, r25
     75a:	03 94       	inc	r0
     75c:	00 0c       	add	r0, r0
     75e:	11 f4       	brne	.+4      	; 0x764 <__fp_round+0xc>
     760:	88 23       	and	r24, r24
     762:	52 f0       	brmi	.+20     	; 0x778 <__fp_round+0x20>
     764:	bb 0f       	add	r27, r27
     766:	40 f4       	brcc	.+16     	; 0x778 <__fp_round+0x20>
     768:	bf 2b       	or	r27, r31
     76a:	11 f4       	brne	.+4      	; 0x770 <__fp_round+0x18>
     76c:	60 ff       	sbrs	r22, 0
     76e:	04 c0       	rjmp	.+8      	; 0x778 <__fp_round+0x20>
     770:	6f 5f       	subi	r22, 0xFF	; 255
     772:	7f 4f       	sbci	r23, 0xFF	; 255
     774:	8f 4f       	sbci	r24, 0xFF	; 255
     776:	9f 4f       	sbci	r25, 0xFF	; 255
     778:	08 95       	ret

0000077a <__fp_split3>:
     77a:	57 fd       	sbrc	r21, 7
     77c:	90 58       	subi	r25, 0x80	; 128
     77e:	44 0f       	add	r20, r20
     780:	55 1f       	adc	r21, r21
     782:	59 f0       	breq	.+22     	; 0x79a <__fp_splitA+0x10>
     784:	5f 3f       	cpi	r21, 0xFF	; 255
     786:	71 f0       	breq	.+28     	; 0x7a4 <__fp_splitA+0x1a>
     788:	47 95       	ror	r20

0000078a <__fp_splitA>:
     78a:	88 0f       	add	r24, r24
     78c:	97 fb       	bst	r25, 7
     78e:	99 1f       	adc	r25, r25
     790:	61 f0       	breq	.+24     	; 0x7aa <__fp_splitA+0x20>
     792:	9f 3f       	cpi	r25, 0xFF	; 255
     794:	79 f0       	breq	.+30     	; 0x7b4 <__fp_splitA+0x2a>
     796:	87 95       	ror	r24
     798:	08 95       	ret
     79a:	12 16       	cp	r1, r18
     79c:	13 06       	cpc	r1, r19
     79e:	14 06       	cpc	r1, r20
     7a0:	55 1f       	adc	r21, r21
     7a2:	f2 cf       	rjmp	.-28     	; 0x788 <__fp_split3+0xe>
     7a4:	46 95       	lsr	r20
     7a6:	f1 df       	rcall	.-30     	; 0x78a <__fp_splitA>
     7a8:	08 c0       	rjmp	.+16     	; 0x7ba <__fp_splitA+0x30>
     7aa:	16 16       	cp	r1, r22
     7ac:	17 06       	cpc	r1, r23
     7ae:	18 06       	cpc	r1, r24
     7b0:	99 1f       	adc	r25, r25
     7b2:	f1 cf       	rjmp	.-30     	; 0x796 <__fp_splitA+0xc>
     7b4:	86 95       	lsr	r24
     7b6:	71 05       	cpc	r23, r1
     7b8:	61 05       	cpc	r22, r1
     7ba:	08 94       	sec
     7bc:	08 95       	ret

000007be <__fp_zero>:
     7be:	e8 94       	clt

000007c0 <__fp_szero>:
     7c0:	bb 27       	eor	r27, r27
     7c2:	66 27       	eor	r22, r22
     7c4:	77 27       	eor	r23, r23
     7c6:	cb 01       	movw	r24, r22
     7c8:	97 f9       	bld	r25, 7
     7ca:	08 95       	ret

000007cc <__mulsf3>:
     7cc:	0b d0       	rcall	.+22     	; 0x7e4 <__mulsf3x>
     7ce:	c4 cf       	rjmp	.-120    	; 0x758 <__fp_round>
     7d0:	b5 df       	rcall	.-150    	; 0x73c <__fp_pscA>
     7d2:	28 f0       	brcs	.+10     	; 0x7de <__mulsf3+0x12>
     7d4:	ba df       	rcall	.-140    	; 0x74a <__fp_pscB>
     7d6:	18 f0       	brcs	.+6      	; 0x7de <__mulsf3+0x12>
     7d8:	95 23       	and	r25, r21
     7da:	09 f0       	breq	.+2      	; 0x7de <__mulsf3+0x12>
     7dc:	a6 cf       	rjmp	.-180    	; 0x72a <__fp_inf>
     7de:	ab cf       	rjmp	.-170    	; 0x736 <__fp_nan>
     7e0:	11 24       	eor	r1, r1
     7e2:	ee cf       	rjmp	.-36     	; 0x7c0 <__fp_szero>

000007e4 <__mulsf3x>:
     7e4:	ca df       	rcall	.-108    	; 0x77a <__fp_split3>
     7e6:	a0 f3       	brcs	.-24     	; 0x7d0 <__mulsf3+0x4>

000007e8 <__mulsf3_pse>:
     7e8:	95 9f       	mul	r25, r21
     7ea:	d1 f3       	breq	.-12     	; 0x7e0 <__mulsf3+0x14>
     7ec:	95 0f       	add	r25, r21
     7ee:	50 e0       	ldi	r21, 0x00	; 0
     7f0:	55 1f       	adc	r21, r21
     7f2:	62 9f       	mul	r22, r18
     7f4:	f0 01       	movw	r30, r0
     7f6:	72 9f       	mul	r23, r18
     7f8:	bb 27       	eor	r27, r27
     7fa:	f0 0d       	add	r31, r0
     7fc:	b1 1d       	adc	r27, r1
     7fe:	63 9f       	mul	r22, r19
     800:	aa 27       	eor	r26, r26
     802:	f0 0d       	add	r31, r0
     804:	b1 1d       	adc	r27, r1
     806:	aa 1f       	adc	r26, r26
     808:	64 9f       	mul	r22, r20
     80a:	66 27       	eor	r22, r22
     80c:	b0 0d       	add	r27, r0
     80e:	a1 1d       	adc	r26, r1
     810:	66 1f       	adc	r22, r22
     812:	82 9f       	mul	r24, r18
     814:	22 27       	eor	r18, r18
     816:	b0 0d       	add	r27, r0
     818:	a1 1d       	adc	r26, r1
     81a:	62 1f       	adc	r22, r18
     81c:	73 9f       	mul	r23, r19
     81e:	b0 0d       	add	r27, r0
     820:	a1 1d       	adc	r26, r1
     822:	62 1f       	adc	r22, r18
     824:	83 9f       	mul	r24, r19
     826:	a0 0d       	add	r26, r0
     828:	61 1d       	adc	r22, r1
     82a:	22 1f       	adc	r18, r18
     82c:	74 9f       	mul	r23, r20
     82e:	33 27       	eor	r19, r19
     830:	a0 0d       	add	r26, r0
     832:	61 1d       	adc	r22, r1
     834:	23 1f       	adc	r18, r19
     836:	84 9f       	mul	r24, r20
     838:	60 0d       	add	r22, r0
     83a:	21 1d       	adc	r18, r1
     83c:	82 2f       	mov	r24, r18
     83e:	76 2f       	mov	r23, r22
     840:	6a 2f       	mov	r22, r26
     842:	11 24       	eor	r1, r1
     844:	9f 57       	subi	r25, 0x7F	; 127
     846:	50 40       	sbci	r21, 0x00	; 0
     848:	8a f0       	brmi	.+34     	; 0x86c <__mulsf3_pse+0x84>
     84a:	e1 f0       	breq	.+56     	; 0x884 <__mulsf3_pse+0x9c>
     84c:	88 23       	and	r24, r24
     84e:	4a f0       	brmi	.+18     	; 0x862 <__mulsf3_pse+0x7a>
     850:	ee 0f       	add	r30, r30
     852:	ff 1f       	adc	r31, r31
     854:	bb 1f       	adc	r27, r27
     856:	66 1f       	adc	r22, r22
     858:	77 1f       	adc	r23, r23
     85a:	88 1f       	adc	r24, r24
     85c:	91 50       	subi	r25, 0x01	; 1
     85e:	50 40       	sbci	r21, 0x00	; 0
     860:	a9 f7       	brne	.-22     	; 0x84c <__mulsf3_pse+0x64>
     862:	9e 3f       	cpi	r25, 0xFE	; 254
     864:	51 05       	cpc	r21, r1
     866:	70 f0       	brcs	.+28     	; 0x884 <__mulsf3_pse+0x9c>
     868:	60 cf       	rjmp	.-320    	; 0x72a <__fp_inf>
     86a:	aa cf       	rjmp	.-172    	; 0x7c0 <__fp_szero>
     86c:	5f 3f       	cpi	r21, 0xFF	; 255
     86e:	ec f3       	brlt	.-6      	; 0x86a <__mulsf3_pse+0x82>
     870:	98 3e       	cpi	r25, 0xE8	; 232
     872:	dc f3       	brlt	.-10     	; 0x86a <__mulsf3_pse+0x82>
     874:	86 95       	lsr	r24
     876:	77 95       	ror	r23
     878:	67 95       	ror	r22
     87a:	b7 95       	ror	r27
     87c:	f7 95       	ror	r31
     87e:	e7 95       	ror	r30
     880:	9f 5f       	subi	r25, 0xFF	; 255
     882:	c1 f7       	brne	.-16     	; 0x874 <__mulsf3_pse+0x8c>
     884:	fe 2b       	or	r31, r30
     886:	88 0f       	add	r24, r24
     888:	91 1d       	adc	r25, r1
     88a:	96 95       	lsr	r25
     88c:	87 95       	ror	r24
     88e:	97 f9       	bld	r25, 7
     890:	08 95       	ret

00000892 <malloc>:
     892:	cf 93       	push	r28
     894:	df 93       	push	r29
     896:	82 30       	cpi	r24, 0x02	; 2
     898:	91 05       	cpc	r25, r1
     89a:	10 f4       	brcc	.+4      	; 0x8a0 <malloc+0xe>
     89c:	82 e0       	ldi	r24, 0x02	; 2
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	e0 91 6e 03 	lds	r30, 0x036E
     8a4:	f0 91 6f 03 	lds	r31, 0x036F
     8a8:	20 e0       	ldi	r18, 0x00	; 0
     8aa:	30 e0       	ldi	r19, 0x00	; 0
     8ac:	a0 e0       	ldi	r26, 0x00	; 0
     8ae:	b0 e0       	ldi	r27, 0x00	; 0
     8b0:	30 97       	sbiw	r30, 0x00	; 0
     8b2:	39 f1       	breq	.+78     	; 0x902 <malloc+0x70>
     8b4:	40 81       	ld	r20, Z
     8b6:	51 81       	ldd	r21, Z+1	; 0x01
     8b8:	48 17       	cp	r20, r24
     8ba:	59 07       	cpc	r21, r25
     8bc:	b8 f0       	brcs	.+46     	; 0x8ec <malloc+0x5a>
     8be:	48 17       	cp	r20, r24
     8c0:	59 07       	cpc	r21, r25
     8c2:	71 f4       	brne	.+28     	; 0x8e0 <malloc+0x4e>
     8c4:	82 81       	ldd	r24, Z+2	; 0x02
     8c6:	93 81       	ldd	r25, Z+3	; 0x03
     8c8:	10 97       	sbiw	r26, 0x00	; 0
     8ca:	29 f0       	breq	.+10     	; 0x8d6 <malloc+0x44>
     8cc:	13 96       	adiw	r26, 0x03	; 3
     8ce:	9c 93       	st	X, r25
     8d0:	8e 93       	st	-X, r24
     8d2:	12 97       	sbiw	r26, 0x02	; 2
     8d4:	2c c0       	rjmp	.+88     	; 0x92e <malloc+0x9c>
     8d6:	90 93 6f 03 	sts	0x036F, r25
     8da:	80 93 6e 03 	sts	0x036E, r24
     8de:	27 c0       	rjmp	.+78     	; 0x92e <malloc+0x9c>
     8e0:	21 15       	cp	r18, r1
     8e2:	31 05       	cpc	r19, r1
     8e4:	31 f0       	breq	.+12     	; 0x8f2 <malloc+0x60>
     8e6:	42 17       	cp	r20, r18
     8e8:	53 07       	cpc	r21, r19
     8ea:	18 f0       	brcs	.+6      	; 0x8f2 <malloc+0x60>
     8ec:	a9 01       	movw	r20, r18
     8ee:	db 01       	movw	r26, r22
     8f0:	01 c0       	rjmp	.+2      	; 0x8f4 <malloc+0x62>
     8f2:	ef 01       	movw	r28, r30
     8f4:	9a 01       	movw	r18, r20
     8f6:	bd 01       	movw	r22, r26
     8f8:	df 01       	movw	r26, r30
     8fa:	02 80       	ldd	r0, Z+2	; 0x02
     8fc:	f3 81       	ldd	r31, Z+3	; 0x03
     8fe:	e0 2d       	mov	r30, r0
     900:	d7 cf       	rjmp	.-82     	; 0x8b0 <malloc+0x1e>
     902:	21 15       	cp	r18, r1
     904:	31 05       	cpc	r19, r1
     906:	f9 f0       	breq	.+62     	; 0x946 <malloc+0xb4>
     908:	28 1b       	sub	r18, r24
     90a:	39 0b       	sbc	r19, r25
     90c:	24 30       	cpi	r18, 0x04	; 4
     90e:	31 05       	cpc	r19, r1
     910:	80 f4       	brcc	.+32     	; 0x932 <malloc+0xa0>
     912:	8a 81       	ldd	r24, Y+2	; 0x02
     914:	9b 81       	ldd	r25, Y+3	; 0x03
     916:	61 15       	cp	r22, r1
     918:	71 05       	cpc	r23, r1
     91a:	21 f0       	breq	.+8      	; 0x924 <malloc+0x92>
     91c:	fb 01       	movw	r30, r22
     91e:	93 83       	std	Z+3, r25	; 0x03
     920:	82 83       	std	Z+2, r24	; 0x02
     922:	04 c0       	rjmp	.+8      	; 0x92c <malloc+0x9a>
     924:	90 93 6f 03 	sts	0x036F, r25
     928:	80 93 6e 03 	sts	0x036E, r24
     92c:	fe 01       	movw	r30, r28
     92e:	32 96       	adiw	r30, 0x02	; 2
     930:	44 c0       	rjmp	.+136    	; 0x9ba <malloc+0x128>
     932:	fe 01       	movw	r30, r28
     934:	e2 0f       	add	r30, r18
     936:	f3 1f       	adc	r31, r19
     938:	81 93       	st	Z+, r24
     93a:	91 93       	st	Z+, r25
     93c:	22 50       	subi	r18, 0x02	; 2
     93e:	31 09       	sbc	r19, r1
     940:	39 83       	std	Y+1, r19	; 0x01
     942:	28 83       	st	Y, r18
     944:	3a c0       	rjmp	.+116    	; 0x9ba <malloc+0x128>
     946:	20 91 6c 03 	lds	r18, 0x036C
     94a:	30 91 6d 03 	lds	r19, 0x036D
     94e:	23 2b       	or	r18, r19
     950:	41 f4       	brne	.+16     	; 0x962 <malloc+0xd0>
     952:	20 91 02 01 	lds	r18, 0x0102
     956:	30 91 03 01 	lds	r19, 0x0103
     95a:	30 93 6d 03 	sts	0x036D, r19
     95e:	20 93 6c 03 	sts	0x036C, r18
     962:	20 91 00 01 	lds	r18, 0x0100
     966:	30 91 01 01 	lds	r19, 0x0101
     96a:	21 15       	cp	r18, r1
     96c:	31 05       	cpc	r19, r1
     96e:	41 f4       	brne	.+16     	; 0x980 <malloc+0xee>
     970:	2d b7       	in	r18, 0x3d	; 61
     972:	3e b7       	in	r19, 0x3e	; 62
     974:	40 91 04 01 	lds	r20, 0x0104
     978:	50 91 05 01 	lds	r21, 0x0105
     97c:	24 1b       	sub	r18, r20
     97e:	35 0b       	sbc	r19, r21
     980:	e0 91 6c 03 	lds	r30, 0x036C
     984:	f0 91 6d 03 	lds	r31, 0x036D
     988:	e2 17       	cp	r30, r18
     98a:	f3 07       	cpc	r31, r19
     98c:	a0 f4       	brcc	.+40     	; 0x9b6 <malloc+0x124>
     98e:	2e 1b       	sub	r18, r30
     990:	3f 0b       	sbc	r19, r31
     992:	28 17       	cp	r18, r24
     994:	39 07       	cpc	r19, r25
     996:	78 f0       	brcs	.+30     	; 0x9b6 <malloc+0x124>
     998:	ac 01       	movw	r20, r24
     99a:	4e 5f       	subi	r20, 0xFE	; 254
     99c:	5f 4f       	sbci	r21, 0xFF	; 255
     99e:	24 17       	cp	r18, r20
     9a0:	35 07       	cpc	r19, r21
     9a2:	48 f0       	brcs	.+18     	; 0x9b6 <malloc+0x124>
     9a4:	4e 0f       	add	r20, r30
     9a6:	5f 1f       	adc	r21, r31
     9a8:	50 93 6d 03 	sts	0x036D, r21
     9ac:	40 93 6c 03 	sts	0x036C, r20
     9b0:	81 93       	st	Z+, r24
     9b2:	91 93       	st	Z+, r25
     9b4:	02 c0       	rjmp	.+4      	; 0x9ba <malloc+0x128>
     9b6:	e0 e0       	ldi	r30, 0x00	; 0
     9b8:	f0 e0       	ldi	r31, 0x00	; 0
     9ba:	cf 01       	movw	r24, r30
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	08 95       	ret

000009c2 <free>:
     9c2:	cf 93       	push	r28
     9c4:	df 93       	push	r29
     9c6:	00 97       	sbiw	r24, 0x00	; 0
     9c8:	09 f4       	brne	.+2      	; 0x9cc <free+0xa>
     9ca:	87 c0       	rjmp	.+270    	; 0xada <free+0x118>
     9cc:	fc 01       	movw	r30, r24
     9ce:	32 97       	sbiw	r30, 0x02	; 2
     9d0:	13 82       	std	Z+3, r1	; 0x03
     9d2:	12 82       	std	Z+2, r1	; 0x02
     9d4:	c0 91 6e 03 	lds	r28, 0x036E
     9d8:	d0 91 6f 03 	lds	r29, 0x036F
     9dc:	20 97       	sbiw	r28, 0x00	; 0
     9de:	81 f4       	brne	.+32     	; 0xa00 <free+0x3e>
     9e0:	20 81       	ld	r18, Z
     9e2:	31 81       	ldd	r19, Z+1	; 0x01
     9e4:	28 0f       	add	r18, r24
     9e6:	39 1f       	adc	r19, r25
     9e8:	80 91 6c 03 	lds	r24, 0x036C
     9ec:	90 91 6d 03 	lds	r25, 0x036D
     9f0:	82 17       	cp	r24, r18
     9f2:	93 07       	cpc	r25, r19
     9f4:	79 f5       	brne	.+94     	; 0xa54 <free+0x92>
     9f6:	f0 93 6d 03 	sts	0x036D, r31
     9fa:	e0 93 6c 03 	sts	0x036C, r30
     9fe:	6d c0       	rjmp	.+218    	; 0xada <free+0x118>
     a00:	de 01       	movw	r26, r28
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	ae 17       	cp	r26, r30
     a08:	bf 07       	cpc	r27, r31
     a0a:	50 f4       	brcc	.+20     	; 0xa20 <free+0x5e>
     a0c:	12 96       	adiw	r26, 0x02	; 2
     a0e:	4d 91       	ld	r20, X+
     a10:	5c 91       	ld	r21, X
     a12:	13 97       	sbiw	r26, 0x03	; 3
     a14:	9d 01       	movw	r18, r26
     a16:	41 15       	cp	r20, r1
     a18:	51 05       	cpc	r21, r1
     a1a:	09 f1       	breq	.+66     	; 0xa5e <free+0x9c>
     a1c:	da 01       	movw	r26, r20
     a1e:	f3 cf       	rjmp	.-26     	; 0xa06 <free+0x44>
     a20:	b3 83       	std	Z+3, r27	; 0x03
     a22:	a2 83       	std	Z+2, r26	; 0x02
     a24:	40 81       	ld	r20, Z
     a26:	51 81       	ldd	r21, Z+1	; 0x01
     a28:	84 0f       	add	r24, r20
     a2a:	95 1f       	adc	r25, r21
     a2c:	8a 17       	cp	r24, r26
     a2e:	9b 07       	cpc	r25, r27
     a30:	71 f4       	brne	.+28     	; 0xa4e <free+0x8c>
     a32:	8d 91       	ld	r24, X+
     a34:	9c 91       	ld	r25, X
     a36:	11 97       	sbiw	r26, 0x01	; 1
     a38:	84 0f       	add	r24, r20
     a3a:	95 1f       	adc	r25, r21
     a3c:	02 96       	adiw	r24, 0x02	; 2
     a3e:	91 83       	std	Z+1, r25	; 0x01
     a40:	80 83       	st	Z, r24
     a42:	12 96       	adiw	r26, 0x02	; 2
     a44:	8d 91       	ld	r24, X+
     a46:	9c 91       	ld	r25, X
     a48:	13 97       	sbiw	r26, 0x03	; 3
     a4a:	93 83       	std	Z+3, r25	; 0x03
     a4c:	82 83       	std	Z+2, r24	; 0x02
     a4e:	21 15       	cp	r18, r1
     a50:	31 05       	cpc	r19, r1
     a52:	29 f4       	brne	.+10     	; 0xa5e <free+0x9c>
     a54:	f0 93 6f 03 	sts	0x036F, r31
     a58:	e0 93 6e 03 	sts	0x036E, r30
     a5c:	3e c0       	rjmp	.+124    	; 0xada <free+0x118>
     a5e:	d9 01       	movw	r26, r18
     a60:	13 96       	adiw	r26, 0x03	; 3
     a62:	fc 93       	st	X, r31
     a64:	ee 93       	st	-X, r30
     a66:	12 97       	sbiw	r26, 0x02	; 2
     a68:	4d 91       	ld	r20, X+
     a6a:	5d 91       	ld	r21, X+
     a6c:	a4 0f       	add	r26, r20
     a6e:	b5 1f       	adc	r27, r21
     a70:	ea 17       	cp	r30, r26
     a72:	fb 07       	cpc	r31, r27
     a74:	79 f4       	brne	.+30     	; 0xa94 <free+0xd2>
     a76:	80 81       	ld	r24, Z
     a78:	91 81       	ldd	r25, Z+1	; 0x01
     a7a:	84 0f       	add	r24, r20
     a7c:	95 1f       	adc	r25, r21
     a7e:	02 96       	adiw	r24, 0x02	; 2
     a80:	d9 01       	movw	r26, r18
     a82:	11 96       	adiw	r26, 0x01	; 1
     a84:	9c 93       	st	X, r25
     a86:	8e 93       	st	-X, r24
     a88:	82 81       	ldd	r24, Z+2	; 0x02
     a8a:	93 81       	ldd	r25, Z+3	; 0x03
     a8c:	13 96       	adiw	r26, 0x03	; 3
     a8e:	9c 93       	st	X, r25
     a90:	8e 93       	st	-X, r24
     a92:	12 97       	sbiw	r26, 0x02	; 2
     a94:	e0 e0       	ldi	r30, 0x00	; 0
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	8a 81       	ldd	r24, Y+2	; 0x02
     a9a:	9b 81       	ldd	r25, Y+3	; 0x03
     a9c:	00 97       	sbiw	r24, 0x00	; 0
     a9e:	19 f0       	breq	.+6      	; 0xaa6 <free+0xe4>
     aa0:	fe 01       	movw	r30, r28
     aa2:	ec 01       	movw	r28, r24
     aa4:	f9 cf       	rjmp	.-14     	; 0xa98 <free+0xd6>
     aa6:	ce 01       	movw	r24, r28
     aa8:	02 96       	adiw	r24, 0x02	; 2
     aaa:	28 81       	ld	r18, Y
     aac:	39 81       	ldd	r19, Y+1	; 0x01
     aae:	82 0f       	add	r24, r18
     ab0:	93 1f       	adc	r25, r19
     ab2:	20 91 6c 03 	lds	r18, 0x036C
     ab6:	30 91 6d 03 	lds	r19, 0x036D
     aba:	28 17       	cp	r18, r24
     abc:	39 07       	cpc	r19, r25
     abe:	69 f4       	brne	.+26     	; 0xada <free+0x118>
     ac0:	30 97       	sbiw	r30, 0x00	; 0
     ac2:	29 f4       	brne	.+10     	; 0xace <free+0x10c>
     ac4:	10 92 6f 03 	sts	0x036F, r1
     ac8:	10 92 6e 03 	sts	0x036E, r1
     acc:	02 c0       	rjmp	.+4      	; 0xad2 <free+0x110>
     ace:	13 82       	std	Z+3, r1	; 0x03
     ad0:	12 82       	std	Z+2, r1	; 0x02
     ad2:	d0 93 6d 03 	sts	0x036D, r29
     ad6:	c0 93 6c 03 	sts	0x036C, r28
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	08 95       	ret

00000ae0 <fdevopen>:
     ae0:	0f 93       	push	r16
     ae2:	1f 93       	push	r17
     ae4:	cf 93       	push	r28
     ae6:	df 93       	push	r29
     ae8:	ec 01       	movw	r28, r24
     aea:	8b 01       	movw	r16, r22
     aec:	00 97       	sbiw	r24, 0x00	; 0
     aee:	31 f4       	brne	.+12     	; 0xafc <fdevopen+0x1c>
     af0:	61 15       	cp	r22, r1
     af2:	71 05       	cpc	r23, r1
     af4:	19 f4       	brne	.+6      	; 0xafc <fdevopen+0x1c>
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	37 c0       	rjmp	.+110    	; 0xb6a <fdevopen+0x8a>
     afc:	6e e0       	ldi	r22, 0x0E	; 14
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	81 e0       	ldi	r24, 0x01	; 1
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	38 d2       	rcall	.+1136   	; 0xf76 <calloc>
     b06:	fc 01       	movw	r30, r24
     b08:	00 97       	sbiw	r24, 0x00	; 0
     b0a:	a9 f3       	breq	.-22     	; 0xaf6 <fdevopen+0x16>
     b0c:	80 e8       	ldi	r24, 0x80	; 128
     b0e:	83 83       	std	Z+3, r24	; 0x03
     b10:	01 15       	cp	r16, r1
     b12:	11 05       	cpc	r17, r1
     b14:	71 f0       	breq	.+28     	; 0xb32 <fdevopen+0x52>
     b16:	13 87       	std	Z+11, r17	; 0x0b
     b18:	02 87       	std	Z+10, r16	; 0x0a
     b1a:	81 e8       	ldi	r24, 0x81	; 129
     b1c:	83 83       	std	Z+3, r24	; 0x03
     b1e:	80 91 70 03 	lds	r24, 0x0370
     b22:	90 91 71 03 	lds	r25, 0x0371
     b26:	89 2b       	or	r24, r25
     b28:	21 f4       	brne	.+8      	; 0xb32 <fdevopen+0x52>
     b2a:	f0 93 71 03 	sts	0x0371, r31
     b2e:	e0 93 70 03 	sts	0x0370, r30
     b32:	20 97       	sbiw	r28, 0x00	; 0
     b34:	c9 f0       	breq	.+50     	; 0xb68 <fdevopen+0x88>
     b36:	d1 87       	std	Z+9, r29	; 0x09
     b38:	c0 87       	std	Z+8, r28	; 0x08
     b3a:	83 81       	ldd	r24, Z+3	; 0x03
     b3c:	82 60       	ori	r24, 0x02	; 2
     b3e:	83 83       	std	Z+3, r24	; 0x03
     b40:	80 91 72 03 	lds	r24, 0x0372
     b44:	90 91 73 03 	lds	r25, 0x0373
     b48:	89 2b       	or	r24, r25
     b4a:	71 f4       	brne	.+28     	; 0xb68 <fdevopen+0x88>
     b4c:	f0 93 73 03 	sts	0x0373, r31
     b50:	e0 93 72 03 	sts	0x0372, r30
     b54:	80 91 74 03 	lds	r24, 0x0374
     b58:	90 91 75 03 	lds	r25, 0x0375
     b5c:	89 2b       	or	r24, r25
     b5e:	21 f4       	brne	.+8      	; 0xb68 <fdevopen+0x88>
     b60:	f0 93 75 03 	sts	0x0375, r31
     b64:	e0 93 74 03 	sts	0x0374, r30
     b68:	cf 01       	movw	r24, r30
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	1f 91       	pop	r17
     b70:	0f 91       	pop	r16
     b72:	08 95       	ret

00000b74 <printf>:
     b74:	a0 e0       	ldi	r26, 0x00	; 0
     b76:	b0 e0       	ldi	r27, 0x00	; 0
     b78:	ef eb       	ldi	r30, 0xBF	; 191
     b7a:	f5 e0       	ldi	r31, 0x05	; 5
     b7c:	d3 c2       	rjmp	.+1446   	; 0x1124 <__prologue_saves__+0x20>
     b7e:	fe 01       	movw	r30, r28
     b80:	35 96       	adiw	r30, 0x05	; 5
     b82:	61 91       	ld	r22, Z+
     b84:	71 91       	ld	r23, Z+
     b86:	af 01       	movw	r20, r30
     b88:	80 91 72 03 	lds	r24, 0x0372
     b8c:	90 91 73 03 	lds	r25, 0x0373
     b90:	2f d0       	rcall	.+94     	; 0xbf0 <vfprintf>
     b92:	e2 e0       	ldi	r30, 0x02	; 2
     b94:	e3 c2       	rjmp	.+1478   	; 0x115c <__epilogue_restores__+0x20>

00000b96 <puts>:
     b96:	0f 93       	push	r16
     b98:	1f 93       	push	r17
     b9a:	cf 93       	push	r28
     b9c:	df 93       	push	r29
     b9e:	e0 91 72 03 	lds	r30, 0x0372
     ba2:	f0 91 73 03 	lds	r31, 0x0373
     ba6:	23 81       	ldd	r18, Z+3	; 0x03
     ba8:	21 ff       	sbrs	r18, 1
     baa:	1b c0       	rjmp	.+54     	; 0xbe2 <puts+0x4c>
     bac:	ec 01       	movw	r28, r24
     bae:	00 e0       	ldi	r16, 0x00	; 0
     bb0:	10 e0       	ldi	r17, 0x00	; 0
     bb2:	89 91       	ld	r24, Y+
     bb4:	60 91 72 03 	lds	r22, 0x0372
     bb8:	70 91 73 03 	lds	r23, 0x0373
     bbc:	db 01       	movw	r26, r22
     bbe:	18 96       	adiw	r26, 0x08	; 8
     bc0:	ed 91       	ld	r30, X+
     bc2:	fc 91       	ld	r31, X
     bc4:	19 97       	sbiw	r26, 0x09	; 9
     bc6:	88 23       	and	r24, r24
     bc8:	31 f0       	breq	.+12     	; 0xbd6 <puts+0x40>
     bca:	09 95       	icall
     bcc:	89 2b       	or	r24, r25
     bce:	89 f3       	breq	.-30     	; 0xbb2 <puts+0x1c>
     bd0:	0f ef       	ldi	r16, 0xFF	; 255
     bd2:	1f ef       	ldi	r17, 0xFF	; 255
     bd4:	ee cf       	rjmp	.-36     	; 0xbb2 <puts+0x1c>
     bd6:	8a e0       	ldi	r24, 0x0A	; 10
     bd8:	09 95       	icall
     bda:	89 2b       	or	r24, r25
     bdc:	11 f4       	brne	.+4      	; 0xbe2 <puts+0x4c>
     bde:	c8 01       	movw	r24, r16
     be0:	02 c0       	rjmp	.+4      	; 0xbe6 <puts+0x50>
     be2:	8f ef       	ldi	r24, 0xFF	; 255
     be4:	9f ef       	ldi	r25, 0xFF	; 255
     be6:	df 91       	pop	r29
     be8:	cf 91       	pop	r28
     bea:	1f 91       	pop	r17
     bec:	0f 91       	pop	r16
     bee:	08 95       	ret

00000bf0 <vfprintf>:
     bf0:	ac e0       	ldi	r26, 0x0C	; 12
     bf2:	b0 e0       	ldi	r27, 0x00	; 0
     bf4:	ed ef       	ldi	r30, 0xFD	; 253
     bf6:	f5 e0       	ldi	r31, 0x05	; 5
     bf8:	85 c2       	rjmp	.+1290   	; 0x1104 <__prologue_saves__>
     bfa:	7c 01       	movw	r14, r24
     bfc:	6b 01       	movw	r12, r22
     bfe:	8a 01       	movw	r16, r20
     c00:	fc 01       	movw	r30, r24
     c02:	17 82       	std	Z+7, r1	; 0x07
     c04:	16 82       	std	Z+6, r1	; 0x06
     c06:	83 81       	ldd	r24, Z+3	; 0x03
     c08:	81 ff       	sbrs	r24, 1
     c0a:	b0 c1       	rjmp	.+864    	; 0xf6c <vfprintf+0x37c>
     c0c:	ce 01       	movw	r24, r28
     c0e:	01 96       	adiw	r24, 0x01	; 1
     c10:	4c 01       	movw	r8, r24
     c12:	f7 01       	movw	r30, r14
     c14:	93 81       	ldd	r25, Z+3	; 0x03
     c16:	f6 01       	movw	r30, r12
     c18:	93 fd       	sbrc	r25, 3
     c1a:	85 91       	lpm	r24, Z+
     c1c:	93 ff       	sbrs	r25, 3
     c1e:	81 91       	ld	r24, Z+
     c20:	6f 01       	movw	r12, r30
     c22:	88 23       	and	r24, r24
     c24:	09 f4       	brne	.+2      	; 0xc28 <vfprintf+0x38>
     c26:	9e c1       	rjmp	.+828    	; 0xf64 <vfprintf+0x374>
     c28:	85 32       	cpi	r24, 0x25	; 37
     c2a:	39 f4       	brne	.+14     	; 0xc3a <vfprintf+0x4a>
     c2c:	93 fd       	sbrc	r25, 3
     c2e:	85 91       	lpm	r24, Z+
     c30:	93 ff       	sbrs	r25, 3
     c32:	81 91       	ld	r24, Z+
     c34:	6f 01       	movw	r12, r30
     c36:	85 32       	cpi	r24, 0x25	; 37
     c38:	21 f4       	brne	.+8      	; 0xc42 <vfprintf+0x52>
     c3a:	b7 01       	movw	r22, r14
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	d2 d1       	rcall	.+932    	; 0xfe4 <fputc>
     c40:	e8 cf       	rjmp	.-48     	; 0xc12 <vfprintf+0x22>
     c42:	51 2c       	mov	r5, r1
     c44:	31 2c       	mov	r3, r1
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	20 32       	cpi	r18, 0x20	; 32
     c4a:	a0 f4       	brcc	.+40     	; 0xc74 <vfprintf+0x84>
     c4c:	8b 32       	cpi	r24, 0x2B	; 43
     c4e:	69 f0       	breq	.+26     	; 0xc6a <vfprintf+0x7a>
     c50:	30 f4       	brcc	.+12     	; 0xc5e <vfprintf+0x6e>
     c52:	80 32       	cpi	r24, 0x20	; 32
     c54:	59 f0       	breq	.+22     	; 0xc6c <vfprintf+0x7c>
     c56:	83 32       	cpi	r24, 0x23	; 35
     c58:	69 f4       	brne	.+26     	; 0xc74 <vfprintf+0x84>
     c5a:	20 61       	ori	r18, 0x10	; 16
     c5c:	2c c0       	rjmp	.+88     	; 0xcb6 <vfprintf+0xc6>
     c5e:	8d 32       	cpi	r24, 0x2D	; 45
     c60:	39 f0       	breq	.+14     	; 0xc70 <vfprintf+0x80>
     c62:	80 33       	cpi	r24, 0x30	; 48
     c64:	39 f4       	brne	.+14     	; 0xc74 <vfprintf+0x84>
     c66:	21 60       	ori	r18, 0x01	; 1
     c68:	26 c0       	rjmp	.+76     	; 0xcb6 <vfprintf+0xc6>
     c6a:	22 60       	ori	r18, 0x02	; 2
     c6c:	24 60       	ori	r18, 0x04	; 4
     c6e:	23 c0       	rjmp	.+70     	; 0xcb6 <vfprintf+0xc6>
     c70:	28 60       	ori	r18, 0x08	; 8
     c72:	21 c0       	rjmp	.+66     	; 0xcb6 <vfprintf+0xc6>
     c74:	27 fd       	sbrc	r18, 7
     c76:	27 c0       	rjmp	.+78     	; 0xcc6 <vfprintf+0xd6>
     c78:	30 ed       	ldi	r19, 0xD0	; 208
     c7a:	38 0f       	add	r19, r24
     c7c:	3a 30       	cpi	r19, 0x0A	; 10
     c7e:	78 f4       	brcc	.+30     	; 0xc9e <vfprintf+0xae>
     c80:	26 ff       	sbrs	r18, 6
     c82:	06 c0       	rjmp	.+12     	; 0xc90 <vfprintf+0xa0>
     c84:	fa e0       	ldi	r31, 0x0A	; 10
     c86:	5f 9e       	mul	r5, r31
     c88:	30 0d       	add	r19, r0
     c8a:	11 24       	eor	r1, r1
     c8c:	53 2e       	mov	r5, r19
     c8e:	13 c0       	rjmp	.+38     	; 0xcb6 <vfprintf+0xc6>
     c90:	8a e0       	ldi	r24, 0x0A	; 10
     c92:	38 9e       	mul	r3, r24
     c94:	30 0d       	add	r19, r0
     c96:	11 24       	eor	r1, r1
     c98:	33 2e       	mov	r3, r19
     c9a:	20 62       	ori	r18, 0x20	; 32
     c9c:	0c c0       	rjmp	.+24     	; 0xcb6 <vfprintf+0xc6>
     c9e:	8e 32       	cpi	r24, 0x2E	; 46
     ca0:	21 f4       	brne	.+8      	; 0xcaa <vfprintf+0xba>
     ca2:	26 fd       	sbrc	r18, 6
     ca4:	5f c1       	rjmp	.+702    	; 0xf64 <vfprintf+0x374>
     ca6:	20 64       	ori	r18, 0x40	; 64
     ca8:	06 c0       	rjmp	.+12     	; 0xcb6 <vfprintf+0xc6>
     caa:	8c 36       	cpi	r24, 0x6C	; 108
     cac:	11 f4       	brne	.+4      	; 0xcb2 <vfprintf+0xc2>
     cae:	20 68       	ori	r18, 0x80	; 128
     cb0:	02 c0       	rjmp	.+4      	; 0xcb6 <vfprintf+0xc6>
     cb2:	88 36       	cpi	r24, 0x68	; 104
     cb4:	41 f4       	brne	.+16     	; 0xcc6 <vfprintf+0xd6>
     cb6:	f6 01       	movw	r30, r12
     cb8:	93 fd       	sbrc	r25, 3
     cba:	85 91       	lpm	r24, Z+
     cbc:	93 ff       	sbrs	r25, 3
     cbe:	81 91       	ld	r24, Z+
     cc0:	6f 01       	movw	r12, r30
     cc2:	81 11       	cpse	r24, r1
     cc4:	c1 cf       	rjmp	.-126    	; 0xc48 <vfprintf+0x58>
     cc6:	98 2f       	mov	r25, r24
     cc8:	9f 7d       	andi	r25, 0xDF	; 223
     cca:	95 54       	subi	r25, 0x45	; 69
     ccc:	93 30       	cpi	r25, 0x03	; 3
     cce:	28 f4       	brcc	.+10     	; 0xcda <vfprintf+0xea>
     cd0:	0c 5f       	subi	r16, 0xFC	; 252
     cd2:	1f 4f       	sbci	r17, 0xFF	; 255
     cd4:	ff e3       	ldi	r31, 0x3F	; 63
     cd6:	f9 83       	std	Y+1, r31	; 0x01
     cd8:	0d c0       	rjmp	.+26     	; 0xcf4 <vfprintf+0x104>
     cda:	83 36       	cpi	r24, 0x63	; 99
     cdc:	31 f0       	breq	.+12     	; 0xcea <vfprintf+0xfa>
     cde:	83 37       	cpi	r24, 0x73	; 115
     ce0:	71 f0       	breq	.+28     	; 0xcfe <vfprintf+0x10e>
     ce2:	83 35       	cpi	r24, 0x53	; 83
     ce4:	09 f0       	breq	.+2      	; 0xce8 <vfprintf+0xf8>
     ce6:	57 c0       	rjmp	.+174    	; 0xd96 <vfprintf+0x1a6>
     ce8:	21 c0       	rjmp	.+66     	; 0xd2c <vfprintf+0x13c>
     cea:	f8 01       	movw	r30, r16
     cec:	80 81       	ld	r24, Z
     cee:	89 83       	std	Y+1, r24	; 0x01
     cf0:	0e 5f       	subi	r16, 0xFE	; 254
     cf2:	1f 4f       	sbci	r17, 0xFF	; 255
     cf4:	44 24       	eor	r4, r4
     cf6:	43 94       	inc	r4
     cf8:	51 2c       	mov	r5, r1
     cfa:	54 01       	movw	r10, r8
     cfc:	14 c0       	rjmp	.+40     	; 0xd26 <vfprintf+0x136>
     cfe:	38 01       	movw	r6, r16
     d00:	f2 e0       	ldi	r31, 0x02	; 2
     d02:	6f 0e       	add	r6, r31
     d04:	71 1c       	adc	r7, r1
     d06:	f8 01       	movw	r30, r16
     d08:	a0 80       	ld	r10, Z
     d0a:	b1 80       	ldd	r11, Z+1	; 0x01
     d0c:	26 ff       	sbrs	r18, 6
     d0e:	03 c0       	rjmp	.+6      	; 0xd16 <vfprintf+0x126>
     d10:	65 2d       	mov	r22, r5
     d12:	70 e0       	ldi	r23, 0x00	; 0
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <vfprintf+0x12a>
     d16:	6f ef       	ldi	r22, 0xFF	; 255
     d18:	7f ef       	ldi	r23, 0xFF	; 255
     d1a:	c5 01       	movw	r24, r10
     d1c:	2c 87       	std	Y+12, r18	; 0x0c
     d1e:	57 d1       	rcall	.+686    	; 0xfce <strnlen>
     d20:	2c 01       	movw	r4, r24
     d22:	83 01       	movw	r16, r6
     d24:	2c 85       	ldd	r18, Y+12	; 0x0c
     d26:	2f 77       	andi	r18, 0x7F	; 127
     d28:	22 2e       	mov	r2, r18
     d2a:	16 c0       	rjmp	.+44     	; 0xd58 <vfprintf+0x168>
     d2c:	38 01       	movw	r6, r16
     d2e:	f2 e0       	ldi	r31, 0x02	; 2
     d30:	6f 0e       	add	r6, r31
     d32:	71 1c       	adc	r7, r1
     d34:	f8 01       	movw	r30, r16
     d36:	a0 80       	ld	r10, Z
     d38:	b1 80       	ldd	r11, Z+1	; 0x01
     d3a:	26 ff       	sbrs	r18, 6
     d3c:	03 c0       	rjmp	.+6      	; 0xd44 <vfprintf+0x154>
     d3e:	65 2d       	mov	r22, r5
     d40:	70 e0       	ldi	r23, 0x00	; 0
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <vfprintf+0x158>
     d44:	6f ef       	ldi	r22, 0xFF	; 255
     d46:	7f ef       	ldi	r23, 0xFF	; 255
     d48:	c5 01       	movw	r24, r10
     d4a:	2c 87       	std	Y+12, r18	; 0x0c
     d4c:	2e d1       	rcall	.+604    	; 0xfaa <strnlen_P>
     d4e:	2c 01       	movw	r4, r24
     d50:	2c 85       	ldd	r18, Y+12	; 0x0c
     d52:	20 68       	ori	r18, 0x80	; 128
     d54:	22 2e       	mov	r2, r18
     d56:	83 01       	movw	r16, r6
     d58:	23 fc       	sbrc	r2, 3
     d5a:	19 c0       	rjmp	.+50     	; 0xd8e <vfprintf+0x19e>
     d5c:	83 2d       	mov	r24, r3
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	48 16       	cp	r4, r24
     d62:	59 06       	cpc	r5, r25
     d64:	a0 f4       	brcc	.+40     	; 0xd8e <vfprintf+0x19e>
     d66:	b7 01       	movw	r22, r14
     d68:	80 e2       	ldi	r24, 0x20	; 32
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	3b d1       	rcall	.+630    	; 0xfe4 <fputc>
     d6e:	3a 94       	dec	r3
     d70:	f5 cf       	rjmp	.-22     	; 0xd5c <vfprintf+0x16c>
     d72:	f5 01       	movw	r30, r10
     d74:	27 fc       	sbrc	r2, 7
     d76:	85 91       	lpm	r24, Z+
     d78:	27 fe       	sbrs	r2, 7
     d7a:	81 91       	ld	r24, Z+
     d7c:	5f 01       	movw	r10, r30
     d7e:	b7 01       	movw	r22, r14
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	30 d1       	rcall	.+608    	; 0xfe4 <fputc>
     d84:	31 10       	cpse	r3, r1
     d86:	3a 94       	dec	r3
     d88:	f1 e0       	ldi	r31, 0x01	; 1
     d8a:	4f 1a       	sub	r4, r31
     d8c:	51 08       	sbc	r5, r1
     d8e:	41 14       	cp	r4, r1
     d90:	51 04       	cpc	r5, r1
     d92:	79 f7       	brne	.-34     	; 0xd72 <vfprintf+0x182>
     d94:	de c0       	rjmp	.+444    	; 0xf52 <vfprintf+0x362>
     d96:	84 36       	cpi	r24, 0x64	; 100
     d98:	11 f0       	breq	.+4      	; 0xd9e <vfprintf+0x1ae>
     d9a:	89 36       	cpi	r24, 0x69	; 105
     d9c:	31 f5       	brne	.+76     	; 0xdea <vfprintf+0x1fa>
     d9e:	f8 01       	movw	r30, r16
     da0:	27 ff       	sbrs	r18, 7
     da2:	07 c0       	rjmp	.+14     	; 0xdb2 <vfprintf+0x1c2>
     da4:	60 81       	ld	r22, Z
     da6:	71 81       	ldd	r23, Z+1	; 0x01
     da8:	82 81       	ldd	r24, Z+2	; 0x02
     daa:	93 81       	ldd	r25, Z+3	; 0x03
     dac:	0c 5f       	subi	r16, 0xFC	; 252
     dae:	1f 4f       	sbci	r17, 0xFF	; 255
     db0:	08 c0       	rjmp	.+16     	; 0xdc2 <vfprintf+0x1d2>
     db2:	60 81       	ld	r22, Z
     db4:	71 81       	ldd	r23, Z+1	; 0x01
     db6:	88 27       	eor	r24, r24
     db8:	77 fd       	sbrc	r23, 7
     dba:	80 95       	com	r24
     dbc:	98 2f       	mov	r25, r24
     dbe:	0e 5f       	subi	r16, 0xFE	; 254
     dc0:	1f 4f       	sbci	r17, 0xFF	; 255
     dc2:	2f 76       	andi	r18, 0x6F	; 111
     dc4:	b2 2e       	mov	r11, r18
     dc6:	97 ff       	sbrs	r25, 7
     dc8:	09 c0       	rjmp	.+18     	; 0xddc <vfprintf+0x1ec>
     dca:	90 95       	com	r25
     dcc:	80 95       	com	r24
     dce:	70 95       	com	r23
     dd0:	61 95       	neg	r22
     dd2:	7f 4f       	sbci	r23, 0xFF	; 255
     dd4:	8f 4f       	sbci	r24, 0xFF	; 255
     dd6:	9f 4f       	sbci	r25, 0xFF	; 255
     dd8:	20 68       	ori	r18, 0x80	; 128
     dda:	b2 2e       	mov	r11, r18
     ddc:	2a e0       	ldi	r18, 0x0A	; 10
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	a4 01       	movw	r20, r8
     de2:	32 d1       	rcall	.+612    	; 0x1048 <__ultoa_invert>
     de4:	a8 2e       	mov	r10, r24
     de6:	a8 18       	sub	r10, r8
     de8:	43 c0       	rjmp	.+134    	; 0xe70 <vfprintf+0x280>
     dea:	85 37       	cpi	r24, 0x75	; 117
     dec:	29 f4       	brne	.+10     	; 0xdf8 <vfprintf+0x208>
     dee:	2f 7e       	andi	r18, 0xEF	; 239
     df0:	b2 2e       	mov	r11, r18
     df2:	2a e0       	ldi	r18, 0x0A	; 10
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	25 c0       	rjmp	.+74     	; 0xe42 <vfprintf+0x252>
     df8:	f2 2f       	mov	r31, r18
     dfa:	f9 7f       	andi	r31, 0xF9	; 249
     dfc:	bf 2e       	mov	r11, r31
     dfe:	8f 36       	cpi	r24, 0x6F	; 111
     e00:	c1 f0       	breq	.+48     	; 0xe32 <vfprintf+0x242>
     e02:	18 f4       	brcc	.+6      	; 0xe0a <vfprintf+0x21a>
     e04:	88 35       	cpi	r24, 0x58	; 88
     e06:	79 f0       	breq	.+30     	; 0xe26 <vfprintf+0x236>
     e08:	ad c0       	rjmp	.+346    	; 0xf64 <vfprintf+0x374>
     e0a:	80 37       	cpi	r24, 0x70	; 112
     e0c:	19 f0       	breq	.+6      	; 0xe14 <vfprintf+0x224>
     e0e:	88 37       	cpi	r24, 0x78	; 120
     e10:	21 f0       	breq	.+8      	; 0xe1a <vfprintf+0x22a>
     e12:	a8 c0       	rjmp	.+336    	; 0xf64 <vfprintf+0x374>
     e14:	2f 2f       	mov	r18, r31
     e16:	20 61       	ori	r18, 0x10	; 16
     e18:	b2 2e       	mov	r11, r18
     e1a:	b4 fe       	sbrs	r11, 4
     e1c:	0d c0       	rjmp	.+26     	; 0xe38 <vfprintf+0x248>
     e1e:	8b 2d       	mov	r24, r11
     e20:	84 60       	ori	r24, 0x04	; 4
     e22:	b8 2e       	mov	r11, r24
     e24:	09 c0       	rjmp	.+18     	; 0xe38 <vfprintf+0x248>
     e26:	24 ff       	sbrs	r18, 4
     e28:	0a c0       	rjmp	.+20     	; 0xe3e <vfprintf+0x24e>
     e2a:	9f 2f       	mov	r25, r31
     e2c:	96 60       	ori	r25, 0x06	; 6
     e2e:	b9 2e       	mov	r11, r25
     e30:	06 c0       	rjmp	.+12     	; 0xe3e <vfprintf+0x24e>
     e32:	28 e0       	ldi	r18, 0x08	; 8
     e34:	30 e0       	ldi	r19, 0x00	; 0
     e36:	05 c0       	rjmp	.+10     	; 0xe42 <vfprintf+0x252>
     e38:	20 e1       	ldi	r18, 0x10	; 16
     e3a:	30 e0       	ldi	r19, 0x00	; 0
     e3c:	02 c0       	rjmp	.+4      	; 0xe42 <vfprintf+0x252>
     e3e:	20 e1       	ldi	r18, 0x10	; 16
     e40:	32 e0       	ldi	r19, 0x02	; 2
     e42:	f8 01       	movw	r30, r16
     e44:	b7 fe       	sbrs	r11, 7
     e46:	07 c0       	rjmp	.+14     	; 0xe56 <vfprintf+0x266>
     e48:	60 81       	ld	r22, Z
     e4a:	71 81       	ldd	r23, Z+1	; 0x01
     e4c:	82 81       	ldd	r24, Z+2	; 0x02
     e4e:	93 81       	ldd	r25, Z+3	; 0x03
     e50:	0c 5f       	subi	r16, 0xFC	; 252
     e52:	1f 4f       	sbci	r17, 0xFF	; 255
     e54:	06 c0       	rjmp	.+12     	; 0xe62 <vfprintf+0x272>
     e56:	60 81       	ld	r22, Z
     e58:	71 81       	ldd	r23, Z+1	; 0x01
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	0e 5f       	subi	r16, 0xFE	; 254
     e60:	1f 4f       	sbci	r17, 0xFF	; 255
     e62:	a4 01       	movw	r20, r8
     e64:	f1 d0       	rcall	.+482    	; 0x1048 <__ultoa_invert>
     e66:	a8 2e       	mov	r10, r24
     e68:	a8 18       	sub	r10, r8
     e6a:	fb 2d       	mov	r31, r11
     e6c:	ff 77       	andi	r31, 0x7F	; 127
     e6e:	bf 2e       	mov	r11, r31
     e70:	b6 fe       	sbrs	r11, 6
     e72:	0b c0       	rjmp	.+22     	; 0xe8a <vfprintf+0x29a>
     e74:	2b 2d       	mov	r18, r11
     e76:	2e 7f       	andi	r18, 0xFE	; 254
     e78:	a5 14       	cp	r10, r5
     e7a:	50 f4       	brcc	.+20     	; 0xe90 <vfprintf+0x2a0>
     e7c:	b4 fe       	sbrs	r11, 4
     e7e:	0a c0       	rjmp	.+20     	; 0xe94 <vfprintf+0x2a4>
     e80:	b2 fc       	sbrc	r11, 2
     e82:	08 c0       	rjmp	.+16     	; 0xe94 <vfprintf+0x2a4>
     e84:	2b 2d       	mov	r18, r11
     e86:	2e 7e       	andi	r18, 0xEE	; 238
     e88:	05 c0       	rjmp	.+10     	; 0xe94 <vfprintf+0x2a4>
     e8a:	7a 2c       	mov	r7, r10
     e8c:	2b 2d       	mov	r18, r11
     e8e:	03 c0       	rjmp	.+6      	; 0xe96 <vfprintf+0x2a6>
     e90:	7a 2c       	mov	r7, r10
     e92:	01 c0       	rjmp	.+2      	; 0xe96 <vfprintf+0x2a6>
     e94:	75 2c       	mov	r7, r5
     e96:	24 ff       	sbrs	r18, 4
     e98:	0d c0       	rjmp	.+26     	; 0xeb4 <vfprintf+0x2c4>
     e9a:	fe 01       	movw	r30, r28
     e9c:	ea 0d       	add	r30, r10
     e9e:	f1 1d       	adc	r31, r1
     ea0:	80 81       	ld	r24, Z
     ea2:	80 33       	cpi	r24, 0x30	; 48
     ea4:	11 f4       	brne	.+4      	; 0xeaa <vfprintf+0x2ba>
     ea6:	29 7e       	andi	r18, 0xE9	; 233
     ea8:	09 c0       	rjmp	.+18     	; 0xebc <vfprintf+0x2cc>
     eaa:	22 ff       	sbrs	r18, 2
     eac:	06 c0       	rjmp	.+12     	; 0xeba <vfprintf+0x2ca>
     eae:	73 94       	inc	r7
     eb0:	73 94       	inc	r7
     eb2:	04 c0       	rjmp	.+8      	; 0xebc <vfprintf+0x2cc>
     eb4:	82 2f       	mov	r24, r18
     eb6:	86 78       	andi	r24, 0x86	; 134
     eb8:	09 f0       	breq	.+2      	; 0xebc <vfprintf+0x2cc>
     eba:	73 94       	inc	r7
     ebc:	23 fd       	sbrc	r18, 3
     ebe:	12 c0       	rjmp	.+36     	; 0xee4 <vfprintf+0x2f4>
     ec0:	20 ff       	sbrs	r18, 0
     ec2:	06 c0       	rjmp	.+12     	; 0xed0 <vfprintf+0x2e0>
     ec4:	5a 2c       	mov	r5, r10
     ec6:	73 14       	cp	r7, r3
     ec8:	18 f4       	brcc	.+6      	; 0xed0 <vfprintf+0x2e0>
     eca:	53 0c       	add	r5, r3
     ecc:	57 18       	sub	r5, r7
     ece:	73 2c       	mov	r7, r3
     ed0:	73 14       	cp	r7, r3
     ed2:	60 f4       	brcc	.+24     	; 0xeec <vfprintf+0x2fc>
     ed4:	b7 01       	movw	r22, r14
     ed6:	80 e2       	ldi	r24, 0x20	; 32
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	2c 87       	std	Y+12, r18	; 0x0c
     edc:	83 d0       	rcall	.+262    	; 0xfe4 <fputc>
     ede:	73 94       	inc	r7
     ee0:	2c 85       	ldd	r18, Y+12	; 0x0c
     ee2:	f6 cf       	rjmp	.-20     	; 0xed0 <vfprintf+0x2e0>
     ee4:	73 14       	cp	r7, r3
     ee6:	10 f4       	brcc	.+4      	; 0xeec <vfprintf+0x2fc>
     ee8:	37 18       	sub	r3, r7
     eea:	01 c0       	rjmp	.+2      	; 0xeee <vfprintf+0x2fe>
     eec:	31 2c       	mov	r3, r1
     eee:	24 ff       	sbrs	r18, 4
     ef0:	11 c0       	rjmp	.+34     	; 0xf14 <vfprintf+0x324>
     ef2:	b7 01       	movw	r22, r14
     ef4:	80 e3       	ldi	r24, 0x30	; 48
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	2c 87       	std	Y+12, r18	; 0x0c
     efa:	74 d0       	rcall	.+232    	; 0xfe4 <fputc>
     efc:	2c 85       	ldd	r18, Y+12	; 0x0c
     efe:	22 ff       	sbrs	r18, 2
     f00:	16 c0       	rjmp	.+44     	; 0xf2e <vfprintf+0x33e>
     f02:	21 ff       	sbrs	r18, 1
     f04:	03 c0       	rjmp	.+6      	; 0xf0c <vfprintf+0x31c>
     f06:	88 e5       	ldi	r24, 0x58	; 88
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	02 c0       	rjmp	.+4      	; 0xf10 <vfprintf+0x320>
     f0c:	88 e7       	ldi	r24, 0x78	; 120
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	b7 01       	movw	r22, r14
     f12:	0c c0       	rjmp	.+24     	; 0xf2c <vfprintf+0x33c>
     f14:	82 2f       	mov	r24, r18
     f16:	86 78       	andi	r24, 0x86	; 134
     f18:	51 f0       	breq	.+20     	; 0xf2e <vfprintf+0x33e>
     f1a:	21 fd       	sbrc	r18, 1
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <vfprintf+0x332>
     f1e:	80 e2       	ldi	r24, 0x20	; 32
     f20:	01 c0       	rjmp	.+2      	; 0xf24 <vfprintf+0x334>
     f22:	8b e2       	ldi	r24, 0x2B	; 43
     f24:	27 fd       	sbrc	r18, 7
     f26:	8d e2       	ldi	r24, 0x2D	; 45
     f28:	b7 01       	movw	r22, r14
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	5b d0       	rcall	.+182    	; 0xfe4 <fputc>
     f2e:	a5 14       	cp	r10, r5
     f30:	30 f4       	brcc	.+12     	; 0xf3e <vfprintf+0x34e>
     f32:	b7 01       	movw	r22, r14
     f34:	80 e3       	ldi	r24, 0x30	; 48
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	55 d0       	rcall	.+170    	; 0xfe4 <fputc>
     f3a:	5a 94       	dec	r5
     f3c:	f8 cf       	rjmp	.-16     	; 0xf2e <vfprintf+0x33e>
     f3e:	aa 94       	dec	r10
     f40:	f4 01       	movw	r30, r8
     f42:	ea 0d       	add	r30, r10
     f44:	f1 1d       	adc	r31, r1
     f46:	80 81       	ld	r24, Z
     f48:	b7 01       	movw	r22, r14
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	4b d0       	rcall	.+150    	; 0xfe4 <fputc>
     f4e:	a1 10       	cpse	r10, r1
     f50:	f6 cf       	rjmp	.-20     	; 0xf3e <vfprintf+0x34e>
     f52:	33 20       	and	r3, r3
     f54:	09 f4       	brne	.+2      	; 0xf58 <vfprintf+0x368>
     f56:	5d ce       	rjmp	.-838    	; 0xc12 <vfprintf+0x22>
     f58:	b7 01       	movw	r22, r14
     f5a:	80 e2       	ldi	r24, 0x20	; 32
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	42 d0       	rcall	.+132    	; 0xfe4 <fputc>
     f60:	3a 94       	dec	r3
     f62:	f7 cf       	rjmp	.-18     	; 0xf52 <vfprintf+0x362>
     f64:	f7 01       	movw	r30, r14
     f66:	86 81       	ldd	r24, Z+6	; 0x06
     f68:	97 81       	ldd	r25, Z+7	; 0x07
     f6a:	02 c0       	rjmp	.+4      	; 0xf70 <vfprintf+0x380>
     f6c:	8f ef       	ldi	r24, 0xFF	; 255
     f6e:	9f ef       	ldi	r25, 0xFF	; 255
     f70:	2c 96       	adiw	r28, 0x0c	; 12
     f72:	e2 e1       	ldi	r30, 0x12	; 18
     f74:	e3 c0       	rjmp	.+454    	; 0x113c <__epilogue_restores__>

00000f76 <calloc>:
     f76:	0f 93       	push	r16
     f78:	1f 93       	push	r17
     f7a:	cf 93       	push	r28
     f7c:	df 93       	push	r29
     f7e:	86 9f       	mul	r24, r22
     f80:	80 01       	movw	r16, r0
     f82:	87 9f       	mul	r24, r23
     f84:	10 0d       	add	r17, r0
     f86:	96 9f       	mul	r25, r22
     f88:	10 0d       	add	r17, r0
     f8a:	11 24       	eor	r1, r1
     f8c:	c8 01       	movw	r24, r16
     f8e:	81 dc       	rcall	.-1790   	; 0x892 <malloc>
     f90:	ec 01       	movw	r28, r24
     f92:	00 97       	sbiw	r24, 0x00	; 0
     f94:	21 f0       	breq	.+8      	; 0xf9e <calloc+0x28>
     f96:	a8 01       	movw	r20, r16
     f98:	60 e0       	ldi	r22, 0x00	; 0
     f9a:	70 e0       	ldi	r23, 0x00	; 0
     f9c:	11 d0       	rcall	.+34     	; 0xfc0 <memset>
     f9e:	ce 01       	movw	r24, r28
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	1f 91       	pop	r17
     fa6:	0f 91       	pop	r16
     fa8:	08 95       	ret

00000faa <strnlen_P>:
     faa:	fc 01       	movw	r30, r24
     fac:	05 90       	lpm	r0, Z+
     fae:	61 50       	subi	r22, 0x01	; 1
     fb0:	70 40       	sbci	r23, 0x00	; 0
     fb2:	01 10       	cpse	r0, r1
     fb4:	d8 f7       	brcc	.-10     	; 0xfac <strnlen_P+0x2>
     fb6:	80 95       	com	r24
     fb8:	90 95       	com	r25
     fba:	8e 0f       	add	r24, r30
     fbc:	9f 1f       	adc	r25, r31
     fbe:	08 95       	ret

00000fc0 <memset>:
     fc0:	dc 01       	movw	r26, r24
     fc2:	01 c0       	rjmp	.+2      	; 0xfc6 <memset+0x6>
     fc4:	6d 93       	st	X+, r22
     fc6:	41 50       	subi	r20, 0x01	; 1
     fc8:	50 40       	sbci	r21, 0x00	; 0
     fca:	e0 f7       	brcc	.-8      	; 0xfc4 <memset+0x4>
     fcc:	08 95       	ret

00000fce <strnlen>:
     fce:	fc 01       	movw	r30, r24
     fd0:	61 50       	subi	r22, 0x01	; 1
     fd2:	70 40       	sbci	r23, 0x00	; 0
     fd4:	01 90       	ld	r0, Z+
     fd6:	01 10       	cpse	r0, r1
     fd8:	d8 f7       	brcc	.-10     	; 0xfd0 <strnlen+0x2>
     fda:	80 95       	com	r24
     fdc:	90 95       	com	r25
     fde:	8e 0f       	add	r24, r30
     fe0:	9f 1f       	adc	r25, r31
     fe2:	08 95       	ret

00000fe4 <fputc>:
     fe4:	0f 93       	push	r16
     fe6:	1f 93       	push	r17
     fe8:	cf 93       	push	r28
     fea:	df 93       	push	r29
     fec:	18 2f       	mov	r17, r24
     fee:	09 2f       	mov	r16, r25
     ff0:	eb 01       	movw	r28, r22
     ff2:	8b 81       	ldd	r24, Y+3	; 0x03
     ff4:	81 fd       	sbrc	r24, 1
     ff6:	03 c0       	rjmp	.+6      	; 0xffe <fputc+0x1a>
     ff8:	8f ef       	ldi	r24, 0xFF	; 255
     ffa:	9f ef       	ldi	r25, 0xFF	; 255
     ffc:	20 c0       	rjmp	.+64     	; 0x103e <fputc+0x5a>
     ffe:	82 ff       	sbrs	r24, 2
    1000:	10 c0       	rjmp	.+32     	; 0x1022 <fputc+0x3e>
    1002:	4e 81       	ldd	r20, Y+6	; 0x06
    1004:	5f 81       	ldd	r21, Y+7	; 0x07
    1006:	2c 81       	ldd	r18, Y+4	; 0x04
    1008:	3d 81       	ldd	r19, Y+5	; 0x05
    100a:	42 17       	cp	r20, r18
    100c:	53 07       	cpc	r21, r19
    100e:	7c f4       	brge	.+30     	; 0x102e <fputc+0x4a>
    1010:	e8 81       	ld	r30, Y
    1012:	f9 81       	ldd	r31, Y+1	; 0x01
    1014:	9f 01       	movw	r18, r30
    1016:	2f 5f       	subi	r18, 0xFF	; 255
    1018:	3f 4f       	sbci	r19, 0xFF	; 255
    101a:	39 83       	std	Y+1, r19	; 0x01
    101c:	28 83       	st	Y, r18
    101e:	10 83       	st	Z, r17
    1020:	06 c0       	rjmp	.+12     	; 0x102e <fputc+0x4a>
    1022:	e8 85       	ldd	r30, Y+8	; 0x08
    1024:	f9 85       	ldd	r31, Y+9	; 0x09
    1026:	81 2f       	mov	r24, r17
    1028:	09 95       	icall
    102a:	89 2b       	or	r24, r25
    102c:	29 f7       	brne	.-54     	; 0xff8 <fputc+0x14>
    102e:	2e 81       	ldd	r18, Y+6	; 0x06
    1030:	3f 81       	ldd	r19, Y+7	; 0x07
    1032:	2f 5f       	subi	r18, 0xFF	; 255
    1034:	3f 4f       	sbci	r19, 0xFF	; 255
    1036:	3f 83       	std	Y+7, r19	; 0x07
    1038:	2e 83       	std	Y+6, r18	; 0x06
    103a:	81 2f       	mov	r24, r17
    103c:	90 2f       	mov	r25, r16
    103e:	df 91       	pop	r29
    1040:	cf 91       	pop	r28
    1042:	1f 91       	pop	r17
    1044:	0f 91       	pop	r16
    1046:	08 95       	ret

00001048 <__ultoa_invert>:
    1048:	fa 01       	movw	r30, r20
    104a:	aa 27       	eor	r26, r26
    104c:	28 30       	cpi	r18, 0x08	; 8
    104e:	51 f1       	breq	.+84     	; 0x10a4 <__ultoa_invert+0x5c>
    1050:	20 31       	cpi	r18, 0x10	; 16
    1052:	81 f1       	breq	.+96     	; 0x10b4 <__ultoa_invert+0x6c>
    1054:	e8 94       	clt
    1056:	6f 93       	push	r22
    1058:	6e 7f       	andi	r22, 0xFE	; 254
    105a:	6e 5f       	subi	r22, 0xFE	; 254
    105c:	7f 4f       	sbci	r23, 0xFF	; 255
    105e:	8f 4f       	sbci	r24, 0xFF	; 255
    1060:	9f 4f       	sbci	r25, 0xFF	; 255
    1062:	af 4f       	sbci	r26, 0xFF	; 255
    1064:	b1 e0       	ldi	r27, 0x01	; 1
    1066:	3e d0       	rcall	.+124    	; 0x10e4 <__ultoa_invert+0x9c>
    1068:	b4 e0       	ldi	r27, 0x04	; 4
    106a:	3c d0       	rcall	.+120    	; 0x10e4 <__ultoa_invert+0x9c>
    106c:	67 0f       	add	r22, r23
    106e:	78 1f       	adc	r23, r24
    1070:	89 1f       	adc	r24, r25
    1072:	9a 1f       	adc	r25, r26
    1074:	a1 1d       	adc	r26, r1
    1076:	68 0f       	add	r22, r24
    1078:	79 1f       	adc	r23, r25
    107a:	8a 1f       	adc	r24, r26
    107c:	91 1d       	adc	r25, r1
    107e:	a1 1d       	adc	r26, r1
    1080:	6a 0f       	add	r22, r26
    1082:	71 1d       	adc	r23, r1
    1084:	81 1d       	adc	r24, r1
    1086:	91 1d       	adc	r25, r1
    1088:	a1 1d       	adc	r26, r1
    108a:	20 d0       	rcall	.+64     	; 0x10cc <__ultoa_invert+0x84>
    108c:	09 f4       	brne	.+2      	; 0x1090 <__ultoa_invert+0x48>
    108e:	68 94       	set
    1090:	3f 91       	pop	r19
    1092:	2a e0       	ldi	r18, 0x0A	; 10
    1094:	26 9f       	mul	r18, r22
    1096:	11 24       	eor	r1, r1
    1098:	30 19       	sub	r19, r0
    109a:	30 5d       	subi	r19, 0xD0	; 208
    109c:	31 93       	st	Z+, r19
    109e:	de f6       	brtc	.-74     	; 0x1056 <__ultoa_invert+0xe>
    10a0:	cf 01       	movw	r24, r30
    10a2:	08 95       	ret
    10a4:	46 2f       	mov	r20, r22
    10a6:	47 70       	andi	r20, 0x07	; 7
    10a8:	40 5d       	subi	r20, 0xD0	; 208
    10aa:	41 93       	st	Z+, r20
    10ac:	b3 e0       	ldi	r27, 0x03	; 3
    10ae:	0f d0       	rcall	.+30     	; 0x10ce <__ultoa_invert+0x86>
    10b0:	c9 f7       	brne	.-14     	; 0x10a4 <__ultoa_invert+0x5c>
    10b2:	f6 cf       	rjmp	.-20     	; 0x10a0 <__ultoa_invert+0x58>
    10b4:	46 2f       	mov	r20, r22
    10b6:	4f 70       	andi	r20, 0x0F	; 15
    10b8:	40 5d       	subi	r20, 0xD0	; 208
    10ba:	4a 33       	cpi	r20, 0x3A	; 58
    10bc:	18 f0       	brcs	.+6      	; 0x10c4 <__ultoa_invert+0x7c>
    10be:	49 5d       	subi	r20, 0xD9	; 217
    10c0:	31 fd       	sbrc	r19, 1
    10c2:	40 52       	subi	r20, 0x20	; 32
    10c4:	41 93       	st	Z+, r20
    10c6:	02 d0       	rcall	.+4      	; 0x10cc <__ultoa_invert+0x84>
    10c8:	a9 f7       	brne	.-22     	; 0x10b4 <__ultoa_invert+0x6c>
    10ca:	ea cf       	rjmp	.-44     	; 0x10a0 <__ultoa_invert+0x58>
    10cc:	b4 e0       	ldi	r27, 0x04	; 4
    10ce:	a6 95       	lsr	r26
    10d0:	97 95       	ror	r25
    10d2:	87 95       	ror	r24
    10d4:	77 95       	ror	r23
    10d6:	67 95       	ror	r22
    10d8:	ba 95       	dec	r27
    10da:	c9 f7       	brne	.-14     	; 0x10ce <__ultoa_invert+0x86>
    10dc:	00 97       	sbiw	r24, 0x00	; 0
    10de:	61 05       	cpc	r22, r1
    10e0:	71 05       	cpc	r23, r1
    10e2:	08 95       	ret
    10e4:	9b 01       	movw	r18, r22
    10e6:	ac 01       	movw	r20, r24
    10e8:	0a 2e       	mov	r0, r26
    10ea:	06 94       	lsr	r0
    10ec:	57 95       	ror	r21
    10ee:	47 95       	ror	r20
    10f0:	37 95       	ror	r19
    10f2:	27 95       	ror	r18
    10f4:	ba 95       	dec	r27
    10f6:	c9 f7       	brne	.-14     	; 0x10ea <__ultoa_invert+0xa2>
    10f8:	62 0f       	add	r22, r18
    10fa:	73 1f       	adc	r23, r19
    10fc:	84 1f       	adc	r24, r20
    10fe:	95 1f       	adc	r25, r21
    1100:	a0 1d       	adc	r26, r0
    1102:	08 95       	ret

00001104 <__prologue_saves__>:
    1104:	2f 92       	push	r2
    1106:	3f 92       	push	r3
    1108:	4f 92       	push	r4
    110a:	5f 92       	push	r5
    110c:	6f 92       	push	r6
    110e:	7f 92       	push	r7
    1110:	8f 92       	push	r8
    1112:	9f 92       	push	r9
    1114:	af 92       	push	r10
    1116:	bf 92       	push	r11
    1118:	cf 92       	push	r12
    111a:	df 92       	push	r13
    111c:	ef 92       	push	r14
    111e:	ff 92       	push	r15
    1120:	0f 93       	push	r16
    1122:	1f 93       	push	r17
    1124:	cf 93       	push	r28
    1126:	df 93       	push	r29
    1128:	cd b7       	in	r28, 0x3d	; 61
    112a:	de b7       	in	r29, 0x3e	; 62
    112c:	ca 1b       	sub	r28, r26
    112e:	db 0b       	sbc	r29, r27
    1130:	0f b6       	in	r0, 0x3f	; 63
    1132:	f8 94       	cli
    1134:	de bf       	out	0x3e, r29	; 62
    1136:	0f be       	out	0x3f, r0	; 63
    1138:	cd bf       	out	0x3d, r28	; 61
    113a:	09 94       	ijmp

0000113c <__epilogue_restores__>:
    113c:	2a 88       	ldd	r2, Y+18	; 0x12
    113e:	39 88       	ldd	r3, Y+17	; 0x11
    1140:	48 88       	ldd	r4, Y+16	; 0x10
    1142:	5f 84       	ldd	r5, Y+15	; 0x0f
    1144:	6e 84       	ldd	r6, Y+14	; 0x0e
    1146:	7d 84       	ldd	r7, Y+13	; 0x0d
    1148:	8c 84       	ldd	r8, Y+12	; 0x0c
    114a:	9b 84       	ldd	r9, Y+11	; 0x0b
    114c:	aa 84       	ldd	r10, Y+10	; 0x0a
    114e:	b9 84       	ldd	r11, Y+9	; 0x09
    1150:	c8 84       	ldd	r12, Y+8	; 0x08
    1152:	df 80       	ldd	r13, Y+7	; 0x07
    1154:	ee 80       	ldd	r14, Y+6	; 0x06
    1156:	fd 80       	ldd	r15, Y+5	; 0x05
    1158:	0c 81       	ldd	r16, Y+4	; 0x04
    115a:	1b 81       	ldd	r17, Y+3	; 0x03
    115c:	aa 81       	ldd	r26, Y+2	; 0x02
    115e:	b9 81       	ldd	r27, Y+1	; 0x01
    1160:	ce 0f       	add	r28, r30
    1162:	d1 1d       	adc	r29, r1
    1164:	0f b6       	in	r0, 0x3f	; 63
    1166:	f8 94       	cli
    1168:	de bf       	out	0x3e, r29	; 62
    116a:	0f be       	out	0x3f, r0	; 63
    116c:	cd bf       	out	0x3d, r28	; 61
    116e:	ed 01       	movw	r28, r26
    1170:	08 95       	ret

00001172 <_exit>:
    1172:	f8 94       	cli

00001174 <__stop_program>:
    1174:	ff cf       	rjmp	.-2      	; 0x1174 <__stop_program>
