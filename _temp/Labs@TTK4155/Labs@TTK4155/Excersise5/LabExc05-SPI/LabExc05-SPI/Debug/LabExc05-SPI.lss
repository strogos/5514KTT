
LabExc05-SPI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001da  00800100  00000cd0  00000d64  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cd0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  008002da  008002da  00000f3e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f3e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000210  00000000  00000000  00000f9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001655  00000000  00000000  000011aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000aa8  00000000  00000000  000027ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002b24  00000000  00000000  000032a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000530  00000000  00000000  00005dcc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000df75  00000000  00000000  000062fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000011d4  00000000  00000000  00014271  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000180  00000000  00000000  00015445  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000042d0  00000000  00000000  000155c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	37 c0       	rjmp	.+110    	; 0x70 <__ctors_end>
   2:	00 00       	nop
   4:	50 c0       	rjmp	.+160    	; 0xa6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c0       	rjmp	.+156    	; 0xa6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c0       	rjmp	.+152    	; 0xa6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c0       	rjmp	.+148    	; 0xa6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c0       	rjmp	.+144    	; 0xa6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c0       	rjmp	.+140    	; 0xa6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c0       	rjmp	.+136    	; 0xa6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c0       	rjmp	.+132    	; 0xa6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c0       	rjmp	.+128    	; 0xa6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c0       	rjmp	.+124    	; 0xa6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c0       	rjmp	.+120    	; 0xa6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c0       	rjmp	.+116    	; 0xa6 <__bad_interrupt>
  32:	00 00       	nop
  34:	38 c0       	rjmp	.+112    	; 0xa6 <__bad_interrupt>
  36:	00 00       	nop
  38:	36 c0       	rjmp	.+108    	; 0xa6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c0       	rjmp	.+104    	; 0xa6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c0       	rjmp	.+100    	; 0xa6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c0       	rjmp	.+96     	; 0xa6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c0       	rjmp	.+92     	; 0xa6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	78 c0       	rjmp	.+240    	; 0x13e <__vector_19>
  4e:	00 00       	nop
  50:	2a c0       	rjmp	.+84     	; 0xa6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c0       	rjmp	.+80     	; 0xa6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c0       	rjmp	.+76     	; 0xa6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c0       	rjmp	.+72     	; 0xa6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c0       	rjmp	.+68     	; 0xa6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c0       	rjmp	.+64     	; 0xa6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c0       	rjmp	.+60     	; 0xa6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c0       	rjmp	.+56     	; 0xa6 <__bad_interrupt>
	...

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 ed       	ldi	r30, 0xD0	; 208
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 3d       	cpi	r26, 0xDA	; 218
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	aa ed       	ldi	r26, 0xDA	; 218
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a6 3e       	cpi	r26, 0xE6	; 230
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	7c d1       	rcall	.+760    	; 0x39c <main>
  a4:	13 c6       	rjmp	.+3110   	; 0xccc <_exit>

000000a6 <__bad_interrupt>:
  a6:	ac cf       	rjmp	.-168    	; 0x0 <__vectors>

000000a8 <mcpReset>:

#include "MCP2515.h"

void mcpReset()
{
	spiSlaveSelect();
  a8:	32 d0       	rcall	.+100    	; 0x10e <spiSlaveSelect>
	
	spiSendData(0xC0);
  aa:	80 ec       	ldi	r24, 0xC0	; 192
  ac:	2b d0       	rcall	.+86     	; 0x104 <spiSendData>
	
	spiSlaveDeselect();
  ae:	31 c0       	rjmp	.+98     	; 0x112 <spiSlaveDeselect>
  b0:	08 95       	ret

000000b2 <mcpLoopBack>:
}

void mcpLoopBack()
{
	spiSlaveSelect();
  b2:	2d d0       	rcall	.+90     	; 0x10e <spiSlaveSelect>
	
	spiSendData(0x40);
  b4:	80 e4       	ldi	r24, 0x40	; 64
  b6:	26 d0       	rcall	.+76     	; 0x104 <spiSendData>
	
	spiSlaveDeselect();
  b8:	2c c0       	rjmp	.+88     	; 0x112 <spiSlaveDeselect>
  ba:	08 95       	ret

000000bc <mcpRead>:
}

uint8_t mcpRead(uint8_t address)
{
  bc:	cf 93       	push	r28
  be:	c8 2f       	mov	r28, r24
	uint8_t data;
	
	spiSlaveSelect();
  c0:	26 d0       	rcall	.+76     	; 0x10e <spiSlaveSelect>
	
	spiSendData(0x03);
  c2:	83 e0       	ldi	r24, 0x03	; 3
  c4:	1f d0       	rcall	.+62     	; 0x104 <spiSendData>
	spiSendData(address);
  c6:	8c 2f       	mov	r24, r28
  c8:	1d d0       	rcall	.+58     	; 0x104 <spiSendData>
	
	data = spiSendData(0xff);
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	1b d0       	rcall	.+54     	; 0x104 <spiSendData>
  ce:	c8 2f       	mov	r28, r24
	
	spiSlaveDeselect();
  d0:	20 d0       	rcall	.+64     	; 0x112 <spiSlaveDeselect>
	
	return data;
}
  d2:	8c 2f       	mov	r24, r28
  d4:	cf 91       	pop	r28
  d6:	08 95       	ret

000000d8 <mcpWrite>:

void mcpWrite(uint8_t address, uint8_t data)
{
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	d8 2f       	mov	r29, r24
  de:	c6 2f       	mov	r28, r22
	spiSlaveSelect();
  e0:	16 d0       	rcall	.+44     	; 0x10e <spiSlaveSelect>
	
	spiSendData(0x02);
  e2:	82 e0       	ldi	r24, 0x02	; 2
  e4:	0f d0       	rcall	.+30     	; 0x104 <spiSendData>
	spiSendData(address);
  e6:	8d 2f       	mov	r24, r29
  e8:	0d d0       	rcall	.+26     	; 0x104 <spiSendData>
	spiSendData(data);
  ea:	8c 2f       	mov	r24, r28
  ec:	0b d0       	rcall	.+22     	; 0x104 <spiSendData>
	
	spiSlaveDeselect(); 
  ee:	11 d0       	rcall	.+34     	; 0x112 <spiSlaveDeselect>
}
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	08 95       	ret

000000f6 <spiInit>:
	
	//Wait for data to be received
	
	while(!(SPSR&(1<<SPIF)));
	*data=SPDR;	
}
  f6:	87 b3       	in	r24, 0x17	; 23
  f8:	80 6b       	ori	r24, 0xB0	; 176
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	be 98       	cbi	0x17, 6	; 23
  fe:	81 e5       	ldi	r24, 0x51	; 81
 100:	8d b9       	out	0x0d, r24	; 13
 102:	08 95       	ret

00000104 <spiSendData>:
 104:	8f b9       	out	0x0f, r24	; 15
 106:	77 9b       	sbis	0x0e, 7	; 14
 108:	fe cf       	rjmp	.-4      	; 0x106 <spiSendData+0x2>
 10a:	8f b1       	in	r24, 0x0f	; 15
 10c:	08 95       	ret

0000010e <spiSlaveSelect>:

void spiSlaveSelect(void)
{
	//~SS=0 (select slave)
	PORTB &= ~(1<<PB4);
 10e:	c4 98       	cbi	0x18, 4	; 24
 110:	08 95       	ret

00000112 <spiSlaveDeselect>:
}

void spiSlaveDeselect(void)
{
	//~SS=1 (deselect slave)
	PORTB |= (1<<PB4);
 112:	c4 9a       	sbi	0x18, 4	; 24
 114:	08 95       	ret

00000116 <usartSendByte>:


//Send a byte using USART
void usartSendByte(uint8_t byteToSend)
{
		while((UCSR0A&(1<<UDRE0))==0);//---------------//Only transmit data if data bus is available (not already transmitting)
 116:	5d 9b       	sbis	0x0b, 5	; 11
 118:	fe cf       	rjmp	.-4      	; 0x116 <usartSendByte>
		UDR0=byteToSend;//---------------------------//transmit byte
 11a:	8c b9       	out	0x0c, r24	; 12
 11c:	08 95       	ret

0000011e <usartInitialize>:
		#if USART_OPERATING_MODE_U2X
			unsigned int UBRR=(F_CPU / (8UL * USART_BAUDRATE)) - 1; //if integer trunctuation is noticed (...not getting the expected baudrate) due to integer devision, USE: ((F_CPU + USART_BAUD_RATE * 8L) / (USART_BAUD_RATE * 16L) - 1) instead. When doing integer division it is usually better to round to the nearest integer, rather than to the lowest. 
			UCSR0A |= (1<<U2X0);//---------------------------//U2x=1
		#else
			unsigned int UBRR=(F_CPU / (16UL * USART_BAUDRATE)) - 1;
			UCSR0A &= ~(1<<U2X0);//---------------------------//U2X=0
 11e:	59 98       	cbi	0x0b, 1	; 11
		#endif

		//Set up the baud rate for USART0
		UBRR0L=UBRR;//---------------------------// load lower 8 bits of baud rate value
 120:	8f e1       	ldi	r24, 0x1F	; 31
 122:	89 b9       	out	0x09, r24	; 9
		UBRR0H=(UBRR>>8);//---------------------------// load upper 8 bits of baud rate value	
 124:	10 bc       	out	0x20, r1	; 32
		
		//Enable Tx & Rx
		UCSR0B=(1<<TXEN0)|(1<<RXEN0);
 126:	88 e1       	ldi	r24, 0x18	; 24
 128:	8a b9       	out	0x0a, r24	; 10
		/*Configure Data Format: 
			-	Data Bits = 8;
			-	Stop Bits = 2;
			-	Parity = EVEN;		
		*/
		UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00)|(1<<UPM01);
 12a:	8e ea       	ldi	r24, 0xAE	; 174
 12c:	80 bd       	out	0x20, r24	; 32
		*	- Second parameter: optional; used for get functions, ie. receiving a character from the USART.
		*	- BEAWARE that this function uses malloc()
		*/
		if(USART_ENABLE_printf)
		{
			fdevopen(&usartSendByte,NULL);
 12e:	60 e0       	ldi	r22, 0x00	; 0
 130:	70 e0       	ldi	r23, 0x00	; 0
 132:	8b e8       	ldi	r24, 0x8B	; 139
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	81 d2       	rcall	.+1282   	; 0x63a <fdevopen>
		}
		
		
		if(USART_INTERRUPT_RX)
		{
			UCSR0B |= (1<<RXCIE0); // Enable the USART Receive Complete interrupt (USART_RXCIE0)
 138:	57 9a       	sbi	0x0a, 7	; 10
			//Enable the interrupts globally. 
			sei();
 13a:	78 94       	sei
 13c:	08 95       	ret

0000013e <__vector_19>:
UsartGlobalStruct globalVariables;

//volatile uint8_t byteOfData; //to hold data on RX interrupt
//interrupt if receiving data
ISR (USART0_RXC_vect,ISR_BLOCK)
{
 13e:	1f 92       	push	r1
 140:	0f 92       	push	r0
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	0f 92       	push	r0
 146:	11 24       	eor	r1, r1
 148:	8f 93       	push	r24
	if (USART_INTERRUPT_RX)
	{
		UsartGlobalStruct *ptr=&globalVariables;	
		ptr->RXdata=UDR0;//grab RX byte 
 14a:	8c b1       	in	r24, 0x0c	; 12
 14c:	80 93 da 02 	sts	0x02DA, r24
	}
}
 150:	8f 91       	pop	r24
 152:	0f 90       	pop	r0
 154:	0f be       	out	0x3f, r0	; 63
 156:	0f 90       	pop	r0
 158:	1f 90       	pop	r1
 15a:	18 95       	reti

0000015c <xmemInit>:

	//Write address on SRAM
	memoryPosition[address] = data;
	
	return 0;
}
 15c:	80 e8       	ldi	r24, 0x80	; 128
 15e:	85 bf       	out	0x35, r24	; 53
 160:	16 be       	out	0x36, r1	; 54
 162:	80 e2       	ldi	r24, 0x20	; 32
 164:	80 bf       	out	0x30, r24	; 48
 166:	08 95       	ret

00000168 <xmemTest>:
 168:	cf 92       	push	r12
 16a:	df 92       	push	r13
 16c:	ef 92       	push	r14
 16e:	ff 92       	push	r15
 170:	0f 93       	push	r16
 172:	1f 93       	push	r17
 174:	cf 93       	push	r28
 176:	df 93       	push	r29
 178:	86 e0       	ldi	r24, 0x06	; 6
 17a:	91 e0       	ldi	r25, 0x01	; 1
 17c:	b9 d2       	rcall	.+1394   	; 0x6f0 <puts>
 17e:	00 e0       	ldi	r16, 0x00	; 0
 180:	10 e0       	ldi	r17, 0x00	; 0
 182:	c0 e0       	ldi	r28, 0x00	; 0
 184:	d0 e0       	ldi	r29, 0x00	; 0
 186:	0f 2e       	mov	r0, r31
 188:	fd e1       	ldi	r31, 0x1D	; 29
 18a:	ef 2e       	mov	r14, r31
 18c:	f1 e0       	ldi	r31, 0x01	; 1
 18e:	ff 2e       	mov	r15, r31
 190:	f0 2d       	mov	r31, r0
 192:	8c 2f       	mov	r24, r28
 194:	80 95       	com	r24
 196:	fe 01       	movw	r30, r28
 198:	f8 5e       	subi	r31, 0xE8	; 232
 19a:	80 83       	st	Z, r24
 19c:	90 81       	ld	r25, Z
 19e:	98 17       	cp	r25, r24
 1a0:	a1 f0       	breq	.+40     	; 0x1ca <xmemTest+0x62>
 1a2:	90 81       	ld	r25, Z
 1a4:	1f 92       	push	r1
 1a6:	8f 93       	push	r24
 1a8:	1f 92       	push	r1
 1aa:	9f 93       	push	r25
 1ac:	df 93       	push	r29
 1ae:	cf 93       	push	r28
 1b0:	ff 92       	push	r15
 1b2:	ef 92       	push	r14
 1b4:	8c d2       	rcall	.+1304   	; 0x6ce <printf>
 1b6:	0f 5f       	subi	r16, 0xFF	; 255
 1b8:	1f 4f       	sbci	r17, 0xFF	; 255
 1ba:	8d b7       	in	r24, 0x3d	; 61
 1bc:	9e b7       	in	r25, 0x3e	; 62
 1be:	08 96       	adiw	r24, 0x08	; 8
 1c0:	0f b6       	in	r0, 0x3f	; 63
 1c2:	f8 94       	cli
 1c4:	9e bf       	out	0x3e, r25	; 62
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	8d bf       	out	0x3d, r24	; 61
 1ca:	21 96       	adiw	r28, 0x01	; 1
 1cc:	c1 15       	cp	r28, r1
 1ce:	98 e0       	ldi	r25, 0x08	; 8
 1d0:	d9 07       	cpc	r29, r25
 1d2:	f9 f6       	brne	.-66     	; 0x192 <xmemTest+0x2a>
 1d4:	e1 2c       	mov	r14, r1
 1d6:	f1 2c       	mov	r15, r1
 1d8:	c0 e0       	ldi	r28, 0x00	; 0
 1da:	d0 e0       	ldi	r29, 0x00	; 0
 1dc:	0f 2e       	mov	r0, r31
 1de:	fd e5       	ldi	r31, 0x5D	; 93
 1e0:	cf 2e       	mov	r12, r31
 1e2:	f1 e0       	ldi	r31, 0x01	; 1
 1e4:	df 2e       	mov	r13, r31
 1e6:	f0 2d       	mov	r31, r0
 1e8:	8c 2f       	mov	r24, r28
 1ea:	80 95       	com	r24
 1ec:	fe 01       	movw	r30, r28
 1ee:	f8 5e       	subi	r31, 0xE8	; 232
 1f0:	90 81       	ld	r25, Z
 1f2:	89 17       	cp	r24, r25
 1f4:	a9 f0       	breq	.+42     	; 0x220 <xmemTest+0xb8>
 1f6:	90 81       	ld	r25, Z
 1f8:	1f 92       	push	r1
 1fa:	8f 93       	push	r24
 1fc:	1f 92       	push	r1
 1fe:	9f 93       	push	r25
 200:	df 93       	push	r29
 202:	cf 93       	push	r28
 204:	df 92       	push	r13
 206:	cf 92       	push	r12
 208:	62 d2       	rcall	.+1220   	; 0x6ce <printf>
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	e8 1a       	sub	r14, r24
 20e:	f8 0a       	sbc	r15, r24
 210:	8d b7       	in	r24, 0x3d	; 61
 212:	9e b7       	in	r25, 0x3e	; 62
 214:	08 96       	adiw	r24, 0x08	; 8
 216:	0f b6       	in	r0, 0x3f	; 63
 218:	f8 94       	cli
 21a:	9e bf       	out	0x3e, r25	; 62
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	8d bf       	out	0x3d, r24	; 61
 220:	21 96       	adiw	r28, 0x01	; 1
 222:	c1 15       	cp	r28, r1
 224:	98 e0       	ldi	r25, 0x08	; 8
 226:	d9 07       	cpc	r29, r25
 228:	f9 f6       	brne	.-66     	; 0x1e8 <xmemTest+0x80>
 22a:	ff 92       	push	r15
 22c:	ef 92       	push	r14
 22e:	1f 93       	push	r17
 230:	0f 93       	push	r16
 232:	8c e9       	ldi	r24, 0x9C	; 156
 234:	91 e0       	ldi	r25, 0x01	; 1
 236:	9f 93       	push	r25
 238:	8f 93       	push	r24
 23a:	49 d2       	rcall	.+1170   	; 0x6ce <printf>
 23c:	0f 90       	pop	r0
 23e:	0f 90       	pop	r0
 240:	0f 90       	pop	r0
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	ff 90       	pop	r15
 252:	ef 90       	pop	r14
 254:	df 90       	pop	r13
 256:	cf 90       	pop	r12
 258:	08 95       	ret

0000025a <xmemExampleFunction>:
 25a:	bf 92       	push	r11
 25c:	cf 92       	push	r12
 25e:	df 92       	push	r13
 260:	ef 92       	push	r14
 262:	ff 92       	push	r15
 264:	0f 93       	push	r16
 266:	1f 93       	push	r17
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	8c ee       	ldi	r24, 0xEC	; 236
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	3f d2       	rcall	.+1150   	; 0x6f0 <puts>
 272:	80 e4       	ldi	r24, 0x40	; 64
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	ba d0       	rcall	.+372    	; 0x3ec <malloc>
 278:	7c 01       	movw	r14, r24
 27a:	ff 92       	push	r15
 27c:	8f 93       	push	r24
 27e:	1f 92       	push	r1
 280:	80 e4       	ldi	r24, 0x40	; 64
 282:	8f 93       	push	r24
 284:	87 e0       	ldi	r24, 0x07	; 7
 286:	92 e0       	ldi	r25, 0x02	; 2
 288:	9f 93       	push	r25
 28a:	8f 93       	push	r24
 28c:	20 d2       	rcall	.+1088   	; 0x6ce <printf>
 28e:	0f 90       	pop	r0
 290:	0f 90       	pop	r0
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
 298:	0f 90       	pop	r0
 29a:	f7 01       	movw	r30, r14
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	11 92       	st	Z+, r1
 2a0:	8f 5f       	subi	r24, 0xFF	; 255
 2a2:	80 34       	cpi	r24, 0x40	; 64
 2a4:	e1 f7       	brne	.-8      	; 0x29e <xmemExampleFunction+0x44>
 2a6:	58 c0       	rjmp	.+176    	; 0x358 <xmemExampleFunction+0xfe>
 2a8:	f8 01       	movw	r30, r16
 2aa:	81 91       	ld	r24, Z+
 2ac:	8f 01       	movw	r16, r30
 2ae:	1f 92       	push	r1
 2b0:	8f 93       	push	r24
 2b2:	df 93       	push	r29
 2b4:	cf 93       	push	r28
 2b6:	0b d2       	rcall	.+1046   	; 0x6ce <printf>
 2b8:	0f 90       	pop	r0
 2ba:	0f 90       	pop	r0
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	8b 2d       	mov	r24, r11
 2c2:	8f 70       	andi	r24, 0x0F	; 15
 2c4:	8f 30       	cpi	r24, 0x0F	; 15
 2c6:	19 f4       	brne	.+6      	; 0x2ce <xmemExampleFunction+0x74>
 2c8:	81 ea       	ldi	r24, 0xA1	; 161
 2ca:	92 e0       	ldi	r25, 0x02	; 2
 2cc:	11 d2       	rcall	.+1058   	; 0x6f0 <puts>
 2ce:	b3 94       	inc	r11
 2d0:	e0 e4       	ldi	r30, 0x40	; 64
 2d2:	be 12       	cpse	r11, r30
 2d4:	e9 cf       	rjmp	.-46     	; 0x2a8 <xmemExampleFunction+0x4e>
 2d6:	ff 92       	push	r15
 2d8:	ef 92       	push	r14
 2da:	1f 92       	push	r1
 2dc:	80 e4       	ldi	r24, 0x40	; 64
 2de:	8f 93       	push	r24
 2e0:	84 e4       	ldi	r24, 0x44	; 68
 2e2:	92 e0       	ldi	r25, 0x02	; 2
 2e4:	9f 93       	push	r25
 2e6:	8f 93       	push	r24
 2e8:	f2 d1       	rcall	.+996    	; 0x6ce <printf>
 2ea:	0f 90       	pop	r0
 2ec:	0f 90       	pop	r0
 2ee:	0f 90       	pop	r0
 2f0:	0f 90       	pop	r0
 2f2:	0f 90       	pop	r0
 2f4:	0f 90       	pop	r0
 2f6:	f7 01       	movw	r30, r14
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	81 93       	st	Z+, r24
 2fc:	8f 5f       	subi	r24, 0xFF	; 255
 2fe:	80 34       	cpi	r24, 0x40	; 64
 300:	e1 f7       	brne	.-8      	; 0x2fa <xmemExampleFunction+0xa0>
 302:	18 c0       	rjmp	.+48     	; 0x334 <xmemExampleFunction+0xda>
 304:	f8 01       	movw	r30, r16
 306:	81 91       	ld	r24, Z+
 308:	8f 01       	movw	r16, r30
 30a:	1f 92       	push	r1
 30c:	8f 93       	push	r24
 30e:	df 93       	push	r29
 310:	cf 93       	push	r28
 312:	dd d1       	rcall	.+954    	; 0x6ce <printf>
 314:	0f 90       	pop	r0
 316:	0f 90       	pop	r0
 318:	0f 90       	pop	r0
 31a:	0f 90       	pop	r0
 31c:	8f 2d       	mov	r24, r15
 31e:	8f 70       	andi	r24, 0x0F	; 15
 320:	8f 30       	cpi	r24, 0x0F	; 15
 322:	19 f4       	brne	.+6      	; 0x32a <xmemExampleFunction+0xd0>
 324:	81 ea       	ldi	r24, 0xA1	; 161
 326:	92 e0       	ldi	r25, 0x02	; 2
 328:	e3 d1       	rcall	.+966    	; 0x6f0 <puts>
 32a:	f3 94       	inc	r15
 32c:	e0 e4       	ldi	r30, 0x40	; 64
 32e:	fe 12       	cpse	r15, r30
 330:	e9 cf       	rjmp	.-46     	; 0x304 <xmemExampleFunction+0xaa>
 332:	25 c0       	rjmp	.+74     	; 0x37e <xmemExampleFunction+0x124>
 334:	f7 01       	movw	r30, r14
 336:	80 81       	ld	r24, Z
 338:	1f 92       	push	r1
 33a:	8f 93       	push	r24
 33c:	8e e3       	ldi	r24, 0x3E	; 62
 33e:	92 e0       	ldi	r25, 0x02	; 2
 340:	9f 93       	push	r25
 342:	8f 93       	push	r24
 344:	c4 d1       	rcall	.+904    	; 0x6ce <printf>
 346:	0f 90       	pop	r0
 348:	0f 90       	pop	r0
 34a:	0f 90       	pop	r0
 34c:	0f 90       	pop	r0
 34e:	86 01       	movw	r16, r12
 350:	f1 2c       	mov	r15, r1
 352:	ce e3       	ldi	r28, 0x3E	; 62
 354:	d2 e0       	ldi	r29, 0x02	; 2
 356:	e9 cf       	rjmp	.-46     	; 0x32a <xmemExampleFunction+0xd0>
 358:	f7 01       	movw	r30, r14
 35a:	81 91       	ld	r24, Z+
 35c:	6f 01       	movw	r12, r30
 35e:	1f 92       	push	r1
 360:	8f 93       	push	r24
 362:	8e e3       	ldi	r24, 0x3E	; 62
 364:	92 e0       	ldi	r25, 0x02	; 2
 366:	9f 93       	push	r25
 368:	8f 93       	push	r24
 36a:	b1 d1       	rcall	.+866    	; 0x6ce <printf>
 36c:	0f 90       	pop	r0
 36e:	0f 90       	pop	r0
 370:	0f 90       	pop	r0
 372:	0f 90       	pop	r0
 374:	86 01       	movw	r16, r12
 376:	b1 2c       	mov	r11, r1
 378:	ce e3       	ldi	r28, 0x3E	; 62
 37a:	d2 e0       	ldi	r29, 0x02	; 2
 37c:	a8 cf       	rjmp	.-176    	; 0x2ce <xmemExampleFunction+0x74>
 37e:	df 91       	pop	r29
 380:	cf 91       	pop	r28
 382:	1f 91       	pop	r17
 384:	0f 91       	pop	r16
 386:	ff 90       	pop	r15
 388:	ef 90       	pop	r14
 38a:	df 90       	pop	r13
 38c:	cf 90       	pop	r12
 38e:	bf 90       	pop	r11
 390:	08 95       	ret

00000392 <xmemReadFrom>:
{
	//Start address for the xmem
	uint8_t *memoryPosition = 0x1800;
	
	//Read address from SRAM
	return memoryPosition[address];
 392:	98 5e       	subi	r25, 0xE8	; 232
 394:	fc 01       	movw	r30, r24
 396:	80 81       	ld	r24, Z
}
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	08 95       	ret

0000039c <main>:

//main function
int main (void)
{
	// Initialize external memory interface // NB: "xmemInit()" must be called before any function that uses heap memory!!
	xmemInit(); //enable external memory addressing bits to be moved from this function!
 39c:	df de       	rcall	.-578    	; 0x15c <xmemInit>
	
	// dummy for testing USART
	//char *dataString="\r......Booting up.\r";
		
	//init. USART
	usartInitialize();//--------*****-////TO DO: implement light diode blink if(usartInitialize()); else ERROR BLINK CODE.. also write reference for blinking code...
 39e:	bf de       	rcall	.-642    	; 0x11e <usartInitialize>
	
	//test external SRAM
	xmemTest();
 3a0:	e3 de       	rcall	.-570    	; 0x168 <xmemTest>
	xmemExampleFunction();
 3a2:	5b df       	rcall	.-330    	; 0x25a <xmemExampleFunction>
	printf("\n\r0x%02x",xmemReadFrom(5));
 3a4:	85 e0       	ldi	r24, 0x05	; 5
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	f4 df       	rcall	.-24     	; 0x392 <xmemReadFrom>
 3aa:	9f 93       	push	r25
 3ac:	8f 93       	push	r24
 3ae:	8c ec       	ldi	r24, 0xCC	; 204
 3b0:	92 e0       	ldi	r25, 0x02	; 2
 3b2:	9f 93       	push	r25
 3b4:	8f 93       	push	r24
 3b6:	8b d1       	rcall	.+790    	; 0x6ce <printf>
	//clearScreen();
	//uint8_t column=0,line=0;
	
	
	//SPI stuff
	spiInit();
 3b8:	9e de       	rcall	.-708    	; 0xf6 <spiInit>
	mcpReset();
 3ba:	76 de       	rcall	.-788    	; 0xa8 <mcpReset>
	mcpLoopBack();
 3bc:	7a de       	rcall	.-780    	; 0xb2 <mcpLoopBack>
	mcpWrite(0x00, 0xdd);
 3be:	6d ed       	ldi	r22, 0xDD	; 221
 3c0:	80 e0       	ldi	r24, 0x00	; 0
 3c2:	8a de       	rcall	.-748    	; 0xd8 <mcpWrite>
	
	
	printf("\n\r%d", mcpRead(0x00));
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	7a de       	rcall	.-780    	; 0xbc <mcpRead>
 3c8:	1f 92       	push	r1
 3ca:	8f 93       	push	r24
 3cc:	85 ed       	ldi	r24, 0xD5	; 213
 3ce:	92 e0       	ldi	r25, 0x02	; 2
 3d0:	9f 93       	push	r25
 3d2:	8f 93       	push	r24
 3d4:	7c d1       	rcall	.+760    	; 0x6ce <printf>
 3d6:	8d b7       	in	r24, 0x3d	; 61
 3d8:	9e b7       	in	r25, 0x3e	; 62
 3da:	08 96       	adiw	r24, 0x08	; 8
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	f8 94       	cli
 3e0:	9e bf       	out	0x3e, r25	; 62
 3e2:	0f be       	out	0x3f, r0	; 63
 3e4:	8d bf       	out	0x3d, r24	; 61
	
	
 3e6:	80 e0       	ldi	r24, 0x00	; 0
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	08 95       	ret

000003ec <malloc>:
 3ec:	cf 93       	push	r28
 3ee:	df 93       	push	r29
 3f0:	82 30       	cpi	r24, 0x02	; 2
 3f2:	91 05       	cpc	r25, r1
 3f4:	10 f4       	brcc	.+4      	; 0x3fa <malloc+0xe>
 3f6:	82 e0       	ldi	r24, 0x02	; 2
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	e0 91 de 02 	lds	r30, 0x02DE
 3fe:	f0 91 df 02 	lds	r31, 0x02DF
 402:	20 e0       	ldi	r18, 0x00	; 0
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	a0 e0       	ldi	r26, 0x00	; 0
 408:	b0 e0       	ldi	r27, 0x00	; 0
 40a:	30 97       	sbiw	r30, 0x00	; 0
 40c:	39 f1       	breq	.+78     	; 0x45c <malloc+0x70>
 40e:	40 81       	ld	r20, Z
 410:	51 81       	ldd	r21, Z+1	; 0x01
 412:	48 17       	cp	r20, r24
 414:	59 07       	cpc	r21, r25
 416:	b8 f0       	brcs	.+46     	; 0x446 <malloc+0x5a>
 418:	48 17       	cp	r20, r24
 41a:	59 07       	cpc	r21, r25
 41c:	71 f4       	brne	.+28     	; 0x43a <malloc+0x4e>
 41e:	82 81       	ldd	r24, Z+2	; 0x02
 420:	93 81       	ldd	r25, Z+3	; 0x03
 422:	10 97       	sbiw	r26, 0x00	; 0
 424:	29 f0       	breq	.+10     	; 0x430 <malloc+0x44>
 426:	13 96       	adiw	r26, 0x03	; 3
 428:	9c 93       	st	X, r25
 42a:	8e 93       	st	-X, r24
 42c:	12 97       	sbiw	r26, 0x02	; 2
 42e:	2c c0       	rjmp	.+88     	; 0x488 <malloc+0x9c>
 430:	90 93 df 02 	sts	0x02DF, r25
 434:	80 93 de 02 	sts	0x02DE, r24
 438:	27 c0       	rjmp	.+78     	; 0x488 <malloc+0x9c>
 43a:	21 15       	cp	r18, r1
 43c:	31 05       	cpc	r19, r1
 43e:	31 f0       	breq	.+12     	; 0x44c <malloc+0x60>
 440:	42 17       	cp	r20, r18
 442:	53 07       	cpc	r21, r19
 444:	18 f0       	brcs	.+6      	; 0x44c <malloc+0x60>
 446:	a9 01       	movw	r20, r18
 448:	db 01       	movw	r26, r22
 44a:	01 c0       	rjmp	.+2      	; 0x44e <malloc+0x62>
 44c:	ef 01       	movw	r28, r30
 44e:	9a 01       	movw	r18, r20
 450:	bd 01       	movw	r22, r26
 452:	df 01       	movw	r26, r30
 454:	02 80       	ldd	r0, Z+2	; 0x02
 456:	f3 81       	ldd	r31, Z+3	; 0x03
 458:	e0 2d       	mov	r30, r0
 45a:	d7 cf       	rjmp	.-82     	; 0x40a <malloc+0x1e>
 45c:	21 15       	cp	r18, r1
 45e:	31 05       	cpc	r19, r1
 460:	f9 f0       	breq	.+62     	; 0x4a0 <malloc+0xb4>
 462:	28 1b       	sub	r18, r24
 464:	39 0b       	sbc	r19, r25
 466:	24 30       	cpi	r18, 0x04	; 4
 468:	31 05       	cpc	r19, r1
 46a:	80 f4       	brcc	.+32     	; 0x48c <malloc+0xa0>
 46c:	8a 81       	ldd	r24, Y+2	; 0x02
 46e:	9b 81       	ldd	r25, Y+3	; 0x03
 470:	61 15       	cp	r22, r1
 472:	71 05       	cpc	r23, r1
 474:	21 f0       	breq	.+8      	; 0x47e <malloc+0x92>
 476:	fb 01       	movw	r30, r22
 478:	93 83       	std	Z+3, r25	; 0x03
 47a:	82 83       	std	Z+2, r24	; 0x02
 47c:	04 c0       	rjmp	.+8      	; 0x486 <malloc+0x9a>
 47e:	90 93 df 02 	sts	0x02DF, r25
 482:	80 93 de 02 	sts	0x02DE, r24
 486:	fe 01       	movw	r30, r28
 488:	32 96       	adiw	r30, 0x02	; 2
 48a:	44 c0       	rjmp	.+136    	; 0x514 <__stack+0x15>
 48c:	fe 01       	movw	r30, r28
 48e:	e2 0f       	add	r30, r18
 490:	f3 1f       	adc	r31, r19
 492:	81 93       	st	Z+, r24
 494:	91 93       	st	Z+, r25
 496:	22 50       	subi	r18, 0x02	; 2
 498:	31 09       	sbc	r19, r1
 49a:	39 83       	std	Y+1, r19	; 0x01
 49c:	28 83       	st	Y, r18
 49e:	3a c0       	rjmp	.+116    	; 0x514 <__stack+0x15>
 4a0:	20 91 dc 02 	lds	r18, 0x02DC
 4a4:	30 91 dd 02 	lds	r19, 0x02DD
 4a8:	23 2b       	or	r18, r19
 4aa:	41 f4       	brne	.+16     	; 0x4bc <malloc+0xd0>
 4ac:	20 91 02 01 	lds	r18, 0x0102
 4b0:	30 91 03 01 	lds	r19, 0x0103
 4b4:	30 93 dd 02 	sts	0x02DD, r19
 4b8:	20 93 dc 02 	sts	0x02DC, r18
 4bc:	20 91 00 01 	lds	r18, 0x0100
 4c0:	30 91 01 01 	lds	r19, 0x0101
 4c4:	21 15       	cp	r18, r1
 4c6:	31 05       	cpc	r19, r1
 4c8:	41 f4       	brne	.+16     	; 0x4da <malloc+0xee>
 4ca:	2d b7       	in	r18, 0x3d	; 61
 4cc:	3e b7       	in	r19, 0x3e	; 62
 4ce:	40 91 04 01 	lds	r20, 0x0104
 4d2:	50 91 05 01 	lds	r21, 0x0105
 4d6:	24 1b       	sub	r18, r20
 4d8:	35 0b       	sbc	r19, r21
 4da:	e0 91 dc 02 	lds	r30, 0x02DC
 4de:	f0 91 dd 02 	lds	r31, 0x02DD
 4e2:	e2 17       	cp	r30, r18
 4e4:	f3 07       	cpc	r31, r19
 4e6:	a0 f4       	brcc	.+40     	; 0x510 <__stack+0x11>
 4e8:	2e 1b       	sub	r18, r30
 4ea:	3f 0b       	sbc	r19, r31
 4ec:	28 17       	cp	r18, r24
 4ee:	39 07       	cpc	r19, r25
 4f0:	78 f0       	brcs	.+30     	; 0x510 <__stack+0x11>
 4f2:	ac 01       	movw	r20, r24
 4f4:	4e 5f       	subi	r20, 0xFE	; 254
 4f6:	5f 4f       	sbci	r21, 0xFF	; 255
 4f8:	24 17       	cp	r18, r20
 4fa:	35 07       	cpc	r19, r21
 4fc:	48 f0       	brcs	.+18     	; 0x510 <__stack+0x11>
 4fe:	4e 0f       	add	r20, r30
 500:	5f 1f       	adc	r21, r31
 502:	50 93 dd 02 	sts	0x02DD, r21
 506:	40 93 dc 02 	sts	0x02DC, r20
 50a:	81 93       	st	Z+, r24
 50c:	91 93       	st	Z+, r25
 50e:	02 c0       	rjmp	.+4      	; 0x514 <__stack+0x15>
 510:	e0 e0       	ldi	r30, 0x00	; 0
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	cf 01       	movw	r24, r30
 516:	df 91       	pop	r29
 518:	cf 91       	pop	r28
 51a:	08 95       	ret

0000051c <free>:
 51c:	cf 93       	push	r28
 51e:	df 93       	push	r29
 520:	00 97       	sbiw	r24, 0x00	; 0
 522:	09 f4       	brne	.+2      	; 0x526 <free+0xa>
 524:	87 c0       	rjmp	.+270    	; 0x634 <free+0x118>
 526:	fc 01       	movw	r30, r24
 528:	32 97       	sbiw	r30, 0x02	; 2
 52a:	13 82       	std	Z+3, r1	; 0x03
 52c:	12 82       	std	Z+2, r1	; 0x02
 52e:	c0 91 de 02 	lds	r28, 0x02DE
 532:	d0 91 df 02 	lds	r29, 0x02DF
 536:	20 97       	sbiw	r28, 0x00	; 0
 538:	81 f4       	brne	.+32     	; 0x55a <free+0x3e>
 53a:	20 81       	ld	r18, Z
 53c:	31 81       	ldd	r19, Z+1	; 0x01
 53e:	28 0f       	add	r18, r24
 540:	39 1f       	adc	r19, r25
 542:	80 91 dc 02 	lds	r24, 0x02DC
 546:	90 91 dd 02 	lds	r25, 0x02DD
 54a:	82 17       	cp	r24, r18
 54c:	93 07       	cpc	r25, r19
 54e:	79 f5       	brne	.+94     	; 0x5ae <free+0x92>
 550:	f0 93 dd 02 	sts	0x02DD, r31
 554:	e0 93 dc 02 	sts	0x02DC, r30
 558:	6d c0       	rjmp	.+218    	; 0x634 <free+0x118>
 55a:	de 01       	movw	r26, r28
 55c:	20 e0       	ldi	r18, 0x00	; 0
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	ae 17       	cp	r26, r30
 562:	bf 07       	cpc	r27, r31
 564:	50 f4       	brcc	.+20     	; 0x57a <free+0x5e>
 566:	12 96       	adiw	r26, 0x02	; 2
 568:	4d 91       	ld	r20, X+
 56a:	5c 91       	ld	r21, X
 56c:	13 97       	sbiw	r26, 0x03	; 3
 56e:	9d 01       	movw	r18, r26
 570:	41 15       	cp	r20, r1
 572:	51 05       	cpc	r21, r1
 574:	09 f1       	breq	.+66     	; 0x5b8 <free+0x9c>
 576:	da 01       	movw	r26, r20
 578:	f3 cf       	rjmp	.-26     	; 0x560 <free+0x44>
 57a:	b3 83       	std	Z+3, r27	; 0x03
 57c:	a2 83       	std	Z+2, r26	; 0x02
 57e:	40 81       	ld	r20, Z
 580:	51 81       	ldd	r21, Z+1	; 0x01
 582:	84 0f       	add	r24, r20
 584:	95 1f       	adc	r25, r21
 586:	8a 17       	cp	r24, r26
 588:	9b 07       	cpc	r25, r27
 58a:	71 f4       	brne	.+28     	; 0x5a8 <free+0x8c>
 58c:	8d 91       	ld	r24, X+
 58e:	9c 91       	ld	r25, X
 590:	11 97       	sbiw	r26, 0x01	; 1
 592:	84 0f       	add	r24, r20
 594:	95 1f       	adc	r25, r21
 596:	02 96       	adiw	r24, 0x02	; 2
 598:	91 83       	std	Z+1, r25	; 0x01
 59a:	80 83       	st	Z, r24
 59c:	12 96       	adiw	r26, 0x02	; 2
 59e:	8d 91       	ld	r24, X+
 5a0:	9c 91       	ld	r25, X
 5a2:	13 97       	sbiw	r26, 0x03	; 3
 5a4:	93 83       	std	Z+3, r25	; 0x03
 5a6:	82 83       	std	Z+2, r24	; 0x02
 5a8:	21 15       	cp	r18, r1
 5aa:	31 05       	cpc	r19, r1
 5ac:	29 f4       	brne	.+10     	; 0x5b8 <free+0x9c>
 5ae:	f0 93 df 02 	sts	0x02DF, r31
 5b2:	e0 93 de 02 	sts	0x02DE, r30
 5b6:	3e c0       	rjmp	.+124    	; 0x634 <free+0x118>
 5b8:	d9 01       	movw	r26, r18
 5ba:	13 96       	adiw	r26, 0x03	; 3
 5bc:	fc 93       	st	X, r31
 5be:	ee 93       	st	-X, r30
 5c0:	12 97       	sbiw	r26, 0x02	; 2
 5c2:	4d 91       	ld	r20, X+
 5c4:	5d 91       	ld	r21, X+
 5c6:	a4 0f       	add	r26, r20
 5c8:	b5 1f       	adc	r27, r21
 5ca:	ea 17       	cp	r30, r26
 5cc:	fb 07       	cpc	r31, r27
 5ce:	79 f4       	brne	.+30     	; 0x5ee <free+0xd2>
 5d0:	80 81       	ld	r24, Z
 5d2:	91 81       	ldd	r25, Z+1	; 0x01
 5d4:	84 0f       	add	r24, r20
 5d6:	95 1f       	adc	r25, r21
 5d8:	02 96       	adiw	r24, 0x02	; 2
 5da:	d9 01       	movw	r26, r18
 5dc:	11 96       	adiw	r26, 0x01	; 1
 5de:	9c 93       	st	X, r25
 5e0:	8e 93       	st	-X, r24
 5e2:	82 81       	ldd	r24, Z+2	; 0x02
 5e4:	93 81       	ldd	r25, Z+3	; 0x03
 5e6:	13 96       	adiw	r26, 0x03	; 3
 5e8:	9c 93       	st	X, r25
 5ea:	8e 93       	st	-X, r24
 5ec:	12 97       	sbiw	r26, 0x02	; 2
 5ee:	e0 e0       	ldi	r30, 0x00	; 0
 5f0:	f0 e0       	ldi	r31, 0x00	; 0
 5f2:	8a 81       	ldd	r24, Y+2	; 0x02
 5f4:	9b 81       	ldd	r25, Y+3	; 0x03
 5f6:	00 97       	sbiw	r24, 0x00	; 0
 5f8:	19 f0       	breq	.+6      	; 0x600 <free+0xe4>
 5fa:	fe 01       	movw	r30, r28
 5fc:	ec 01       	movw	r28, r24
 5fe:	f9 cf       	rjmp	.-14     	; 0x5f2 <free+0xd6>
 600:	ce 01       	movw	r24, r28
 602:	02 96       	adiw	r24, 0x02	; 2
 604:	28 81       	ld	r18, Y
 606:	39 81       	ldd	r19, Y+1	; 0x01
 608:	82 0f       	add	r24, r18
 60a:	93 1f       	adc	r25, r19
 60c:	20 91 dc 02 	lds	r18, 0x02DC
 610:	30 91 dd 02 	lds	r19, 0x02DD
 614:	28 17       	cp	r18, r24
 616:	39 07       	cpc	r19, r25
 618:	69 f4       	brne	.+26     	; 0x634 <free+0x118>
 61a:	30 97       	sbiw	r30, 0x00	; 0
 61c:	29 f4       	brne	.+10     	; 0x628 <free+0x10c>
 61e:	10 92 df 02 	sts	0x02DF, r1
 622:	10 92 de 02 	sts	0x02DE, r1
 626:	02 c0       	rjmp	.+4      	; 0x62c <free+0x110>
 628:	13 82       	std	Z+3, r1	; 0x03
 62a:	12 82       	std	Z+2, r1	; 0x02
 62c:	d0 93 dd 02 	sts	0x02DD, r29
 630:	c0 93 dc 02 	sts	0x02DC, r28
 634:	df 91       	pop	r29
 636:	cf 91       	pop	r28
 638:	08 95       	ret

0000063a <fdevopen>:
 63a:	0f 93       	push	r16
 63c:	1f 93       	push	r17
 63e:	cf 93       	push	r28
 640:	df 93       	push	r29
 642:	ec 01       	movw	r28, r24
 644:	8b 01       	movw	r16, r22
 646:	00 97       	sbiw	r24, 0x00	; 0
 648:	31 f4       	brne	.+12     	; 0x656 <fdevopen+0x1c>
 64a:	61 15       	cp	r22, r1
 64c:	71 05       	cpc	r23, r1
 64e:	19 f4       	brne	.+6      	; 0x656 <fdevopen+0x1c>
 650:	80 e0       	ldi	r24, 0x00	; 0
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	37 c0       	rjmp	.+110    	; 0x6c4 <fdevopen+0x8a>
 656:	6e e0       	ldi	r22, 0x0E	; 14
 658:	70 e0       	ldi	r23, 0x00	; 0
 65a:	81 e0       	ldi	r24, 0x01	; 1
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	38 d2       	rcall	.+1136   	; 0xad0 <calloc>
 660:	fc 01       	movw	r30, r24
 662:	00 97       	sbiw	r24, 0x00	; 0
 664:	a9 f3       	breq	.-22     	; 0x650 <fdevopen+0x16>
 666:	80 e8       	ldi	r24, 0x80	; 128
 668:	83 83       	std	Z+3, r24	; 0x03
 66a:	01 15       	cp	r16, r1
 66c:	11 05       	cpc	r17, r1
 66e:	71 f0       	breq	.+28     	; 0x68c <fdevopen+0x52>
 670:	13 87       	std	Z+11, r17	; 0x0b
 672:	02 87       	std	Z+10, r16	; 0x0a
 674:	81 e8       	ldi	r24, 0x81	; 129
 676:	83 83       	std	Z+3, r24	; 0x03
 678:	80 91 e0 02 	lds	r24, 0x02E0
 67c:	90 91 e1 02 	lds	r25, 0x02E1
 680:	89 2b       	or	r24, r25
 682:	21 f4       	brne	.+8      	; 0x68c <fdevopen+0x52>
 684:	f0 93 e1 02 	sts	0x02E1, r31
 688:	e0 93 e0 02 	sts	0x02E0, r30
 68c:	20 97       	sbiw	r28, 0x00	; 0
 68e:	c9 f0       	breq	.+50     	; 0x6c2 <fdevopen+0x88>
 690:	d1 87       	std	Z+9, r29	; 0x09
 692:	c0 87       	std	Z+8, r28	; 0x08
 694:	83 81       	ldd	r24, Z+3	; 0x03
 696:	82 60       	ori	r24, 0x02	; 2
 698:	83 83       	std	Z+3, r24	; 0x03
 69a:	80 91 e2 02 	lds	r24, 0x02E2
 69e:	90 91 e3 02 	lds	r25, 0x02E3
 6a2:	89 2b       	or	r24, r25
 6a4:	71 f4       	brne	.+28     	; 0x6c2 <fdevopen+0x88>
 6a6:	f0 93 e3 02 	sts	0x02E3, r31
 6aa:	e0 93 e2 02 	sts	0x02E2, r30
 6ae:	80 91 e4 02 	lds	r24, 0x02E4
 6b2:	90 91 e5 02 	lds	r25, 0x02E5
 6b6:	89 2b       	or	r24, r25
 6b8:	21 f4       	brne	.+8      	; 0x6c2 <fdevopen+0x88>
 6ba:	f0 93 e5 02 	sts	0x02E5, r31
 6be:	e0 93 e4 02 	sts	0x02E4, r30
 6c2:	cf 01       	movw	r24, r30
 6c4:	df 91       	pop	r29
 6c6:	cf 91       	pop	r28
 6c8:	1f 91       	pop	r17
 6ca:	0f 91       	pop	r16
 6cc:	08 95       	ret

000006ce <printf>:
 6ce:	a0 e0       	ldi	r26, 0x00	; 0
 6d0:	b0 e0       	ldi	r27, 0x00	; 0
 6d2:	ec e6       	ldi	r30, 0x6C	; 108
 6d4:	f3 e0       	ldi	r31, 0x03	; 3
 6d6:	d3 c2       	rjmp	.+1446   	; 0xc7e <__prologue_saves__+0x20>
 6d8:	fe 01       	movw	r30, r28
 6da:	35 96       	adiw	r30, 0x05	; 5
 6dc:	61 91       	ld	r22, Z+
 6de:	71 91       	ld	r23, Z+
 6e0:	af 01       	movw	r20, r30
 6e2:	80 91 e2 02 	lds	r24, 0x02E2
 6e6:	90 91 e3 02 	lds	r25, 0x02E3
 6ea:	2f d0       	rcall	.+94     	; 0x74a <vfprintf>
 6ec:	e2 e0       	ldi	r30, 0x02	; 2
 6ee:	e3 c2       	rjmp	.+1478   	; 0xcb6 <__epilogue_restores__+0x20>

000006f0 <puts>:
 6f0:	0f 93       	push	r16
 6f2:	1f 93       	push	r17
 6f4:	cf 93       	push	r28
 6f6:	df 93       	push	r29
 6f8:	e0 91 e2 02 	lds	r30, 0x02E2
 6fc:	f0 91 e3 02 	lds	r31, 0x02E3
 700:	23 81       	ldd	r18, Z+3	; 0x03
 702:	21 ff       	sbrs	r18, 1
 704:	1b c0       	rjmp	.+54     	; 0x73c <puts+0x4c>
 706:	ec 01       	movw	r28, r24
 708:	00 e0       	ldi	r16, 0x00	; 0
 70a:	10 e0       	ldi	r17, 0x00	; 0
 70c:	89 91       	ld	r24, Y+
 70e:	60 91 e2 02 	lds	r22, 0x02E2
 712:	70 91 e3 02 	lds	r23, 0x02E3
 716:	db 01       	movw	r26, r22
 718:	18 96       	adiw	r26, 0x08	; 8
 71a:	ed 91       	ld	r30, X+
 71c:	fc 91       	ld	r31, X
 71e:	19 97       	sbiw	r26, 0x09	; 9
 720:	88 23       	and	r24, r24
 722:	31 f0       	breq	.+12     	; 0x730 <puts+0x40>
 724:	09 95       	icall
 726:	89 2b       	or	r24, r25
 728:	89 f3       	breq	.-30     	; 0x70c <puts+0x1c>
 72a:	0f ef       	ldi	r16, 0xFF	; 255
 72c:	1f ef       	ldi	r17, 0xFF	; 255
 72e:	ee cf       	rjmp	.-36     	; 0x70c <puts+0x1c>
 730:	8a e0       	ldi	r24, 0x0A	; 10
 732:	09 95       	icall
 734:	89 2b       	or	r24, r25
 736:	11 f4       	brne	.+4      	; 0x73c <puts+0x4c>
 738:	c8 01       	movw	r24, r16
 73a:	02 c0       	rjmp	.+4      	; 0x740 <puts+0x50>
 73c:	8f ef       	ldi	r24, 0xFF	; 255
 73e:	9f ef       	ldi	r25, 0xFF	; 255
 740:	df 91       	pop	r29
 742:	cf 91       	pop	r28
 744:	1f 91       	pop	r17
 746:	0f 91       	pop	r16
 748:	08 95       	ret

0000074a <vfprintf>:
 74a:	ac e0       	ldi	r26, 0x0C	; 12
 74c:	b0 e0       	ldi	r27, 0x00	; 0
 74e:	ea ea       	ldi	r30, 0xAA	; 170
 750:	f3 e0       	ldi	r31, 0x03	; 3
 752:	85 c2       	rjmp	.+1290   	; 0xc5e <__prologue_saves__>
 754:	7c 01       	movw	r14, r24
 756:	6b 01       	movw	r12, r22
 758:	8a 01       	movw	r16, r20
 75a:	fc 01       	movw	r30, r24
 75c:	17 82       	std	Z+7, r1	; 0x07
 75e:	16 82       	std	Z+6, r1	; 0x06
 760:	83 81       	ldd	r24, Z+3	; 0x03
 762:	81 ff       	sbrs	r24, 1
 764:	b0 c1       	rjmp	.+864    	; 0xac6 <vfprintf+0x37c>
 766:	ce 01       	movw	r24, r28
 768:	01 96       	adiw	r24, 0x01	; 1
 76a:	4c 01       	movw	r8, r24
 76c:	f7 01       	movw	r30, r14
 76e:	93 81       	ldd	r25, Z+3	; 0x03
 770:	f6 01       	movw	r30, r12
 772:	93 fd       	sbrc	r25, 3
 774:	85 91       	lpm	r24, Z+
 776:	93 ff       	sbrs	r25, 3
 778:	81 91       	ld	r24, Z+
 77a:	6f 01       	movw	r12, r30
 77c:	88 23       	and	r24, r24
 77e:	09 f4       	brne	.+2      	; 0x782 <vfprintf+0x38>
 780:	9e c1       	rjmp	.+828    	; 0xabe <vfprintf+0x374>
 782:	85 32       	cpi	r24, 0x25	; 37
 784:	39 f4       	brne	.+14     	; 0x794 <vfprintf+0x4a>
 786:	93 fd       	sbrc	r25, 3
 788:	85 91       	lpm	r24, Z+
 78a:	93 ff       	sbrs	r25, 3
 78c:	81 91       	ld	r24, Z+
 78e:	6f 01       	movw	r12, r30
 790:	85 32       	cpi	r24, 0x25	; 37
 792:	21 f4       	brne	.+8      	; 0x79c <vfprintf+0x52>
 794:	b7 01       	movw	r22, r14
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	d2 d1       	rcall	.+932    	; 0xb3e <fputc>
 79a:	e8 cf       	rjmp	.-48     	; 0x76c <vfprintf+0x22>
 79c:	51 2c       	mov	r5, r1
 79e:	31 2c       	mov	r3, r1
 7a0:	20 e0       	ldi	r18, 0x00	; 0
 7a2:	20 32       	cpi	r18, 0x20	; 32
 7a4:	a0 f4       	brcc	.+40     	; 0x7ce <vfprintf+0x84>
 7a6:	8b 32       	cpi	r24, 0x2B	; 43
 7a8:	69 f0       	breq	.+26     	; 0x7c4 <vfprintf+0x7a>
 7aa:	30 f4       	brcc	.+12     	; 0x7b8 <vfprintf+0x6e>
 7ac:	80 32       	cpi	r24, 0x20	; 32
 7ae:	59 f0       	breq	.+22     	; 0x7c6 <vfprintf+0x7c>
 7b0:	83 32       	cpi	r24, 0x23	; 35
 7b2:	69 f4       	brne	.+26     	; 0x7ce <vfprintf+0x84>
 7b4:	20 61       	ori	r18, 0x10	; 16
 7b6:	2c c0       	rjmp	.+88     	; 0x810 <vfprintf+0xc6>
 7b8:	8d 32       	cpi	r24, 0x2D	; 45
 7ba:	39 f0       	breq	.+14     	; 0x7ca <vfprintf+0x80>
 7bc:	80 33       	cpi	r24, 0x30	; 48
 7be:	39 f4       	brne	.+14     	; 0x7ce <vfprintf+0x84>
 7c0:	21 60       	ori	r18, 0x01	; 1
 7c2:	26 c0       	rjmp	.+76     	; 0x810 <vfprintf+0xc6>
 7c4:	22 60       	ori	r18, 0x02	; 2
 7c6:	24 60       	ori	r18, 0x04	; 4
 7c8:	23 c0       	rjmp	.+70     	; 0x810 <vfprintf+0xc6>
 7ca:	28 60       	ori	r18, 0x08	; 8
 7cc:	21 c0       	rjmp	.+66     	; 0x810 <vfprintf+0xc6>
 7ce:	27 fd       	sbrc	r18, 7
 7d0:	27 c0       	rjmp	.+78     	; 0x820 <vfprintf+0xd6>
 7d2:	30 ed       	ldi	r19, 0xD0	; 208
 7d4:	38 0f       	add	r19, r24
 7d6:	3a 30       	cpi	r19, 0x0A	; 10
 7d8:	78 f4       	brcc	.+30     	; 0x7f8 <vfprintf+0xae>
 7da:	26 ff       	sbrs	r18, 6
 7dc:	06 c0       	rjmp	.+12     	; 0x7ea <vfprintf+0xa0>
 7de:	fa e0       	ldi	r31, 0x0A	; 10
 7e0:	5f 9e       	mul	r5, r31
 7e2:	30 0d       	add	r19, r0
 7e4:	11 24       	eor	r1, r1
 7e6:	53 2e       	mov	r5, r19
 7e8:	13 c0       	rjmp	.+38     	; 0x810 <vfprintf+0xc6>
 7ea:	8a e0       	ldi	r24, 0x0A	; 10
 7ec:	38 9e       	mul	r3, r24
 7ee:	30 0d       	add	r19, r0
 7f0:	11 24       	eor	r1, r1
 7f2:	33 2e       	mov	r3, r19
 7f4:	20 62       	ori	r18, 0x20	; 32
 7f6:	0c c0       	rjmp	.+24     	; 0x810 <vfprintf+0xc6>
 7f8:	8e 32       	cpi	r24, 0x2E	; 46
 7fa:	21 f4       	brne	.+8      	; 0x804 <vfprintf+0xba>
 7fc:	26 fd       	sbrc	r18, 6
 7fe:	5f c1       	rjmp	.+702    	; 0xabe <vfprintf+0x374>
 800:	20 64       	ori	r18, 0x40	; 64
 802:	06 c0       	rjmp	.+12     	; 0x810 <vfprintf+0xc6>
 804:	8c 36       	cpi	r24, 0x6C	; 108
 806:	11 f4       	brne	.+4      	; 0x80c <vfprintf+0xc2>
 808:	20 68       	ori	r18, 0x80	; 128
 80a:	02 c0       	rjmp	.+4      	; 0x810 <vfprintf+0xc6>
 80c:	88 36       	cpi	r24, 0x68	; 104
 80e:	41 f4       	brne	.+16     	; 0x820 <vfprintf+0xd6>
 810:	f6 01       	movw	r30, r12
 812:	93 fd       	sbrc	r25, 3
 814:	85 91       	lpm	r24, Z+
 816:	93 ff       	sbrs	r25, 3
 818:	81 91       	ld	r24, Z+
 81a:	6f 01       	movw	r12, r30
 81c:	81 11       	cpse	r24, r1
 81e:	c1 cf       	rjmp	.-126    	; 0x7a2 <vfprintf+0x58>
 820:	98 2f       	mov	r25, r24
 822:	9f 7d       	andi	r25, 0xDF	; 223
 824:	95 54       	subi	r25, 0x45	; 69
 826:	93 30       	cpi	r25, 0x03	; 3
 828:	28 f4       	brcc	.+10     	; 0x834 <vfprintf+0xea>
 82a:	0c 5f       	subi	r16, 0xFC	; 252
 82c:	1f 4f       	sbci	r17, 0xFF	; 255
 82e:	ff e3       	ldi	r31, 0x3F	; 63
 830:	f9 83       	std	Y+1, r31	; 0x01
 832:	0d c0       	rjmp	.+26     	; 0x84e <vfprintf+0x104>
 834:	83 36       	cpi	r24, 0x63	; 99
 836:	31 f0       	breq	.+12     	; 0x844 <vfprintf+0xfa>
 838:	83 37       	cpi	r24, 0x73	; 115
 83a:	71 f0       	breq	.+28     	; 0x858 <vfprintf+0x10e>
 83c:	83 35       	cpi	r24, 0x53	; 83
 83e:	09 f0       	breq	.+2      	; 0x842 <vfprintf+0xf8>
 840:	57 c0       	rjmp	.+174    	; 0x8f0 <vfprintf+0x1a6>
 842:	21 c0       	rjmp	.+66     	; 0x886 <vfprintf+0x13c>
 844:	f8 01       	movw	r30, r16
 846:	80 81       	ld	r24, Z
 848:	89 83       	std	Y+1, r24	; 0x01
 84a:	0e 5f       	subi	r16, 0xFE	; 254
 84c:	1f 4f       	sbci	r17, 0xFF	; 255
 84e:	44 24       	eor	r4, r4
 850:	43 94       	inc	r4
 852:	51 2c       	mov	r5, r1
 854:	54 01       	movw	r10, r8
 856:	14 c0       	rjmp	.+40     	; 0x880 <vfprintf+0x136>
 858:	38 01       	movw	r6, r16
 85a:	f2 e0       	ldi	r31, 0x02	; 2
 85c:	6f 0e       	add	r6, r31
 85e:	71 1c       	adc	r7, r1
 860:	f8 01       	movw	r30, r16
 862:	a0 80       	ld	r10, Z
 864:	b1 80       	ldd	r11, Z+1	; 0x01
 866:	26 ff       	sbrs	r18, 6
 868:	03 c0       	rjmp	.+6      	; 0x870 <vfprintf+0x126>
 86a:	65 2d       	mov	r22, r5
 86c:	70 e0       	ldi	r23, 0x00	; 0
 86e:	02 c0       	rjmp	.+4      	; 0x874 <vfprintf+0x12a>
 870:	6f ef       	ldi	r22, 0xFF	; 255
 872:	7f ef       	ldi	r23, 0xFF	; 255
 874:	c5 01       	movw	r24, r10
 876:	2c 87       	std	Y+12, r18	; 0x0c
 878:	57 d1       	rcall	.+686    	; 0xb28 <strnlen>
 87a:	2c 01       	movw	r4, r24
 87c:	83 01       	movw	r16, r6
 87e:	2c 85       	ldd	r18, Y+12	; 0x0c
 880:	2f 77       	andi	r18, 0x7F	; 127
 882:	22 2e       	mov	r2, r18
 884:	16 c0       	rjmp	.+44     	; 0x8b2 <vfprintf+0x168>
 886:	38 01       	movw	r6, r16
 888:	f2 e0       	ldi	r31, 0x02	; 2
 88a:	6f 0e       	add	r6, r31
 88c:	71 1c       	adc	r7, r1
 88e:	f8 01       	movw	r30, r16
 890:	a0 80       	ld	r10, Z
 892:	b1 80       	ldd	r11, Z+1	; 0x01
 894:	26 ff       	sbrs	r18, 6
 896:	03 c0       	rjmp	.+6      	; 0x89e <vfprintf+0x154>
 898:	65 2d       	mov	r22, r5
 89a:	70 e0       	ldi	r23, 0x00	; 0
 89c:	02 c0       	rjmp	.+4      	; 0x8a2 <vfprintf+0x158>
 89e:	6f ef       	ldi	r22, 0xFF	; 255
 8a0:	7f ef       	ldi	r23, 0xFF	; 255
 8a2:	c5 01       	movw	r24, r10
 8a4:	2c 87       	std	Y+12, r18	; 0x0c
 8a6:	2e d1       	rcall	.+604    	; 0xb04 <strnlen_P>
 8a8:	2c 01       	movw	r4, r24
 8aa:	2c 85       	ldd	r18, Y+12	; 0x0c
 8ac:	20 68       	ori	r18, 0x80	; 128
 8ae:	22 2e       	mov	r2, r18
 8b0:	83 01       	movw	r16, r6
 8b2:	23 fc       	sbrc	r2, 3
 8b4:	19 c0       	rjmp	.+50     	; 0x8e8 <vfprintf+0x19e>
 8b6:	83 2d       	mov	r24, r3
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	48 16       	cp	r4, r24
 8bc:	59 06       	cpc	r5, r25
 8be:	a0 f4       	brcc	.+40     	; 0x8e8 <vfprintf+0x19e>
 8c0:	b7 01       	movw	r22, r14
 8c2:	80 e2       	ldi	r24, 0x20	; 32
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	3b d1       	rcall	.+630    	; 0xb3e <fputc>
 8c8:	3a 94       	dec	r3
 8ca:	f5 cf       	rjmp	.-22     	; 0x8b6 <vfprintf+0x16c>
 8cc:	f5 01       	movw	r30, r10
 8ce:	27 fc       	sbrc	r2, 7
 8d0:	85 91       	lpm	r24, Z+
 8d2:	27 fe       	sbrs	r2, 7
 8d4:	81 91       	ld	r24, Z+
 8d6:	5f 01       	movw	r10, r30
 8d8:	b7 01       	movw	r22, r14
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	30 d1       	rcall	.+608    	; 0xb3e <fputc>
 8de:	31 10       	cpse	r3, r1
 8e0:	3a 94       	dec	r3
 8e2:	f1 e0       	ldi	r31, 0x01	; 1
 8e4:	4f 1a       	sub	r4, r31
 8e6:	51 08       	sbc	r5, r1
 8e8:	41 14       	cp	r4, r1
 8ea:	51 04       	cpc	r5, r1
 8ec:	79 f7       	brne	.-34     	; 0x8cc <vfprintf+0x182>
 8ee:	de c0       	rjmp	.+444    	; 0xaac <vfprintf+0x362>
 8f0:	84 36       	cpi	r24, 0x64	; 100
 8f2:	11 f0       	breq	.+4      	; 0x8f8 <vfprintf+0x1ae>
 8f4:	89 36       	cpi	r24, 0x69	; 105
 8f6:	31 f5       	brne	.+76     	; 0x944 <vfprintf+0x1fa>
 8f8:	f8 01       	movw	r30, r16
 8fa:	27 ff       	sbrs	r18, 7
 8fc:	07 c0       	rjmp	.+14     	; 0x90c <vfprintf+0x1c2>
 8fe:	60 81       	ld	r22, Z
 900:	71 81       	ldd	r23, Z+1	; 0x01
 902:	82 81       	ldd	r24, Z+2	; 0x02
 904:	93 81       	ldd	r25, Z+3	; 0x03
 906:	0c 5f       	subi	r16, 0xFC	; 252
 908:	1f 4f       	sbci	r17, 0xFF	; 255
 90a:	08 c0       	rjmp	.+16     	; 0x91c <vfprintf+0x1d2>
 90c:	60 81       	ld	r22, Z
 90e:	71 81       	ldd	r23, Z+1	; 0x01
 910:	88 27       	eor	r24, r24
 912:	77 fd       	sbrc	r23, 7
 914:	80 95       	com	r24
 916:	98 2f       	mov	r25, r24
 918:	0e 5f       	subi	r16, 0xFE	; 254
 91a:	1f 4f       	sbci	r17, 0xFF	; 255
 91c:	2f 76       	andi	r18, 0x6F	; 111
 91e:	b2 2e       	mov	r11, r18
 920:	97 ff       	sbrs	r25, 7
 922:	09 c0       	rjmp	.+18     	; 0x936 <vfprintf+0x1ec>
 924:	90 95       	com	r25
 926:	80 95       	com	r24
 928:	70 95       	com	r23
 92a:	61 95       	neg	r22
 92c:	7f 4f       	sbci	r23, 0xFF	; 255
 92e:	8f 4f       	sbci	r24, 0xFF	; 255
 930:	9f 4f       	sbci	r25, 0xFF	; 255
 932:	20 68       	ori	r18, 0x80	; 128
 934:	b2 2e       	mov	r11, r18
 936:	2a e0       	ldi	r18, 0x0A	; 10
 938:	30 e0       	ldi	r19, 0x00	; 0
 93a:	a4 01       	movw	r20, r8
 93c:	32 d1       	rcall	.+612    	; 0xba2 <__ultoa_invert>
 93e:	a8 2e       	mov	r10, r24
 940:	a8 18       	sub	r10, r8
 942:	43 c0       	rjmp	.+134    	; 0x9ca <vfprintf+0x280>
 944:	85 37       	cpi	r24, 0x75	; 117
 946:	29 f4       	brne	.+10     	; 0x952 <vfprintf+0x208>
 948:	2f 7e       	andi	r18, 0xEF	; 239
 94a:	b2 2e       	mov	r11, r18
 94c:	2a e0       	ldi	r18, 0x0A	; 10
 94e:	30 e0       	ldi	r19, 0x00	; 0
 950:	25 c0       	rjmp	.+74     	; 0x99c <vfprintf+0x252>
 952:	f2 2f       	mov	r31, r18
 954:	f9 7f       	andi	r31, 0xF9	; 249
 956:	bf 2e       	mov	r11, r31
 958:	8f 36       	cpi	r24, 0x6F	; 111
 95a:	c1 f0       	breq	.+48     	; 0x98c <vfprintf+0x242>
 95c:	18 f4       	brcc	.+6      	; 0x964 <vfprintf+0x21a>
 95e:	88 35       	cpi	r24, 0x58	; 88
 960:	79 f0       	breq	.+30     	; 0x980 <vfprintf+0x236>
 962:	ad c0       	rjmp	.+346    	; 0xabe <vfprintf+0x374>
 964:	80 37       	cpi	r24, 0x70	; 112
 966:	19 f0       	breq	.+6      	; 0x96e <vfprintf+0x224>
 968:	88 37       	cpi	r24, 0x78	; 120
 96a:	21 f0       	breq	.+8      	; 0x974 <vfprintf+0x22a>
 96c:	a8 c0       	rjmp	.+336    	; 0xabe <vfprintf+0x374>
 96e:	2f 2f       	mov	r18, r31
 970:	20 61       	ori	r18, 0x10	; 16
 972:	b2 2e       	mov	r11, r18
 974:	b4 fe       	sbrs	r11, 4
 976:	0d c0       	rjmp	.+26     	; 0x992 <vfprintf+0x248>
 978:	8b 2d       	mov	r24, r11
 97a:	84 60       	ori	r24, 0x04	; 4
 97c:	b8 2e       	mov	r11, r24
 97e:	09 c0       	rjmp	.+18     	; 0x992 <vfprintf+0x248>
 980:	24 ff       	sbrs	r18, 4
 982:	0a c0       	rjmp	.+20     	; 0x998 <vfprintf+0x24e>
 984:	9f 2f       	mov	r25, r31
 986:	96 60       	ori	r25, 0x06	; 6
 988:	b9 2e       	mov	r11, r25
 98a:	06 c0       	rjmp	.+12     	; 0x998 <vfprintf+0x24e>
 98c:	28 e0       	ldi	r18, 0x08	; 8
 98e:	30 e0       	ldi	r19, 0x00	; 0
 990:	05 c0       	rjmp	.+10     	; 0x99c <vfprintf+0x252>
 992:	20 e1       	ldi	r18, 0x10	; 16
 994:	30 e0       	ldi	r19, 0x00	; 0
 996:	02 c0       	rjmp	.+4      	; 0x99c <vfprintf+0x252>
 998:	20 e1       	ldi	r18, 0x10	; 16
 99a:	32 e0       	ldi	r19, 0x02	; 2
 99c:	f8 01       	movw	r30, r16
 99e:	b7 fe       	sbrs	r11, 7
 9a0:	07 c0       	rjmp	.+14     	; 0x9b0 <vfprintf+0x266>
 9a2:	60 81       	ld	r22, Z
 9a4:	71 81       	ldd	r23, Z+1	; 0x01
 9a6:	82 81       	ldd	r24, Z+2	; 0x02
 9a8:	93 81       	ldd	r25, Z+3	; 0x03
 9aa:	0c 5f       	subi	r16, 0xFC	; 252
 9ac:	1f 4f       	sbci	r17, 0xFF	; 255
 9ae:	06 c0       	rjmp	.+12     	; 0x9bc <vfprintf+0x272>
 9b0:	60 81       	ld	r22, Z
 9b2:	71 81       	ldd	r23, Z+1	; 0x01
 9b4:	80 e0       	ldi	r24, 0x00	; 0
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	0e 5f       	subi	r16, 0xFE	; 254
 9ba:	1f 4f       	sbci	r17, 0xFF	; 255
 9bc:	a4 01       	movw	r20, r8
 9be:	f1 d0       	rcall	.+482    	; 0xba2 <__ultoa_invert>
 9c0:	a8 2e       	mov	r10, r24
 9c2:	a8 18       	sub	r10, r8
 9c4:	fb 2d       	mov	r31, r11
 9c6:	ff 77       	andi	r31, 0x7F	; 127
 9c8:	bf 2e       	mov	r11, r31
 9ca:	b6 fe       	sbrs	r11, 6
 9cc:	0b c0       	rjmp	.+22     	; 0x9e4 <vfprintf+0x29a>
 9ce:	2b 2d       	mov	r18, r11
 9d0:	2e 7f       	andi	r18, 0xFE	; 254
 9d2:	a5 14       	cp	r10, r5
 9d4:	50 f4       	brcc	.+20     	; 0x9ea <vfprintf+0x2a0>
 9d6:	b4 fe       	sbrs	r11, 4
 9d8:	0a c0       	rjmp	.+20     	; 0x9ee <vfprintf+0x2a4>
 9da:	b2 fc       	sbrc	r11, 2
 9dc:	08 c0       	rjmp	.+16     	; 0x9ee <vfprintf+0x2a4>
 9de:	2b 2d       	mov	r18, r11
 9e0:	2e 7e       	andi	r18, 0xEE	; 238
 9e2:	05 c0       	rjmp	.+10     	; 0x9ee <vfprintf+0x2a4>
 9e4:	7a 2c       	mov	r7, r10
 9e6:	2b 2d       	mov	r18, r11
 9e8:	03 c0       	rjmp	.+6      	; 0x9f0 <vfprintf+0x2a6>
 9ea:	7a 2c       	mov	r7, r10
 9ec:	01 c0       	rjmp	.+2      	; 0x9f0 <vfprintf+0x2a6>
 9ee:	75 2c       	mov	r7, r5
 9f0:	24 ff       	sbrs	r18, 4
 9f2:	0d c0       	rjmp	.+26     	; 0xa0e <vfprintf+0x2c4>
 9f4:	fe 01       	movw	r30, r28
 9f6:	ea 0d       	add	r30, r10
 9f8:	f1 1d       	adc	r31, r1
 9fa:	80 81       	ld	r24, Z
 9fc:	80 33       	cpi	r24, 0x30	; 48
 9fe:	11 f4       	brne	.+4      	; 0xa04 <vfprintf+0x2ba>
 a00:	29 7e       	andi	r18, 0xE9	; 233
 a02:	09 c0       	rjmp	.+18     	; 0xa16 <vfprintf+0x2cc>
 a04:	22 ff       	sbrs	r18, 2
 a06:	06 c0       	rjmp	.+12     	; 0xa14 <vfprintf+0x2ca>
 a08:	73 94       	inc	r7
 a0a:	73 94       	inc	r7
 a0c:	04 c0       	rjmp	.+8      	; 0xa16 <vfprintf+0x2cc>
 a0e:	82 2f       	mov	r24, r18
 a10:	86 78       	andi	r24, 0x86	; 134
 a12:	09 f0       	breq	.+2      	; 0xa16 <vfprintf+0x2cc>
 a14:	73 94       	inc	r7
 a16:	23 fd       	sbrc	r18, 3
 a18:	12 c0       	rjmp	.+36     	; 0xa3e <vfprintf+0x2f4>
 a1a:	20 ff       	sbrs	r18, 0
 a1c:	06 c0       	rjmp	.+12     	; 0xa2a <vfprintf+0x2e0>
 a1e:	5a 2c       	mov	r5, r10
 a20:	73 14       	cp	r7, r3
 a22:	18 f4       	brcc	.+6      	; 0xa2a <vfprintf+0x2e0>
 a24:	53 0c       	add	r5, r3
 a26:	57 18       	sub	r5, r7
 a28:	73 2c       	mov	r7, r3
 a2a:	73 14       	cp	r7, r3
 a2c:	60 f4       	brcc	.+24     	; 0xa46 <vfprintf+0x2fc>
 a2e:	b7 01       	movw	r22, r14
 a30:	80 e2       	ldi	r24, 0x20	; 32
 a32:	90 e0       	ldi	r25, 0x00	; 0
 a34:	2c 87       	std	Y+12, r18	; 0x0c
 a36:	83 d0       	rcall	.+262    	; 0xb3e <fputc>
 a38:	73 94       	inc	r7
 a3a:	2c 85       	ldd	r18, Y+12	; 0x0c
 a3c:	f6 cf       	rjmp	.-20     	; 0xa2a <vfprintf+0x2e0>
 a3e:	73 14       	cp	r7, r3
 a40:	10 f4       	brcc	.+4      	; 0xa46 <vfprintf+0x2fc>
 a42:	37 18       	sub	r3, r7
 a44:	01 c0       	rjmp	.+2      	; 0xa48 <vfprintf+0x2fe>
 a46:	31 2c       	mov	r3, r1
 a48:	24 ff       	sbrs	r18, 4
 a4a:	11 c0       	rjmp	.+34     	; 0xa6e <vfprintf+0x324>
 a4c:	b7 01       	movw	r22, r14
 a4e:	80 e3       	ldi	r24, 0x30	; 48
 a50:	90 e0       	ldi	r25, 0x00	; 0
 a52:	2c 87       	std	Y+12, r18	; 0x0c
 a54:	74 d0       	rcall	.+232    	; 0xb3e <fputc>
 a56:	2c 85       	ldd	r18, Y+12	; 0x0c
 a58:	22 ff       	sbrs	r18, 2
 a5a:	16 c0       	rjmp	.+44     	; 0xa88 <vfprintf+0x33e>
 a5c:	21 ff       	sbrs	r18, 1
 a5e:	03 c0       	rjmp	.+6      	; 0xa66 <vfprintf+0x31c>
 a60:	88 e5       	ldi	r24, 0x58	; 88
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	02 c0       	rjmp	.+4      	; 0xa6a <vfprintf+0x320>
 a66:	88 e7       	ldi	r24, 0x78	; 120
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	b7 01       	movw	r22, r14
 a6c:	0c c0       	rjmp	.+24     	; 0xa86 <vfprintf+0x33c>
 a6e:	82 2f       	mov	r24, r18
 a70:	86 78       	andi	r24, 0x86	; 134
 a72:	51 f0       	breq	.+20     	; 0xa88 <vfprintf+0x33e>
 a74:	21 fd       	sbrc	r18, 1
 a76:	02 c0       	rjmp	.+4      	; 0xa7c <vfprintf+0x332>
 a78:	80 e2       	ldi	r24, 0x20	; 32
 a7a:	01 c0       	rjmp	.+2      	; 0xa7e <vfprintf+0x334>
 a7c:	8b e2       	ldi	r24, 0x2B	; 43
 a7e:	27 fd       	sbrc	r18, 7
 a80:	8d e2       	ldi	r24, 0x2D	; 45
 a82:	b7 01       	movw	r22, r14
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	5b d0       	rcall	.+182    	; 0xb3e <fputc>
 a88:	a5 14       	cp	r10, r5
 a8a:	30 f4       	brcc	.+12     	; 0xa98 <vfprintf+0x34e>
 a8c:	b7 01       	movw	r22, r14
 a8e:	80 e3       	ldi	r24, 0x30	; 48
 a90:	90 e0       	ldi	r25, 0x00	; 0
 a92:	55 d0       	rcall	.+170    	; 0xb3e <fputc>
 a94:	5a 94       	dec	r5
 a96:	f8 cf       	rjmp	.-16     	; 0xa88 <vfprintf+0x33e>
 a98:	aa 94       	dec	r10
 a9a:	f4 01       	movw	r30, r8
 a9c:	ea 0d       	add	r30, r10
 a9e:	f1 1d       	adc	r31, r1
 aa0:	80 81       	ld	r24, Z
 aa2:	b7 01       	movw	r22, r14
 aa4:	90 e0       	ldi	r25, 0x00	; 0
 aa6:	4b d0       	rcall	.+150    	; 0xb3e <fputc>
 aa8:	a1 10       	cpse	r10, r1
 aaa:	f6 cf       	rjmp	.-20     	; 0xa98 <vfprintf+0x34e>
 aac:	33 20       	and	r3, r3
 aae:	09 f4       	brne	.+2      	; 0xab2 <vfprintf+0x368>
 ab0:	5d ce       	rjmp	.-838    	; 0x76c <vfprintf+0x22>
 ab2:	b7 01       	movw	r22, r14
 ab4:	80 e2       	ldi	r24, 0x20	; 32
 ab6:	90 e0       	ldi	r25, 0x00	; 0
 ab8:	42 d0       	rcall	.+132    	; 0xb3e <fputc>
 aba:	3a 94       	dec	r3
 abc:	f7 cf       	rjmp	.-18     	; 0xaac <vfprintf+0x362>
 abe:	f7 01       	movw	r30, r14
 ac0:	86 81       	ldd	r24, Z+6	; 0x06
 ac2:	97 81       	ldd	r25, Z+7	; 0x07
 ac4:	02 c0       	rjmp	.+4      	; 0xaca <vfprintf+0x380>
 ac6:	8f ef       	ldi	r24, 0xFF	; 255
 ac8:	9f ef       	ldi	r25, 0xFF	; 255
 aca:	2c 96       	adiw	r28, 0x0c	; 12
 acc:	e2 e1       	ldi	r30, 0x12	; 18
 ace:	e3 c0       	rjmp	.+454    	; 0xc96 <__epilogue_restores__>

00000ad0 <calloc>:
 ad0:	0f 93       	push	r16
 ad2:	1f 93       	push	r17
 ad4:	cf 93       	push	r28
 ad6:	df 93       	push	r29
 ad8:	86 9f       	mul	r24, r22
 ada:	80 01       	movw	r16, r0
 adc:	87 9f       	mul	r24, r23
 ade:	10 0d       	add	r17, r0
 ae0:	96 9f       	mul	r25, r22
 ae2:	10 0d       	add	r17, r0
 ae4:	11 24       	eor	r1, r1
 ae6:	c8 01       	movw	r24, r16
 ae8:	81 dc       	rcall	.-1790   	; 0x3ec <malloc>
 aea:	ec 01       	movw	r28, r24
 aec:	00 97       	sbiw	r24, 0x00	; 0
 aee:	21 f0       	breq	.+8      	; 0xaf8 <calloc+0x28>
 af0:	a8 01       	movw	r20, r16
 af2:	60 e0       	ldi	r22, 0x00	; 0
 af4:	70 e0       	ldi	r23, 0x00	; 0
 af6:	11 d0       	rcall	.+34     	; 0xb1a <memset>
 af8:	ce 01       	movw	r24, r28
 afa:	df 91       	pop	r29
 afc:	cf 91       	pop	r28
 afe:	1f 91       	pop	r17
 b00:	0f 91       	pop	r16
 b02:	08 95       	ret

00000b04 <strnlen_P>:
 b04:	fc 01       	movw	r30, r24
 b06:	05 90       	lpm	r0, Z+
 b08:	61 50       	subi	r22, 0x01	; 1
 b0a:	70 40       	sbci	r23, 0x00	; 0
 b0c:	01 10       	cpse	r0, r1
 b0e:	d8 f7       	brcc	.-10     	; 0xb06 <strnlen_P+0x2>
 b10:	80 95       	com	r24
 b12:	90 95       	com	r25
 b14:	8e 0f       	add	r24, r30
 b16:	9f 1f       	adc	r25, r31
 b18:	08 95       	ret

00000b1a <memset>:
 b1a:	dc 01       	movw	r26, r24
 b1c:	01 c0       	rjmp	.+2      	; 0xb20 <memset+0x6>
 b1e:	6d 93       	st	X+, r22
 b20:	41 50       	subi	r20, 0x01	; 1
 b22:	50 40       	sbci	r21, 0x00	; 0
 b24:	e0 f7       	brcc	.-8      	; 0xb1e <memset+0x4>
 b26:	08 95       	ret

00000b28 <strnlen>:
 b28:	fc 01       	movw	r30, r24
 b2a:	61 50       	subi	r22, 0x01	; 1
 b2c:	70 40       	sbci	r23, 0x00	; 0
 b2e:	01 90       	ld	r0, Z+
 b30:	01 10       	cpse	r0, r1
 b32:	d8 f7       	brcc	.-10     	; 0xb2a <strnlen+0x2>
 b34:	80 95       	com	r24
 b36:	90 95       	com	r25
 b38:	8e 0f       	add	r24, r30
 b3a:	9f 1f       	adc	r25, r31
 b3c:	08 95       	ret

00000b3e <fputc>:
 b3e:	0f 93       	push	r16
 b40:	1f 93       	push	r17
 b42:	cf 93       	push	r28
 b44:	df 93       	push	r29
 b46:	18 2f       	mov	r17, r24
 b48:	09 2f       	mov	r16, r25
 b4a:	eb 01       	movw	r28, r22
 b4c:	8b 81       	ldd	r24, Y+3	; 0x03
 b4e:	81 fd       	sbrc	r24, 1
 b50:	03 c0       	rjmp	.+6      	; 0xb58 <fputc+0x1a>
 b52:	8f ef       	ldi	r24, 0xFF	; 255
 b54:	9f ef       	ldi	r25, 0xFF	; 255
 b56:	20 c0       	rjmp	.+64     	; 0xb98 <fputc+0x5a>
 b58:	82 ff       	sbrs	r24, 2
 b5a:	10 c0       	rjmp	.+32     	; 0xb7c <fputc+0x3e>
 b5c:	4e 81       	ldd	r20, Y+6	; 0x06
 b5e:	5f 81       	ldd	r21, Y+7	; 0x07
 b60:	2c 81       	ldd	r18, Y+4	; 0x04
 b62:	3d 81       	ldd	r19, Y+5	; 0x05
 b64:	42 17       	cp	r20, r18
 b66:	53 07       	cpc	r21, r19
 b68:	7c f4       	brge	.+30     	; 0xb88 <fputc+0x4a>
 b6a:	e8 81       	ld	r30, Y
 b6c:	f9 81       	ldd	r31, Y+1	; 0x01
 b6e:	9f 01       	movw	r18, r30
 b70:	2f 5f       	subi	r18, 0xFF	; 255
 b72:	3f 4f       	sbci	r19, 0xFF	; 255
 b74:	39 83       	std	Y+1, r19	; 0x01
 b76:	28 83       	st	Y, r18
 b78:	10 83       	st	Z, r17
 b7a:	06 c0       	rjmp	.+12     	; 0xb88 <fputc+0x4a>
 b7c:	e8 85       	ldd	r30, Y+8	; 0x08
 b7e:	f9 85       	ldd	r31, Y+9	; 0x09
 b80:	81 2f       	mov	r24, r17
 b82:	09 95       	icall
 b84:	89 2b       	or	r24, r25
 b86:	29 f7       	brne	.-54     	; 0xb52 <fputc+0x14>
 b88:	2e 81       	ldd	r18, Y+6	; 0x06
 b8a:	3f 81       	ldd	r19, Y+7	; 0x07
 b8c:	2f 5f       	subi	r18, 0xFF	; 255
 b8e:	3f 4f       	sbci	r19, 0xFF	; 255
 b90:	3f 83       	std	Y+7, r19	; 0x07
 b92:	2e 83       	std	Y+6, r18	; 0x06
 b94:	81 2f       	mov	r24, r17
 b96:	90 2f       	mov	r25, r16
 b98:	df 91       	pop	r29
 b9a:	cf 91       	pop	r28
 b9c:	1f 91       	pop	r17
 b9e:	0f 91       	pop	r16
 ba0:	08 95       	ret

00000ba2 <__ultoa_invert>:
 ba2:	fa 01       	movw	r30, r20
 ba4:	aa 27       	eor	r26, r26
 ba6:	28 30       	cpi	r18, 0x08	; 8
 ba8:	51 f1       	breq	.+84     	; 0xbfe <__ultoa_invert+0x5c>
 baa:	20 31       	cpi	r18, 0x10	; 16
 bac:	81 f1       	breq	.+96     	; 0xc0e <__ultoa_invert+0x6c>
 bae:	e8 94       	clt
 bb0:	6f 93       	push	r22
 bb2:	6e 7f       	andi	r22, 0xFE	; 254
 bb4:	6e 5f       	subi	r22, 0xFE	; 254
 bb6:	7f 4f       	sbci	r23, 0xFF	; 255
 bb8:	8f 4f       	sbci	r24, 0xFF	; 255
 bba:	9f 4f       	sbci	r25, 0xFF	; 255
 bbc:	af 4f       	sbci	r26, 0xFF	; 255
 bbe:	b1 e0       	ldi	r27, 0x01	; 1
 bc0:	3e d0       	rcall	.+124    	; 0xc3e <__ultoa_invert+0x9c>
 bc2:	b4 e0       	ldi	r27, 0x04	; 4
 bc4:	3c d0       	rcall	.+120    	; 0xc3e <__ultoa_invert+0x9c>
 bc6:	67 0f       	add	r22, r23
 bc8:	78 1f       	adc	r23, r24
 bca:	89 1f       	adc	r24, r25
 bcc:	9a 1f       	adc	r25, r26
 bce:	a1 1d       	adc	r26, r1
 bd0:	68 0f       	add	r22, r24
 bd2:	79 1f       	adc	r23, r25
 bd4:	8a 1f       	adc	r24, r26
 bd6:	91 1d       	adc	r25, r1
 bd8:	a1 1d       	adc	r26, r1
 bda:	6a 0f       	add	r22, r26
 bdc:	71 1d       	adc	r23, r1
 bde:	81 1d       	adc	r24, r1
 be0:	91 1d       	adc	r25, r1
 be2:	a1 1d       	adc	r26, r1
 be4:	20 d0       	rcall	.+64     	; 0xc26 <__ultoa_invert+0x84>
 be6:	09 f4       	brne	.+2      	; 0xbea <__ultoa_invert+0x48>
 be8:	68 94       	set
 bea:	3f 91       	pop	r19
 bec:	2a e0       	ldi	r18, 0x0A	; 10
 bee:	26 9f       	mul	r18, r22
 bf0:	11 24       	eor	r1, r1
 bf2:	30 19       	sub	r19, r0
 bf4:	30 5d       	subi	r19, 0xD0	; 208
 bf6:	31 93       	st	Z+, r19
 bf8:	de f6       	brtc	.-74     	; 0xbb0 <__ultoa_invert+0xe>
 bfa:	cf 01       	movw	r24, r30
 bfc:	08 95       	ret
 bfe:	46 2f       	mov	r20, r22
 c00:	47 70       	andi	r20, 0x07	; 7
 c02:	40 5d       	subi	r20, 0xD0	; 208
 c04:	41 93       	st	Z+, r20
 c06:	b3 e0       	ldi	r27, 0x03	; 3
 c08:	0f d0       	rcall	.+30     	; 0xc28 <__ultoa_invert+0x86>
 c0a:	c9 f7       	brne	.-14     	; 0xbfe <__ultoa_invert+0x5c>
 c0c:	f6 cf       	rjmp	.-20     	; 0xbfa <__ultoa_invert+0x58>
 c0e:	46 2f       	mov	r20, r22
 c10:	4f 70       	andi	r20, 0x0F	; 15
 c12:	40 5d       	subi	r20, 0xD0	; 208
 c14:	4a 33       	cpi	r20, 0x3A	; 58
 c16:	18 f0       	brcs	.+6      	; 0xc1e <__ultoa_invert+0x7c>
 c18:	49 5d       	subi	r20, 0xD9	; 217
 c1a:	31 fd       	sbrc	r19, 1
 c1c:	40 52       	subi	r20, 0x20	; 32
 c1e:	41 93       	st	Z+, r20
 c20:	02 d0       	rcall	.+4      	; 0xc26 <__ultoa_invert+0x84>
 c22:	a9 f7       	brne	.-22     	; 0xc0e <__ultoa_invert+0x6c>
 c24:	ea cf       	rjmp	.-44     	; 0xbfa <__ultoa_invert+0x58>
 c26:	b4 e0       	ldi	r27, 0x04	; 4
 c28:	a6 95       	lsr	r26
 c2a:	97 95       	ror	r25
 c2c:	87 95       	ror	r24
 c2e:	77 95       	ror	r23
 c30:	67 95       	ror	r22
 c32:	ba 95       	dec	r27
 c34:	c9 f7       	brne	.-14     	; 0xc28 <__ultoa_invert+0x86>
 c36:	00 97       	sbiw	r24, 0x00	; 0
 c38:	61 05       	cpc	r22, r1
 c3a:	71 05       	cpc	r23, r1
 c3c:	08 95       	ret
 c3e:	9b 01       	movw	r18, r22
 c40:	ac 01       	movw	r20, r24
 c42:	0a 2e       	mov	r0, r26
 c44:	06 94       	lsr	r0
 c46:	57 95       	ror	r21
 c48:	47 95       	ror	r20
 c4a:	37 95       	ror	r19
 c4c:	27 95       	ror	r18
 c4e:	ba 95       	dec	r27
 c50:	c9 f7       	brne	.-14     	; 0xc44 <__ultoa_invert+0xa2>
 c52:	62 0f       	add	r22, r18
 c54:	73 1f       	adc	r23, r19
 c56:	84 1f       	adc	r24, r20
 c58:	95 1f       	adc	r25, r21
 c5a:	a0 1d       	adc	r26, r0
 c5c:	08 95       	ret

00000c5e <__prologue_saves__>:
 c5e:	2f 92       	push	r2
 c60:	3f 92       	push	r3
 c62:	4f 92       	push	r4
 c64:	5f 92       	push	r5
 c66:	6f 92       	push	r6
 c68:	7f 92       	push	r7
 c6a:	8f 92       	push	r8
 c6c:	9f 92       	push	r9
 c6e:	af 92       	push	r10
 c70:	bf 92       	push	r11
 c72:	cf 92       	push	r12
 c74:	df 92       	push	r13
 c76:	ef 92       	push	r14
 c78:	ff 92       	push	r15
 c7a:	0f 93       	push	r16
 c7c:	1f 93       	push	r17
 c7e:	cf 93       	push	r28
 c80:	df 93       	push	r29
 c82:	cd b7       	in	r28, 0x3d	; 61
 c84:	de b7       	in	r29, 0x3e	; 62
 c86:	ca 1b       	sub	r28, r26
 c88:	db 0b       	sbc	r29, r27
 c8a:	0f b6       	in	r0, 0x3f	; 63
 c8c:	f8 94       	cli
 c8e:	de bf       	out	0x3e, r29	; 62
 c90:	0f be       	out	0x3f, r0	; 63
 c92:	cd bf       	out	0x3d, r28	; 61
 c94:	09 94       	ijmp

00000c96 <__epilogue_restores__>:
 c96:	2a 88       	ldd	r2, Y+18	; 0x12
 c98:	39 88       	ldd	r3, Y+17	; 0x11
 c9a:	48 88       	ldd	r4, Y+16	; 0x10
 c9c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c9e:	6e 84       	ldd	r6, Y+14	; 0x0e
 ca0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ca2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ca4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ca6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ca8:	b9 84       	ldd	r11, Y+9	; 0x09
 caa:	c8 84       	ldd	r12, Y+8	; 0x08
 cac:	df 80       	ldd	r13, Y+7	; 0x07
 cae:	ee 80       	ldd	r14, Y+6	; 0x06
 cb0:	fd 80       	ldd	r15, Y+5	; 0x05
 cb2:	0c 81       	ldd	r16, Y+4	; 0x04
 cb4:	1b 81       	ldd	r17, Y+3	; 0x03
 cb6:	aa 81       	ldd	r26, Y+2	; 0x02
 cb8:	b9 81       	ldd	r27, Y+1	; 0x01
 cba:	ce 0f       	add	r28, r30
 cbc:	d1 1d       	adc	r29, r1
 cbe:	0f b6       	in	r0, 0x3f	; 63
 cc0:	f8 94       	cli
 cc2:	de bf       	out	0x3e, r29	; 62
 cc4:	0f be       	out	0x3f, r0	; 63
 cc6:	cd bf       	out	0x3d, r28	; 61
 cc8:	ed 01       	movw	r28, r26
 cca:	08 95       	ret

00000ccc <_exit>:
 ccc:	f8 94       	cli

00000cce <__stop_program>:
 cce:	ff cf       	rjmp	.-2      	; 0xcce <__stop_program>
